{"swagger": "2.0", "info": {"title": "Civis Analytics API", "version": "1"}, "host": "api.civisanalytics.com", "schemes": ["https"], "produces": ["application/json"], "paths": {"/admin/dump-memory": {"post": {"summary": "Dump memory of a web server into a file in large_tmp", "parameters": [{"name": "Object0", "in": "body", "schema": {"$ref": "#/definitions/Object0"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object1"}}}}}, "/admin/announcements": {"get": {"summary": "List announcements", "parameters": [{"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 10. Maximum allowed is 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to released_at. Must be one of: released_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object2"}}}}}, "post": {"summary": "Post an announcement", "parameters": [{"name": "Object3", "in": "body", "schema": {"$ref": "#/definitions/Object3"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object2"}}}}}, "/admin/announcements/{id}": {"get": {"summary": "Get a particular announcement", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this announcement", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object2"}}}}, "patch": {"summary": "Edit an announcement", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this announcement", "type": "integer"}, {"name": "Object4", "in": "body", "schema": {"$ref": "#/definitions/Object4"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object2"}}}}, "delete": {"summary": "Delete an announcement", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this announcement", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/admin/organizations": {"get": {"summary": "List organizations", "parameters": [{"name": "status", "in": "query", "required": false, "description": "The status of the organization (active/trial/inactive).", "type": "array", "items": {"type": "string"}}, {"name": "org_type", "in": "query", "required": false, "description": "The organization type (platform/ads/survey_vendor/other).", "type": "array", "items": {"type": "string"}}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object5"}}}}}}, "/announcements/": {"get": {"summary": "List announcements", "parameters": [{"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 10. Maximum allowed is 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to released_at. Must be one of: released_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object2"}}}}}}, "/apps/": {"get": {"summary": "List apps", "parameters": [], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object6"}}}}}}, "/apps/{slug}": {"get": {"summary": "List details of a Decision Application", "parameters": [{"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object7"}}}}}, "/apps/{slug}/features/{org}": {"put": {"summary": "Update the Decision Application features for a given organization", "parameters": [{"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}, {"name": "org", "in": "path", "required": true, "description": "Organization.", "type": "string"}, {"name": "Object9", "in": "body", "schema": {"$ref": "#/definitions/Object9"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object7"}}}}}, "/apps/{slug}/instances": {"get": {"summary": "List the instances of a Decision Application", "parameters": [{"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}, {"name": "archived", "in": "query", "required": false, "description": "The archival status of the requested object(s).", "type": "string"}, {"name": "app_release_id", "in": "query", "required": false, "description": "If supplied, return only instances matching this release.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id, created_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object10"}}}}}, "post": {"summary": "Create a new instance of an application of the given slug", "parameters": [{"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}, {"name": "Object14", "in": "body", "schema": {"$ref": "#/definitions/Object14"}, "required": false}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object15"}}}}}, "/apps/{slug}/releases": {"get": {"summary": "List the releases of a particular Decision Application", "parameters": [{"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}, {"name": "archived", "in": "query", "required": false, "description": "The archival status of the requested object(s).", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object8"}}}}}, "post": {"summary": "Create a new Decision Application release", "parameters": [{"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}, {"name": "Object12", "in": "body", "schema": {"$ref": "#/definitions/Object12"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object8"}}}}}, "/apps/{slug}/releases/{id}": {"patch": {"summary": "Update an existing Decision Application release", "parameters": [{"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}, {"name": "id", "in": "path", "required": true, "description": "The unique id of the release.", "type": "integer"}, {"name": "Object13", "in": "body", "schema": {"$ref": "#/definitions/Object13"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object8"}}}}}, "/apps/{slug}/instances/{id}": {"get": {"summary": "Return a given app instance", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The unique id of the instance.", "type": "integer"}, {"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object15"}}}}, "patch": {"summary": "Update a given app instance", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The unique id of the instance.", "type": "integer"}, {"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}, {"name": "Object16", "in": "body", "schema": {"$ref": "#/definitions/Object16"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object15"}}}}}, "/apps/{slug}/releases/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The unique id of the release.", "type": "integer"}, {"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object17"}}}}}}, "/apps/{slug}/releases/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The unique id of the release.", "type": "integer"}, {"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}, {"name": "Object21", "in": "body", "schema": {"$ref": "#/definitions/Object21"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/apps/{slug}/releases/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The unique id of the release.", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}, {"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}], "responses": {"204": {"description": "success"}}}}, "/apps/{slug}/releases/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The unique id of the release.", "type": "integer"}, {"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}, {"name": "Object22", "in": "body", "schema": {"$ref": "#/definitions/Object22"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/apps/{slug}/releases/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The unique id of the release.", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}, {"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}], "responses": {"204": {"description": "success"}}}}, "/apps/{slug}/releases/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}, {"name": "Object23", "in": "body", "schema": {"$ref": "#/definitions/Object23"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object8"}}}}}, "/apps/{slug}/instances/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object17"}}}}}}, "/apps/{slug}/instances/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}, {"name": "Object24", "in": "body", "schema": {"$ref": "#/definitions/Object24"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/apps/{slug}/instances/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}, {"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}], "responses": {"204": {"description": "success"}}}}, "/apps/{slug}/instances/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}, {"name": "Object25", "in": "body", "schema": {"$ref": "#/definitions/Object25"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/apps/{slug}/instances/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}, {"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}], "responses": {"204": {"description": "success"}}}}, "/apps/{slug}/instances/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}, {"name": "Object26", "in": "body", "schema": {"$ref": "#/definitions/Object26"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object15"}}}}}, "/apps/{slug}/instances/{id}/projects": {"get": {"summary": "List the projects a AppInstance belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}, {"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object27"}}}}}}, "/apps/{slug}/instances/{id}/projects/{project_id}": {"put": {"summary": "Add a AppInstance to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}, {"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a AppInstance from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}, {"name": "slug", "in": "path", "required": true, "description": "The slug for the application.", "type": "string"}], "responses": {"204": {"description": "success"}}}}, "/bocce_clusters/": {"get": {"summary": "List Bocce Clusters", "parameters": [{"name": "organization_id", "in": "query", "required": false, "description": "The ID of the organization to list clusters for.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 50. Maximum allowed is 1000.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id, created_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object28"}}}}}, "post": {"summary": "Create Bocce Cluster", "parameters": [{"name": "Object29", "in": "body", "schema": {"$ref": "#/definitions/Object29"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object30"}}}}}, "/bocce_clusters/{id}": {"get": {"summary": "Describe a Bocce Cluster", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this cluster.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object30"}}}}, "patch": {"summary": "Modify Bocce Cluster", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this cluster.", "type": "integer"}, {"name": "Object31", "in": "body", "schema": {"$ref": "#/definitions/Object31"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object30"}}}}}, "/bocce_clusters/{id}/active_jobs": {"get": {"summary": "List Active Jobs for a Bocce Cluster", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this cluster.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object32"}}}}}, "/bocce_clusters/{id}/queued_jobs": {"get": {"summary": "List Queued Jobs for a Bocce Cluster", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this cluster.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object32"}}}}}, "/channels/": {"get": {"summary": "List available channels and provide keys for accessing them", "parameters": [], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object34"}}}}}}, "/clusters/workers": {"get": {"summary": "List Worker Clusters", "parameters": [{"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id, created_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object36"}}}}}}, "/clusters/workers/{id}": {"get": {"summary": "Describe a Worker Cluster", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this cluster.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object37"}}}}}, "/clusters/workers/{id}/active_jobs": {"get": {"summary": "List Active Jobs for a Worker Cluster", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this cluster.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object32"}}}}}, "/clusters/workers/{id}/queued_jobs": {"get": {"summary": "List Queued Jobs for a Worker Cluster", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this cluster.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object32"}}}}}, "/clusters/kubernetes": {"get": {"summary": "List Kubernetes Clusters", "parameters": [{"name": "organization_slug", "in": "query", "required": false, "description": "The slug of this cluster's organization.", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to organization_id. Must be one of: organization_id, created_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object38"}}}}}, "post": {"summary": "Create a Kubernetes Cluster", "parameters": [{"name": "Object39", "in": "body", "schema": {"$ref": "#/definitions/Object39"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object38"}}}}}, "/clusters/kubernetes/{id}": {"get": {"summary": "Describe a Kubernetes Cluster", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this cluster.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object38"}}}}, "patch": {"summary": "Update a Kubernetes Cluster", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this cluster.", "type": "integer"}, {"name": "Object40", "in": "body", "schema": {"$ref": "#/definitions/Object40"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object38"}}}}}, "/codes/": {"get": {"summary": "List codes", "parameters": [{"name": "limit", "in": "query", "required": false, "description": "The maximum number of codes to return.", "type": "integer"}, {"name": "type", "in": "query", "required": false, "description": "The code's type; e.g., Code::FrontEnd.", "type": "string"}, {"name": "featured", "in": "query", "required": false, "description": "If true, return featured codes.", "type": "boolean"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object41"}}}}}, "post": {"summary": "Create a new code", "parameters": [{"name": "Object43", "in": "body", "schema": {"$ref": "#/definitions/Object43"}, "required": true}], "responses": {"204": {"description": "success"}}}}, "/codes/{id}": {"get": {"summary": "Show basic code info", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for this code.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object42"}}}}, "put": {"summary": "Update a code", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for this code.", "type": "integer"}, {"name": "Object44", "in": "body", "schema": {"$ref": "#/definitions/Object44"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object42"}}}}, "patch": {"summary": "Update a code", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for this code.", "type": "integer"}, {"name": "Object45", "in": "body", "schema": {"$ref": "#/definitions/Object45"}, "required": false}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Delete a code", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for this code.", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/credentials/": {"get": {"summary": "List credentials", "parameters": [{"name": "type", "in": "query", "required": false, "description": "The type (or types) of credentials to return. One or more of: Amazon Web Services S3, BSD::API, CASS/NCOA PAF, Catalist::API, Catalist::SFTP, Certificate, Civis Platform, Custom, Database, Google, Github, JobTraits::Ftp, Salesforce User, Salesforce Client, Silverpop Application, Silverpop Refresh Token, Silverpop User, TableauUser, VAN::MyVoterFile, VAN::MyCampaign, and VAN::BothModes. Specify multiple values as a comma-separated list (e.g., \"A,B\").", "type": "string"}, {"name": "default", "in": "query", "required": false, "description": "If true, will return a list with a single credential which is the current user's default credential.", "type": "boolean"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 1000.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, created_at, name.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object46"}}}}}, "post": {"summary": "Create a credential", "parameters": [{"name": "Object47", "in": "body", "schema": {"$ref": "#/definitions/Object47"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object46"}}}}}, "/credentials/{id}": {"put": {"summary": "Update an existing credential", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the credential.", "type": "integer"}, {"name": "Object48", "in": "body", "schema": {"$ref": "#/definitions/Object48"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object46"}}}}, "get": {"summary": "Get a credential", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the credential.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object46"}}}}}, "/credentials/authenticate": {"post": {"summary": "Authenticate against a remote host", "parameters": [{"name": "Object49", "in": "body", "schema": {"$ref": "#/definitions/Object49"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object46"}}}}}, "/credentials/{id}/temporary": {"post": {"summary": "Generate a temporary credential for accessing S3", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the credential.", "type": "integer"}, {"name": "Object50", "in": "body", "schema": {"$ref": "#/definitions/Object50"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object51"}}}}}, "/credentials/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object17"}}}}}}, "/credentials/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object52", "in": "body", "schema": {"$ref": "#/definitions/Object52"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/credentials/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/credentials/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object53", "in": "body", "schema": {"$ref": "#/definitions/Object53"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/credentials/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/databases/": {"get": {"summary": "List databases", "parameters": [], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object54"}}}}}}, "/databases/{id}/schemas": {"get": {"summary": "List schemas in this database", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the database.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object55"}}}}}}, "/databases/{id}/tables": {"get": {"summary": "List tables in the specified database, deprecated use \"GET /tables\" instead", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the database.", "type": "integer"}, {"name": "name", "in": "query", "required": false, "description": "If specified, will be used to filter the tables returned. Substring matching is supported (e.g., \"name=table\" will return both \"table1\" and \"my table\").", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 200. Maximum allowed is 1000.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to name. Must be one of: name.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object56"}}}}}}, "/databases/{id}/tables-search": {"get": {"summary": "List tables in the specified database, deprecated use \"GET /tables\" instead", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the database.", "type": "integer"}, {"name": "name", "in": "query", "required": false, "description": "If specified, will be used to filter the tables returned. Substring matching is supported (e.g., \"name=table\" will return both \"table1\" and \"my table\").", "type": "string"}, {"name": "column_name", "in": "query", "required": false, "description": "Search for tables containing a column with the given name.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object57"}}}}}}, "/databases/{id}/whitelist-ips": {"get": {"summary": "List whitelisted IPs for the specified database", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the database.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object58"}}}}}, "post": {"summary": "Whitelist an IP address", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the database this rule is applied to.", "type": "integer"}, {"name": "Object60", "in": "body", "schema": {"$ref": "#/definitions/Object60"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object59"}}}}}, "/databases/{id}/whitelist-ips/{whitelisted_ip_id}": {"get": {"summary": "View details about a whitelisted IP", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the database this rule is applied to.", "type": "integer"}, {"name": "whitelisted_ip_id", "in": "path", "required": true, "description": "The ID of this whitelisted IP address.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object59"}}}}, "delete": {"summary": "Remove a whitelisted IP address", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the database this rule is applied to.", "type": "integer"}, {"name": "whitelisted_ip_id", "in": "path", "required": true, "description": "The ID of this whitelisted IP address.", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/endpoints/": {"get": {"summary": "List API endpoints", "parameters": [], "responses": {"200": {"description": "success"}}}}, "/enhancements/types": {"get": {"summary": "List available enhancement types", "parameters": [], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object61"}}}}}}, "/enhancements/": {"get": {"summary": "List Enhancements", "parameters": [{"name": "type", "in": "query", "required": false, "description": "If specified, return objects of these types.", "type": "string"}, {"name": "author", "in": "query", "required": false, "description": "If specified, return objects from this author. Must use user IDs. A comma separated list of IDs is also accepted to return objects from multiple authors.", "type": "string"}, {"name": "status", "in": "query", "required": false, "description": "If specified, returns objects with one of these statuses. It accepts a comma-separated list, possible values are 'running', 'failed', 'succeeded', 'idle', 'scheduled'.", "type": "string"}, {"name": "archived", "in": "query", "required": false, "description": "The archival status of the requested object(s).", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, name, created_at, last_run.updated_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object62"}}}}}}, "/enhancements/cass-ncoa": {"post": {"summary": "Create a CASS/NCOA Enhancement", "parameters": [{"name": "Object63", "in": "body", "schema": {"$ref": "#/definitions/Object63"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object71"}}}}}, "/enhancements/cass-ncoa/{id}": {"get": {"summary": "Get a CASS/NCOA Enhancement", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object71"}}}}, "put": {"summary": "Replace all attributes of this CASS/NCOA Enhancement", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the enhancement.", "type": "integer"}, {"name": "Object79", "in": "body", "schema": {"$ref": "#/definitions/Object79"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object71"}}}}, "patch": {"summary": "Update some attributes of this CASS/NCOA Enhancement", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the enhancement.", "type": "integer"}, {"name": "Object80", "in": "body", "schema": {"$ref": "#/definitions/Object80"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object71"}}}}}, "/enhancements/cass-ncoa/{id}/runs": {"post": {"summary": "Start a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the cass_ncoa.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object81"}}}}, "get": {"summary": "List runs for the given cass_ncoa", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the cass_ncoa.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object81"}}}}}}, "/enhancements/cass-ncoa/{id}/runs/{run_id}": {"get": {"summary": "Check status of a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the cass_ncoa.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object81"}}}}, "delete": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the cass_ncoa.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"202": {"description": "success"}}}}, "/enhancements/cass-ncoa/{id}/runs/{run_id}/logs": {"get": {"summary": "Get the logs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the cass_ncoa.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "last_id", "in": "query", "required": false, "description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "The maximum number of log messages to return. Default of 10000.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object82"}}}}}}, "/enhancements/cass-ncoa/{id}/cancel": {"post": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the job.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object83"}}}}}, "/enhancements/cass-ncoa/{id}/runs/{run_id}/outputs": {"get": {"summary": "List the outputs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the job.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to created_at. Must be one of: created_at, id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object84"}}}}}}, "/enhancements/cass-ncoa/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object17"}}}}}}, "/enhancements/cass-ncoa/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object52", "in": "body", "schema": {"$ref": "#/definitions/Object52"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/enhancements/cass-ncoa/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/enhancements/cass-ncoa/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object53", "in": "body", "schema": {"$ref": "#/definitions/Object53"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/enhancements/cass-ncoa/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/enhancements/cass-ncoa/{id}/projects": {"get": {"summary": "List the projects a JobTypes::CassNcoa belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object27"}}}}}}, "/enhancements/cass-ncoa/{id}/projects/{project_id}": {"put": {"summary": "Add a JobTypes::CassNcoa to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a JobTypes::CassNcoa from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/enhancements/cass-ncoa/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object85", "in": "body", "schema": {"$ref": "#/definitions/Object85"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object71"}}}}}, "/exports/": {"get": {"summary": "List ", "parameters": [{"name": "type", "in": "query", "required": false, "description": "If specified, return exports of these types. It accepts a comma-separated list, possible values are 'database' and 'gdoc'.", "type": "string"}, {"name": "author", "in": "query", "required": false, "description": "If specified, return exports from this author. It accepts a comma-separated list of author ids.", "type": "string"}, {"name": "status", "in": "query", "required": false, "description": "If specified, returns export with one of these statuses. It accepts a comma-separated list, possible values are 'running', 'failed', 'succeeded', 'idle', 'scheduled'.", "type": "string"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}, {"name": "archived", "in": "query", "required": false, "description": "The archival status of the requested object(s).", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, name, created_at, last_run.updated_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object86"}}}}}}, "/feature_flags/": {"get": {"summary": "List feature flags", "parameters": [], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object87"}}}}}}, "/feature_flags/{name}": {"get": {"summary": "Show a feature flag", "parameters": [{"name": "name", "in": "path", "required": true, "description": "The name of the feature flag.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object88"}}}}}, "/feature_flags/{flag_name}/users/{user_id}": {"put": {"summary": "Activate a feature for a user", "parameters": [{"name": "flag_name", "in": "path", "required": true, "description": "The feature flag name.", "type": "string"}, {"name": "user_id", "in": "path", "required": true, "description": "The user ID.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object87"}}}}, "delete": {"summary": "Deactivate a feature for a user", "parameters": [{"name": "flag_name", "in": "path", "required": true, "description": "The feature flag name.", "type": "string"}, {"name": "user_id", "in": "path", "required": true, "description": "The user ID.", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/feature_flags/{flag_name}/groups/{group_id}": {"put": {"summary": "Activate a feature for a group", "parameters": [{"name": "flag_name", "in": "path", "required": true, "description": "The feature flag name.", "type": "string"}, {"name": "group_id", "in": "path", "required": true, "description": "Group ID.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object87"}}}}, "delete": {"summary": "Deactivate a feature for a group", "parameters": [{"name": "flag_name", "in": "path", "required": true, "description": "The feature flag name.", "type": "string"}, {"name": "group_id", "in": "path", "required": true, "description": "Group ID.", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/files/{id}/projects": {"get": {"summary": "List the projects a Data::S3File belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object27"}}}}}}, "/files/{id}/projects/{project_id}": {"put": {"summary": "Add a Data::S3File to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a Data::S3File from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/files/": {"post": {"summary": "Initiate an upload of a file into the platform", "parameters": [{"name": "Object91", "in": "body", "schema": {"$ref": "#/definitions/Object91"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object92"}}}}}, "/files/{id}": {"get": {"summary": "Get details about a file", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the file object.", "type": "integer"}, {"name": "link_expires_at", "in": "query", "required": false, "description": "The date and time the download link will expire. Must be a time between now and 36 hours from now. Defaults to 30 minutes from now.", "type": "string", "format": "date-time"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object93"}}}}}, "/files/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object17"}}}}}}, "/files/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object52", "in": "body", "schema": {"$ref": "#/definitions/Object52"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/files/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/files/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object53", "in": "body", "schema": {"$ref": "#/definitions/Object53"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/files/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/groups/": {"get": {"summary": "List Groups", "parameters": [{"name": "query", "in": "query", "required": false, "description": "If specified, it will filter the groups returned. Prefix matching is supported (e.g., \"query=group\" will return \"group\" and \"group of people\", but not \"my group\".", "type": "string"}, {"name": "permission", "in": "query", "required": false, "description": "A permissions string, one of \"read\", \"write\", or \"manage\". Lists only groups for which the current user has that permission.", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 50. Maximum allowed is 1000.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to name. Must be one of: name, created_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object94"}}}}}}, "/imports/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object17"}}}}}}, "/imports/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object52", "in": "body", "schema": {"$ref": "#/definitions/Object52"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/imports/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/imports/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object53", "in": "body", "schema": {"$ref": "#/definitions/Object53"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/imports/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/imports/{id}/projects": {"get": {"summary": "List the projects a JobTypes::Import belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object27"}}}}}}, "/imports/{id}/projects/{project_id}": {"put": {"summary": "Add a JobTypes::Import to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a JobTypes::Import from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/imports/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object99", "in": "body", "schema": {"$ref": "#/definitions/Object99"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object100"}}}}}, "/imports/": {"get": {"summary": "List ", "parameters": [{"name": "type", "in": "query", "required": false, "description": "If specified, return imports of these types. It accepts a comma-separated list, possible values are 'AutoImport', 'DbSync', 'Salesforce', 'GdocImport'.", "type": "string"}, {"name": "author", "in": "query", "required": false, "description": "If specified, return imports from this author. It accepts a comma-separated list of author ids.", "type": "string"}, {"name": "destination", "in": "query", "required": false, "description": "If specified, returns imports with one of these destinations. It accepts a comma-separated list of remote host ids.", "type": "string"}, {"name": "status", "in": "query", "required": false, "description": "If specified, returns imports with one of these statuses. It accepts a comma-separated list, possible values are 'running', 'failed', 'succeeded', 'idle', 'scheduled'.", "type": "string"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}, {"name": "archived", "in": "query", "required": false, "description": "The archival status of the requested object(s).", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, name, created_at, last_run.updated_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object112"}}}}}, "post": {"summary": "Create a new import configuration", "parameters": [{"name": "Object113", "in": "body", "schema": {"$ref": "#/definitions/Object113"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object100"}}}}}, "/imports/files": {"post": {"summary": "Initate an import of a tabular file into the platform", "parameters": [{"name": "Object115", "in": "body", "schema": {"$ref": "#/definitions/Object115"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object116"}}}}}, "/imports/files/{id}/runs": {"post": {"summary": "Start a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the import.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object117"}}}}, "get": {"summary": "List runs for the given import", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the import.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object117"}}}}}}, "/imports/files/{id}/runs/{run_id}": {"get": {"summary": "Check status of a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the import.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object117"}}}}, "delete": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the import.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"202": {"description": "success"}}}}, "/imports/files/{id}/runs/{run_id}/logs": {"get": {"summary": "Get the logs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the import.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "last_id", "in": "query", "required": false, "description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "The maximum number of log messages to return. Default of 10000.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object82"}}}}}}, "/imports/{id}/runs/{run_id}/logs": {"get": {"summary": "Get the logs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the import.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "last_id", "in": "query", "required": false, "description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "The maximum number of log messages to return. Default of 10000.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object82"}}}}}}, "/imports/batches": {"get": {"summary": "List batch imports", "parameters": [{"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, created_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object118"}}}}}, "post": {"summary": "Upload multiple files to Redshift", "parameters": [{"name": "Object120", "in": "body", "schema": {"$ref": "#/definitions/Object120"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object119"}}}}}, "/imports/batches/{id}": {"get": {"summary": "Get details about a batch import", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the import.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object119"}}}}}, "/imports/{id}": {"get": {"summary": "Get details about an import", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the import.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object100"}}}}, "put": {"summary": "Update an import", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the import.", "type": "integer"}, {"name": "Object121", "in": "body", "schema": {"$ref": "#/definitions/Object121"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object100"}}}}}, "/imports/{id}/runs": {"get": {"summary": "Get the run history of this import", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object33"}}}}}, "post": {"summary": "Run an import", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the import to run.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object122"}}}}}, "/imports/{id}/cancel": {"post": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the job.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object123"}}}}}, "/imports/{id}/syncs": {"post": {"summary": "Create a sync", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}, {"name": "Object124", "in": "body", "schema": {"$ref": "#/definitions/Object124"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object102"}}}}}, "/imports/{id}/syncs/{sync_id}": {"put": {"summary": "Update a sync", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the import to fetch.", "type": "integer"}, {"name": "sync_id", "in": "path", "required": true, "description": "The ID of the sync to fetch.", "type": "integer"}, {"name": "Object134", "in": "body", "schema": {"$ref": "#/definitions/Object134"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object102"}}}}, "delete": {"summary": "Archive a sync (deprecated, use the /archive endpoint instead)", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the import to fetch.", "type": "integer"}, {"name": "sync_id", "in": "path", "required": true, "description": "The ID of the sync to fetch.", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/imports/{id}/syncs/{sync_id}/archive": {"put": {"summary": "Update the archive status of this sync", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the import to fetch.", "type": "integer"}, {"name": "sync_id", "in": "path", "required": true, "description": "The ID of the sync to fetch.", "type": "integer"}, {"name": "Object135", "in": "body", "schema": {"$ref": "#/definitions/Object135"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object102"}}}}}, "/jobs/": {"get": {"summary": "List ", "parameters": [{"name": "state", "in": "query", "required": false, "description": "The job's state. One or more of queued, running, succeeded, failed, and cancelled. Specify multiple values as a comma-separated list (e.g., \"A,B\").", "type": "string"}, {"name": "type", "in": "query", "required": false, "description": "The job's type. Specify multiple values as a comma-separated list (e.g., \"A,B\").", "type": "string"}, {"name": "q", "in": "query", "required": false, "description": "Query string to search on the id, name, and job type", "type": "string"}, {"name": "permission", "in": "query", "required": false, "description": "A permissions string, one of \"read\", \"write\", or \"manage\". Lists only jobs for which the current user has that permission.", "type": "string"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}, {"name": "archived", "in": "query", "required": false, "description": "The archival status of the requested object(s).", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object136"}}}}}}, "/jobs/{id}": {"get": {"summary": "Show basic job info", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for this job.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object137"}}}}}, "/jobs/{id}/trigger_email": {"post": {"summary": "Generate and retrieve trigger email address", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for this job.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object138"}}}}}, "/jobs/{id}/parents": {"get": {"summary": "Show chain of parents as a list that this job triggers from", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for this job.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object137"}}}}}, "/jobs/{id}/children": {"get": {"summary": "Show nested tree of children that this job triggers", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for this job.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object139"}}}}}, "/jobs/{id}/runs": {"post": {"summary": "Run a job", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for this job.", "type": "integer"}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object33"}}}}}, "/jobs/{id}/runs/{run_id}": {"get": {"summary": "Check status of a job", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the Job.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the Run.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object33"}}}}}, "/jobs/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object17"}}}}}}, "/jobs/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object52", "in": "body", "schema": {"$ref": "#/definitions/Object52"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/jobs/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/jobs/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object53", "in": "body", "schema": {"$ref": "#/definitions/Object53"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/jobs/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/jobs/{id}/projects": {"get": {"summary": "List the projects a Job belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object27"}}}}}}, "/jobs/{id}/projects/{project_id}": {"put": {"summary": "Add a Job to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a Job from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/match_targets/": {"get": {"summary": "List match targets", "parameters": [], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object140"}}}}}}, "/media/spot_orders/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object17"}}}}}}, "/media/spot_orders/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object52", "in": "body", "schema": {"$ref": "#/definitions/Object52"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/media/spot_orders/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/media/spot_orders/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object53", "in": "body", "schema": {"$ref": "#/definitions/Object53"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/media/spot_orders/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/media/spot_orders/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object141", "in": "body", "schema": {"$ref": "#/definitions/Object141"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object142"}}}}}, "/media/optimizations/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object17"}}}}}}, "/media/optimizations/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object52", "in": "body", "schema": {"$ref": "#/definitions/Object52"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/media/optimizations/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/media/optimizations/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object53", "in": "body", "schema": {"$ref": "#/definitions/Object53"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/media/optimizations/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/media/optimizations/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object143", "in": "body", "schema": {"$ref": "#/definitions/Object143"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object144"}}}}}, "/media/optimizations": {"get": {"summary": "List all optimizations", "parameters": [{"name": "archived", "in": "query", "required": false, "description": "The archival status of the requested object(s).", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to created_at. Must be one of: created_at, author, name.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object147"}}}}}, "post": {"summary": "Create a new optimization", "parameters": [{"name": "Object148", "in": "body", "schema": {"$ref": "#/definitions/Object148"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object144"}}}}}, "/media/optimizations/{id}": {"get": {"summary": "Show a single optimization", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The optimization ID.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object144"}}}}, "patch": {"summary": "Edit an existing optimization", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The optimization ID.", "type": "integer"}, {"name": "Object152", "in": "body", "schema": {"$ref": "#/definitions/Object152"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object144"}}}}}, "/media/optimizations/{id}/clone": {"post": {"summary": "Clone an existing optimization", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The optimization ID.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object144"}}}}}, "/media/optimizations/{id}/runs": {"post": {"summary": "Start a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the optimization.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object151"}}}}, "get": {"summary": "List runs for the given optimization", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the optimization.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object151"}}}}}}, "/media/optimizations/{id}/runs/{run_id}": {"get": {"summary": "Check status of a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the optimization.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object151"}}}}, "delete": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the optimization.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"202": {"description": "success"}}}}, "/media/optimizations/{id}/runs/{run_id}/logs": {"get": {"summary": "Get the logs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the optimization.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "last_id", "in": "query", "required": false, "description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "The maximum number of log messages to return. Default of 10000.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object82"}}}}}}, "/media/spot_orders": {"get": {"summary": "List all spot orders", "parameters": [{"name": "id", "in": "query", "required": false, "description": "The ID for the spot order.", "type": "integer"}, {"name": "archived", "in": "query", "required": false, "description": "The archival status of the requested object(s).", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object155"}}}}}, "post": {"summary": "Create a spot order", "parameters": [{"name": "Object156", "in": "body", "schema": {"$ref": "#/definitions/Object156"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object142"}}}}}, "/media/spot_orders/{id}": {"get": {"summary": "Show a single spot order", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the spot order.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object142"}}}}, "put": {"summary": "Edit the specified spot order", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the spot order.", "type": "integer"}, {"name": "Object157", "in": "body", "schema": {"$ref": "#/definitions/Object157"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object142"}}}}}, "/media/ratecards": {"get": {"summary": "List all ratecards", "parameters": [{"name": "filename", "in": "query", "required": false, "description": "If specified, will be used to filter the ratecards returned. Substring matching is supported with \"%\" and \"*\" wildcards (e.g., \"filename=%ratecard%\" will return both \"ratecard 1\" and \"my ratecard\").", "type": "string"}, {"name": "dma_number", "in": "query", "required": false, "description": "If specified, will be used to filter the ratecards by DMA.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object158"}}}}}}, "/media/dmas": {"get": {"summary": "List all Designated Market Areas", "parameters": [{"name": "name", "in": "query", "required": false, "description": "If specified, will be used to filter the DMAs returned. Substring matching is supported with \"%\" and \"*\" wildcards (e.g., \"name=%region%\" will return both \"region1\" and \"my region\").", "type": "string"}, {"name": "number", "in": "query", "required": false, "description": "If specified, will be used to filter the DMAS by number.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object159"}}}}}}, "/media/targets": {"get": {"summary": "List all Media Targets", "parameters": [{"name": "name", "in": "query", "required": false, "description": "The name of the target.", "type": "string"}, {"name": "identifier", "in": "query", "required": false, "description": "A unique identifier for this target.", "type": "string"}, {"name": "data_source", "in": "query", "required": false, "description": "The source of viewership data for this target.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object160"}}}}}}, "/models/types": {"get": {"summary": "List all available model types", "parameters": [], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object161"}}}}}}, "/models/": {"post": {"summary": "Create new configuration for a model", "parameters": [{"name": "Object162", "in": "body", "schema": {"$ref": "#/definitions/Object162"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object163"}}}}, "get": {"summary": "List ", "parameters": [{"name": "model_name", "in": "query", "required": false, "description": "If specified, will be used to filter the models returned. Substring matching is supported. (e.g., \"modelName=model\" will return both \"model1\" and \"my model\").", "type": "string"}, {"name": "training_table_name", "in": "query", "required": false, "description": "If specified, will be used to filter the models returned by the training dataset table name. Substring matching is supported. (e.g., \"trainingTableName=table\" will return both \"table1\" and \"my_table\").", "type": "string"}, {"name": "dependent_variable", "in": "query", "required": false, "description": "If specified, will be used to filter the models returned by the dependent variable column name. Substring matching is supported. (e.g., \"dependentVariable=predictor\" will return both \"predictor\" and \"my predictor\").", "type": "string"}, {"name": "author", "in": "query", "required": false, "description": "If specified, return models from this author. It accepts a comma-separated list of author ids.", "type": "string"}, {"name": "status", "in": "query", "required": false, "description": "If specified, returns models with one of these statuses. It accepts a comma-separated list, possible values are 'running', 'failed', 'succeeded', 'idle', 'scheduled'.", "type": "string"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}, {"name": "archived", "in": "query", "required": false, "description": "The archival status of the requested object(s).", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, name, created_at, last_run.updated_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object166"}}}}}}, "/models/{id}": {"patch": {"summary": "Update model configuration", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the model.", "type": "integer"}, {"name": "Object168", "in": "body", "schema": {"$ref": "#/definitions/Object168"}, "required": false}], "responses": {"204": {"description": "success"}}}, "get": {"summary": "Retrieve model configuration", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the model.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object163"}}}}}, "/models/{id}/builds": {"post": {"summary": "Start a build", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the model.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object169"}}}}, "get": {"summary": "List builds for the given model", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the model.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object169"}}}}}}, "/models/{id}/builds/{build_id}": {"get": {"summary": "Check status of a build", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the model.", "type": "integer"}, {"name": "build_id", "in": "path", "required": true, "description": "The ID of the build.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object169"}}}}, "delete": {"summary": "Cancel a build", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the model.", "type": "integer"}, {"name": "build_id", "in": "path", "required": true, "description": "The ID of the build.", "type": "integer"}], "responses": {"202": {"description": "success"}}}}, "/models/{id}/builds/{build_id}/logs": {"get": {"summary": "Get the logs for a build", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the model.", "type": "integer"}, {"name": "build_id", "in": "path", "required": true, "description": "The ID of the build.", "type": "integer"}, {"name": "last_id", "in": "query", "required": false, "description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "The maximum number of log messages to return. Default of 10000.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object82"}}}}}}, "/models/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object17"}}}}}}, "/models/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object52", "in": "body", "schema": {"$ref": "#/definitions/Object52"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/models/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/models/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object53", "in": "body", "schema": {"$ref": "#/definitions/Object53"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/models/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/models/{id}/projects": {"get": {"summary": "List the projects a models belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object27"}}}}}}, "/models/{id}/projects/{project_id}": {"put": {"summary": "Add a models to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a models from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/models/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object170", "in": "body", "schema": {"$ref": "#/definitions/Object170"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object163"}}}}}, "/models/{id}/predictions": {"put": {"summary": "Add a table on which to apply the predictive model", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the model to which to apply the prediction.", "type": "integer"}, {"name": "Object171", "in": "body", "schema": {"$ref": "#/definitions/Object171"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object165"}}}}}, "/models/{id}/schedules": {"get": {"summary": "Show the model build schedule", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the model associated with this schedule.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object172"}}}}, "put": {"summary": "Schedule the model build", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the model associated with this schedule.", "type": "integer"}, {"name": "Object173", "in": "body", "schema": {"$ref": "#/definitions/Object173"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object172"}}}}}, "/notebooks/": {"get": {"summary": "List Notebooks", "parameters": [{"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}, {"name": "archived", "in": "query", "required": false, "description": "The archival status of the requested object(s).", "type": "string"}, {"name": "author", "in": "query", "required": false, "description": "If specified, return imports from this author. It accepts a comma-separated list of author IDs.", "type": "string"}, {"name": "status", "in": "query", "required": false, "description": "If specified, returns notebooks with one of these statuses. It accepts a comma-separated list, possible values are 'running', 'pending', 'idle'.", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, name, created_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object174"}}}}}, "post": {"summary": "Create a Notebook", "parameters": [{"name": "Object176", "in": "body", "schema": {"$ref": "#/definitions/Object176"}, "required": false}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object177"}}}}}, "/notebooks/{id}": {"get": {"summary": "Get a Notebook", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object177"}}}}, "put": {"summary": "Replace all attributes of this Notebook", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for this notebook.", "type": "integer"}, {"name": "Object178", "in": "body", "schema": {"$ref": "#/definitions/Object178"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object177"}}}}, "patch": {"summary": "Update some attributes of this Notebook", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for this notebook.", "type": "integer"}, {"name": "Object178", "in": "body", "schema": {"$ref": "#/definitions/Object178"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object177"}}}}, "delete": {"summary": "Archive a Notebook (deprecated, use archiving endpoints instead)", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/notebooks/{id}/update-links": {"get": {"summary": "Get URLs to update notebook", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object179"}}}}}, "/notebooks/{id}/clone": {"post": {"summary": "Clone this notebook", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object177"}}}}}, "/notebooks/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object17"}}}}}}, "/notebooks/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object52", "in": "body", "schema": {"$ref": "#/definitions/Object52"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/notebooks/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/notebooks/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object53", "in": "body", "schema": {"$ref": "#/definitions/Object53"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/notebooks/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/notebooks/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object180", "in": "body", "schema": {"$ref": "#/definitions/Object180"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object177"}}}}}, "/notebooks/{id}/projects": {"get": {"summary": "List the projects a Notebook belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object27"}}}}}}, "/notebooks/{id}/projects/{project_id}": {"put": {"summary": "Add a Notebook to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a Notebook from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/notebooks/{notebook_id}/deployments": {"get": {"summary": "List deployments for a Notebook", "parameters": [{"name": "notebook_id", "in": "path", "required": true, "description": "The ID of the owning Notebook", "type": "integer"}, {"name": "deployment_id", "in": "query", "required": false, "description": "The ID for this deployment", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to created_at. Must be one of: created_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object175"}}}}}, "post": {"summary": "Deploy a Notebook", "parameters": [{"name": "notebook_id", "in": "path", "required": true, "description": "The ID of the owning Notebook", "type": "integer"}, {"name": "Object181", "in": "body", "schema": {"$ref": "#/definitions/Object181"}, "required": false}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object175"}}}}}, "/notebooks/{notebook_id}/deployments/{deployment_id}": {"get": {"summary": "Get details about a Notebook deployment", "parameters": [{"name": "notebook_id", "in": "path", "required": true, "description": "The ID of the owning Notebook", "type": "integer"}, {"name": "deployment_id", "in": "path", "required": true, "description": "The ID for this deployment", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object175"}}}}, "patch": {"summary": "Patch a Notebook deployment", "parameters": [{"name": "notebook_id", "in": "path", "required": true, "description": "The ID of the owning Notebook", "type": "integer"}, {"name": "deployment_id", "in": "path", "required": true, "description": "The ID for this deployment", "type": "integer"}, {"name": "Object182", "in": "body", "schema": {"$ref": "#/definitions/Object182"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object175"}}}}, "delete": {"summary": "Delete a Notebook deployment", "parameters": [{"name": "notebook_id", "in": "path", "required": true, "description": "The ID of the owning Notebook", "type": "integer"}, {"name": "deployment_id", "in": "path", "required": true, "description": "The ID for this deployment", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/notifications/": {"get": {"summary": "Receive a stream of notifications as they come in", "parameters": [{"name": "last_event_id", "in": "query", "required": false, "description": "allows browser to keep track of last event fired", "type": "string"}, {"name": "r", "in": "query", "required": false, "description": "specifies retry/reconnect timeout", "type": "string"}, {"name": "mock", "in": "query", "required": false, "description": "used for testing", "type": "string"}], "responses": {"200": {"description": "success"}}}}, "/ontology/": {"get": {"summary": "List the ontology of column names Civis uses", "parameters": [{"name": "subset", "in": "query", "required": false, "description": "A subset of fields to return.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object183"}}}}}}, "/predictions/": {"get": {"summary": "List predictions", "parameters": [{"name": "model_id", "in": "query", "required": false, "description": "If specified, only return predictions associated with this model ID.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object184"}}}}}}, "/predictions/{id}": {"get": {"summary": "Show the specified prediction", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the prediction.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object185"}}}}, "patch": {"summary": "Update a prediction", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the prediction.", "type": "integer"}, {"name": "Object190", "in": "body", "schema": {"$ref": "#/definitions/Object190"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object185"}}}}}, "/predictions/{id}/schedules": {"get": {"summary": "Show the prediction schedule", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the prediction associated with this schedule.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object188"}}}}, "put": {"summary": "Schedule the prediction", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the prediction associated with this schedule.", "type": "integer"}, {"name": "Object189", "in": "body", "schema": {"$ref": "#/definitions/Object189"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object188"}}}}}, "/predictions/{id}/runs": {"post": {"summary": "Start a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the prediction.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object191"}}}}, "get": {"summary": "List runs for the given prediction", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the prediction.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object191"}}}}}}, "/predictions/{id}/runs/{run_id}": {"get": {"summary": "Check status of a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the prediction.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object191"}}}}, "delete": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the prediction.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"202": {"description": "success"}}}}, "/predictions/{id}/runs/{run_id}/logs": {"get": {"summary": "Get the logs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the prediction.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "last_id", "in": "query", "required": false, "description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "The maximum number of log messages to return. Default of 10000.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object82"}}}}}}, "/projects/": {"get": {"summary": "List projects", "parameters": [{"name": "author", "in": "query", "required": false, "description": "If specified, return projects owned by this author. It accepts a comma-separated list of author ids.", "type": "string"}, {"name": "permission", "in": "query", "required": false, "description": "A permissions string, one of \"read\", \"write\", or \"manage\". Lists only projects for which the current user has that permission.", "type": "string"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}, {"name": "archived", "in": "query", "required": false, "description": "The archival status of the requested object(s).", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 1000.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, name, created_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object27"}}}}}, "post": {"summary": "Create a project", "parameters": [{"name": "Object192", "in": "body", "schema": {"$ref": "#/definitions/Object192"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object193"}}}}}, "/projects/{project_id}": {"get": {"summary": "Get a detailed view of a project and the objects in it", "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object193"}}}}, "put": {"summary": "Update a project", "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "integer"}, {"name": "Object206", "in": "body", "schema": {"$ref": "#/definitions/Object206"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object193"}}}}, "delete": {"summary": "Archive a project (deprecated, use the /archive endpoint instead)", "parameters": [{"name": "project_id", "in": "path", "required": true, "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/projects/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object17"}}}}}}, "/projects/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object52", "in": "body", "schema": {"$ref": "#/definitions/Object52"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/projects/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/projects/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object53", "in": "body", "schema": {"$ref": "#/definitions/Object53"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/projects/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/projects/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object207", "in": "body", "schema": {"$ref": "#/definitions/Object207"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object193"}}}}}, "/queries/": {"get": {"summary": "List ", "parameters": [{"name": "database_id", "in": "query", "required": false, "description": "The database ID.", "type": "integer"}, {"name": "author_id", "in": "query", "required": false, "description": "The author of the query.", "type": "integer"}, {"name": "created_before", "in": "query", "required": false, "description": "An upper bound for the creation date of the query.", "type": "string", "format": "date-time"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to created_at. Must be one of: created_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object208"}}}}}, "post": {"summary": "Execute a query", "parameters": [{"name": "Object210", "in": "body", "schema": {"$ref": "#/definitions/Object210"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object211"}}}}}, "/queries/{id}/runs": {"post": {"summary": "Start a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the query.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object209"}}}}, "get": {"summary": "List runs for the given query", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the query.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object209"}}}}}}, "/queries/{id}/runs/{run_id}": {"get": {"summary": "Check status of a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the query.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object209"}}}}, "delete": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the query.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"202": {"description": "success"}}}}, "/queries/{id}/runs/{run_id}/logs": {"get": {"summary": "Get the logs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the query.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "last_id", "in": "query", "required": false, "description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "The maximum number of log messages to return. Default of 10000.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object82"}}}}}}, "/queries/{id}/scripts/{script_id}": {"put": {"summary": "Update the query's associated script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The query ID.", "type": "integer"}, {"name": "script_id", "in": "path", "required": true, "description": "The ID of the script associated with this query.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object212"}}}}}, "/queries/{id}": {"get": {"summary": "Get details about a query", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The query ID.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object212"}}}}}, "/registrations/": {"get": {"summary": "List registrations", "parameters": [{"name": "status", "in": "query", "required": false, "description": "If specified, returns registrations with one of these statuses. It accepts a comma-separated list, possible values are pending, confirmed, approved, rejected, provisioning, provisioned, notified, or decommissioned.", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 25. Maximum allowed is 100.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id, created_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object213"}}}}}, "post": {"summary": "Register a new account", "parameters": [{"name": "Object214", "in": "body", "schema": {"$ref": "#/definitions/Object214"}, "required": true}], "responses": {"204": {"description": "success"}}}}, "/registrations/{id}": {"patch": {"summary": "Modify a registration", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the registration.", "type": "integer"}, {"name": "Object215", "in": "body", "schema": {"$ref": "#/definitions/Object215"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object216"}}}}, "get": {"summary": "Retrieve a registration", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the registration.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object216"}}}}}, "/registrations/{id}/reject": {"post": {"summary": "Reject a registration", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the registration.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object216"}}}}}, "/registrations/{id}/approve": {"post": {"summary": "Approve a registration", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the registration.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object216"}}}}}, "/registrations/{id}/provision": {"post": {"summary": "Create an account for an approved registration", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the registration.", "type": "integer"}, {"name": "Object217", "in": "body", "schema": {"$ref": "#/definitions/Object217"}, "required": true}], "responses": {"204": {"description": "success"}}}}, "/registrations/{id}/notify": {"post": {"summary": "Notify a registration that their account is ready", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the registration.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object216"}}}}}, "/registrations/{id}/decommission": {"post": {"summary": "Decommission an expired free trial", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the registration.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object216"}}}}}, "/remote_hosts/": {"get": {"summary": "List the remote hosts", "parameters": [{"name": "type", "in": "query", "required": false, "description": "The type of remote host. One of: RemoteHostTypes::BSD, RemoteHostTypes::Ftp, RemoteHostTypes::Github, RemoteHostTypes::GoogleDoc, RemoteHostTypes::JDBC, RemoteHostTypes::Redshift, RemoteHostTypes::Salesforce, and RemoteHostTypes::Van", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object218"}}}}}, "post": {"summary": "Create a new remote host", "parameters": [{"name": "Object219", "in": "body", "schema": {"$ref": "#/definitions/Object219"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object218"}}}}}, "/remote_hosts/{id}/authenticate": {"post": {"summary": "Authenticate against a remote host using either a credential or a user name and password", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the remote host.", "type": "integer"}, {"name": "Object220", "in": "body", "schema": {"$ref": "#/definitions/Object220"}, "required": false}], "responses": {"204": {"description": "success"}}}}, "/remote_hosts/{id}/data_sets": {"get": {"summary": "List data sets available from a remote host", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the remote host.", "type": "integer"}, {"name": "credential_id", "in": "query", "required": false, "description": "The credential ID.", "type": "integer"}, {"name": "username", "in": "query", "required": false, "description": "The user name for remote host.", "type": "string"}, {"name": "password", "in": "query", "required": false, "description": "The password for remote host.", "type": "string"}, {"name": "q", "in": "query", "required": false, "description": "The query string for data set.", "type": "string"}, {"name": "s", "in": "query", "required": false, "description": "If true will only return schemas, otherwise, the results will be the full path.", "type": "boolean"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object221"}}}}}}, "/results/": {"get": {"summary": "List ", "parameters": [{"name": "type", "in": "query", "required": false, "description": "If specified, return report of these types. It accepts a comma-separated list, possible values are 'tableau' or 'other'.", "type": "string"}, {"name": "author", "in": "query", "required": false, "description": "If specified, return reports from this author. It accepts a comma-separated list of author ids.", "type": "string"}, {"name": "template_id", "in": "query", "required": false, "description": "If specified, return reports using the provided Template.", "type": "integer"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}, {"name": "archived", "in": "query", "required": false, "description": "The archival status of the requested object(s).", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, name, created_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object222"}}}}}, "post": {"summary": "Create a report", "parameters": [{"name": "Object226", "in": "body", "schema": {"$ref": "#/definitions/Object226"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object225"}}}}}, "/reports/": {"get": {"summary": "List ", "parameters": [{"name": "type", "in": "query", "required": false, "description": "If specified, return report of these types. It accepts a comma-separated list, possible values are 'tableau' or 'other'.", "type": "string"}, {"name": "author", "in": "query", "required": false, "description": "If specified, return reports from this author. It accepts a comma-separated list of author ids.", "type": "string"}, {"name": "template_id", "in": "query", "required": false, "description": "If specified, return reports using the provided Template.", "type": "integer"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}, {"name": "archived", "in": "query", "required": false, "description": "The archival status of the requested object(s).", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, name, created_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object222"}}}}}, "post": {"summary": "Create a report", "parameters": [{"name": "Object226", "in": "body", "schema": {"$ref": "#/definitions/Object226"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object225"}}}}}, "/results/{id}": {"get": {"summary": "Show a single report", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this report.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object225"}}}}, "patch": {"summary": "Update a report", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the report to modify.", "type": "integer"}, {"name": "Object227", "in": "body", "schema": {"$ref": "#/definitions/Object227"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object225"}}}}}, "/reports/{id}": {"get": {"summary": "Show a single report", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this report.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object225"}}}}, "patch": {"summary": "Update a report", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the report to modify.", "type": "integer"}, {"name": "Object227", "in": "body", "schema": {"$ref": "#/definitions/Object227"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object225"}}}}}, "/results/{id}/grants": {"post": {"summary": "Grant this report the ability to perform Civis platform API operations on your behalf", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this report.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object225"}}}}, "delete": {"summary": "Revoke permission for this report to perform Civis platform API operations on your behalf", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this report.", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/reports/{id}/grants": {"post": {"summary": "Grant this report the ability to perform Civis platform API operations on your behalf", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this report.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object225"}}}}, "delete": {"summary": "Revoke permission for this report to perform Civis platform API operations on your behalf", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this report.", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/results/{id}/snapshots": {"get": {"summary": "Get details about the report's snapshot automation settings", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this report.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object228"}}}}, "post": {"summary": "Generate and optionally email a snapshot of the specified report", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this report.", "type": "integer"}, {"name": "Object229", "in": "body", "schema": {"$ref": "#/definitions/Object229"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object228"}}}}, "patch": {"summary": "Update the report's snapshot automation settings", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this report.", "type": "integer"}, {"name": "Object229", "in": "body", "schema": {"$ref": "#/definitions/Object229"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object228"}}}}}, "/reports/{id}/snapshots": {"get": {"summary": "Get details about the report's snapshot automation settings", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this report.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object228"}}}}, "post": {"summary": "Generate and optionally email a snapshot of the specified report", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this report.", "type": "integer"}, {"name": "Object229", "in": "body", "schema": {"$ref": "#/definitions/Object229"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object228"}}}}, "patch": {"summary": "Update the report's snapshot automation settings", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this report.", "type": "integer"}, {"name": "Object229", "in": "body", "schema": {"$ref": "#/definitions/Object229"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object228"}}}}}, "/results/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object17"}}}}}}, "/reports/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object17"}}}}}}, "/results/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object52", "in": "body", "schema": {"$ref": "#/definitions/Object52"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/reports/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object52", "in": "body", "schema": {"$ref": "#/definitions/Object52"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/results/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/reports/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/results/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object53", "in": "body", "schema": {"$ref": "#/definitions/Object53"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/reports/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object53", "in": "body", "schema": {"$ref": "#/definitions/Object53"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/results/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/reports/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/results/{id}/projects": {"get": {"summary": "List the projects a Report belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object27"}}}}}}, "/reports/{id}/projects": {"get": {"summary": "List the projects a Report belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object27"}}}}}}, "/results/{id}/projects/{project_id}": {"put": {"summary": "Add a Report to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a Report from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/reports/{id}/projects/{project_id}": {"put": {"summary": "Add a Report to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a Report from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/results/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object230", "in": "body", "schema": {"$ref": "#/definitions/Object230"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object225"}}}}}, "/reports/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object230", "in": "body", "schema": {"$ref": "#/definitions/Object230"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object225"}}}}}, "/scripts/types": {"get": {"summary": "List available script types", "parameters": [], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object233"}}}}}}, "/scripts/{id}/history": {"get": {"summary": "Get the run history and outputs of this script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object234"}}}}}, "/scripts/": {"post": {"summary": "Create a script", "parameters": [{"name": "Object236", "in": "body", "schema": {"$ref": "#/definitions/Object236"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object238"}}}}, "get": {"summary": "List scripts", "parameters": [{"name": "type", "in": "query", "required": false, "description": "If specified, return objects of these types. The valid types are sql, python3, javascript, r, and containers.", "type": "string"}, {"name": "category", "in": "query", "required": false, "description": "A job category for filtering scripts. Must be one of script, import, export, and enhancement.", "type": "string"}, {"name": "author", "in": "query", "required": false, "description": "If specified, return objects from this author. Must use user IDs. A comma separated list of IDs is also accepted to return objects from multiple authors.", "type": "string"}, {"name": "status", "in": "query", "required": false, "description": "If specified, returns objects with one of these statuses. It accepts a comma-separated list, possible values are 'running', 'failed', 'succeeded', 'idle', 'scheduled'.", "type": "string"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}, {"name": "archived", "in": "query", "required": false, "description": "The archival status of the requested object(s).", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, name, created_at, last_run.updated_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object256"}}}}}}, "/scripts/{id}": {"patch": {"summary": "Update a script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object242", "in": "body", "schema": {"$ref": "#/definitions/Object242"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object244"}}}}, "delete": {"summary": "Archive a script (deprecated, use archive endpoints instead)", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "get": {"summary": "Get details about a script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object244"}}}}}, "/scripts/{id}/run": {"post": {"summary": "Run a script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/{id}/cancel": {"post": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the job.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object245"}}}}}, "/scripts/containers": {"post": {"summary": "Create a container", "parameters": [{"name": "Object246", "in": "body", "schema": {"$ref": "#/definitions/Object246"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object248"}}}}}, "/scripts/containers/{id}": {"get": {"summary": "View a container", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object248"}}}}, "put": {"summary": "Edit a container", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object250", "in": "body", "schema": {"$ref": "#/definitions/Object250"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object248"}}}}, "patch": {"summary": "Update a container", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object251", "in": "body", "schema": {"$ref": "#/definitions/Object251"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object248"}}}}, "delete": {"summary": "Archive a container (deprecated, use archive endpoints)", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/containers/{id}/runs/{run_id}": {"patch": {"summary": "Update a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the script run.", "type": "integer"}, {"name": "Object253", "in": "body", "schema": {"$ref": "#/definitions/Object253"}, "required": false}], "responses": {"204": {"description": "success"}}}, "get": {"summary": "Check status of a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the container.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object283"}}}}, "delete": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the container.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"202": {"description": "success"}}}}, "/scripts/containers/{id}/runs/{run_id}/logs": {"post": {"summary": "Add log messages", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the script.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the script run.", "type": "integer"}, {"name": "Object254", "in": "body", "schema": {"$ref": "#/definitions/Object254"}, "required": false}], "responses": {"204": {"description": "success"}}}, "get": {"summary": "Get the logs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the container.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "last_id", "in": "query", "required": false, "description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "The maximum number of log messages to return. Default of 10000.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object82"}}}}}}, "/scripts/containers/{id}/runs/{run_id}/heartbeats": {"post": {"summary": "Indicate that the given run is being handled", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the container.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/sql": {"post": {"summary": "Create a SQL script", "parameters": [{"name": "Object257", "in": "body", "schema": {"$ref": "#/definitions/Object257"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object259"}}}}}, "/scripts/sql/{id}": {"get": {"summary": "Get a SQL script", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object259"}}}}, "put": {"summary": "Replace all attributes of this SQL script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object261", "in": "body", "schema": {"$ref": "#/definitions/Object261"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object259"}}}}, "patch": {"summary": "Update some attributes of this SQL script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object262", "in": "body", "schema": {"$ref": "#/definitions/Object262"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object259"}}}}, "delete": {"summary": "Archive a SQL script (deprecated, use archiving endpoints instead)", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/python3": {"post": {"summary": "Create a Python Script", "parameters": [{"name": "Object263", "in": "body", "schema": {"$ref": "#/definitions/Object263"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object265"}}}}}, "/scripts/python3/{id}": {"get": {"summary": "Get a Python Script", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object265"}}}}, "put": {"summary": "Replace all attributes of this Python Script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object267", "in": "body", "schema": {"$ref": "#/definitions/Object267"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object265"}}}}, "patch": {"summary": "Update some attributes of this Python Script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object268", "in": "body", "schema": {"$ref": "#/definitions/Object268"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object265"}}}}, "delete": {"summary": "Archive a Python Script (deprecated, use archiving endpoints instead)", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/r": {"post": {"summary": "Create an R Script", "parameters": [{"name": "Object270", "in": "body", "schema": {"$ref": "#/definitions/Object270"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object271"}}}}}, "/scripts/r/{id}": {"get": {"summary": "Get an R Script", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object271"}}}}, "put": {"summary": "Replace all attributes of this R Script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object272", "in": "body", "schema": {"$ref": "#/definitions/Object272"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object271"}}}}, "patch": {"summary": "Update some attributes of this R Script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object273", "in": "body", "schema": {"$ref": "#/definitions/Object273"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object271"}}}}, "delete": {"summary": "Archive an R Script (deprecated, use archiving endpoints instead)", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/javascript": {"post": {"summary": "Create a JavaScript Script", "parameters": [{"name": "Object274", "in": "body", "schema": {"$ref": "#/definitions/Object274"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object275"}}}}}, "/scripts/javascript/{id}": {"get": {"summary": "Get a JavaScript Script", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object275"}}}}, "put": {"summary": "Replace all attributes of this JavaScript Script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object276", "in": "body", "schema": {"$ref": "#/definitions/Object276"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object275"}}}}, "patch": {"summary": "Update some attributes of this JavaScript Script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object277", "in": "body", "schema": {"$ref": "#/definitions/Object277"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object275"}}}}, "delete": {"summary": "Archive a JavaScript Script (deprecated, use archiving endpoints instead)", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/custom": {"get": {"summary": "List Custom Scripts", "parameters": [{"name": "from_template_id", "in": "query", "required": false, "description": "If specified, return scripts based on the template with this ID. Specify multiple IDs as a comma-separated list.", "type": "string"}, {"name": "author", "in": "query", "required": false, "description": "If specified, return objects from this author. Must use user IDs. A comma separated list of IDs is also accepted to return objects from multiple authors.", "type": "string"}, {"name": "status", "in": "query", "required": false, "description": "If specified, returns objects with one of these statuses. It accepts a comma-separated list, possible values are 'running', 'failed', 'succeeded', 'idle', 'scheduled'.", "type": "string"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}, {"name": "archived", "in": "query", "required": false, "description": "The archival status of the requested object(s).", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, name, created_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object278"}}}}}, "post": {"summary": "Create a Custom Script", "parameters": [{"name": "Object279", "in": "body", "schema": {"$ref": "#/definitions/Object279"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object280"}}}}}, "/scripts/custom/{id}": {"get": {"summary": "Get a Custom Script", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object280"}}}}, "put": {"summary": "Replace all attributes of this Custom Script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object281", "in": "body", "schema": {"$ref": "#/definitions/Object281"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object280"}}}}, "patch": {"summary": "Update some attributes of this Custom Script", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the script.", "type": "integer"}, {"name": "Object281", "in": "body", "schema": {"$ref": "#/definitions/Object281"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object280"}}}}, "delete": {"summary": "Archive a Custom Script (deprecated, use archiving endpoints instead)", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/sql/{id}/runs": {"post": {"summary": "Start a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the sql.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object282"}}}}, "get": {"summary": "List runs for the given sql", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the sql.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object282"}}}}}}, "/scripts/sql/{id}/runs/{run_id}": {"get": {"summary": "Check status of a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the sql.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object282"}}}}, "delete": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the sql.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"202": {"description": "success"}}}}, "/scripts/sql/{id}/runs/{run_id}/logs": {"get": {"summary": "Get the logs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the sql.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "last_id", "in": "query", "required": false, "description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "The maximum number of log messages to return. Default of 10000.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object82"}}}}}}, "/scripts/containers/{id}/runs": {"post": {"summary": "Start a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the container.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object283"}}}}, "get": {"summary": "List runs for the given container", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the container.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object283"}}}}}}, "/scripts/python3/{id}/runs": {"post": {"summary": "Start a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the python.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object284"}}}}, "get": {"summary": "List runs for the given python", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the python.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object284"}}}}}}, "/scripts/python3/{id}/runs/{run_id}": {"get": {"summary": "Check status of a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the python.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object284"}}}}, "delete": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the python.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"202": {"description": "success"}}}}, "/scripts/python3/{id}/runs/{run_id}/logs": {"get": {"summary": "Get the logs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the python.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "last_id", "in": "query", "required": false, "description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "The maximum number of log messages to return. Default of 10000.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object82"}}}}}}, "/scripts/r/{id}/runs": {"post": {"summary": "Start a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the r.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object285"}}}}, "get": {"summary": "List runs for the given r", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the r.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object285"}}}}}}, "/scripts/r/{id}/runs/{run_id}": {"get": {"summary": "Check status of a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the r.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object285"}}}}, "delete": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the r.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"202": {"description": "success"}}}}, "/scripts/r/{id}/runs/{run_id}/logs": {"get": {"summary": "Get the logs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the r.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "last_id", "in": "query", "required": false, "description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "The maximum number of log messages to return. Default of 10000.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object82"}}}}}}, "/scripts/javascript/{id}/runs": {"post": {"summary": "Start a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the javascript.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object286"}}}}, "get": {"summary": "List runs for the given javascript", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the javascript.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object286"}}}}}}, "/scripts/javascript/{id}/runs/{run_id}": {"get": {"summary": "Check status of a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the javascript.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object286"}}}}, "delete": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the javascript.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"202": {"description": "success"}}}}, "/scripts/javascript/{id}/runs/{run_id}/logs": {"get": {"summary": "Get the logs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the javascript.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "last_id", "in": "query", "required": false, "description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "The maximum number of log messages to return. Default of 10000.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object82"}}}}}}, "/scripts/custom/{id}/runs": {"post": {"summary": "Start a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the custom.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object287"}}}}, "get": {"summary": "List runs for the given custom", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the custom.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 100.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object287"}}}}}}, "/scripts/custom/{id}/runs/{run_id}": {"get": {"summary": "Check status of a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the custom.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object287"}}}}, "delete": {"summary": "Cancel a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the custom.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}], "responses": {"202": {"description": "success"}}}}, "/scripts/custom/{id}/runs/{run_id}/logs": {"get": {"summary": "Get the logs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the custom.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "last_id", "in": "query", "required": false, "description": "The ID of the last log message received. Log entries with this ID value or lower will be omitted.Logs are sorted by ID if this value is provided, and are otherwise sorted by createdAt.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "The maximum number of log messages to return. Default of 10000.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object82"}}}}}}, "/scripts/sql/{id}/runs/{run_id}/outputs": {"get": {"summary": "List the outputs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the sql script.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to created_at. Must be one of: created_at, id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object288"}}}}}}, "/scripts/containers/{id}/runs/{run_id}/outputs": {"get": {"summary": "List the outputs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the container script.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to created_at. Must be one of: created_at, id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object289"}}}}}, "post": {"summary": "Add an output for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the container script.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "Object290", "in": "body", "schema": {"$ref": "#/definitions/Object290"}, "required": true}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object289"}}}}}, "/scripts/python3/{id}/runs/{run_id}/outputs": {"get": {"summary": "List the outputs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the python script.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to created_at. Must be one of: created_at, id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object291"}}}}}, "post": {"summary": "Add an output for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the python script.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "Object292", "in": "body", "schema": {"$ref": "#/definitions/Object292"}, "required": true}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object291"}}}}}, "/scripts/r/{id}/runs/{run_id}/outputs": {"get": {"summary": "List the outputs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the r script.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to created_at. Must be one of: created_at, id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object293"}}}}}, "post": {"summary": "Add an output for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the r script.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "Object294", "in": "body", "schema": {"$ref": "#/definitions/Object294"}, "required": true}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object293"}}}}}, "/scripts/javascript/{id}/runs/{run_id}/outputs": {"get": {"summary": "List the outputs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the javascript script.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to created_at. Must be one of: created_at, id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object295"}}}}}, "post": {"summary": "Add an output for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the javascript script.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "Object296", "in": "body", "schema": {"$ref": "#/definitions/Object296"}, "required": true}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object295"}}}}}, "/scripts/custom/{id}/runs/{run_id}/outputs": {"get": {"summary": "List the outputs for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the custom script.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to created_at. Must be one of: created_at, id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object297"}}}}}, "post": {"summary": "Add an output for a run", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the custom script.", "type": "integer"}, {"name": "run_id", "in": "path", "required": true, "description": "The ID of the run.", "type": "integer"}, {"name": "Object298", "in": "body", "schema": {"$ref": "#/definitions/Object298"}, "required": true}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object297"}}}}}, "/scripts/sql/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object17"}}}}}}, "/scripts/sql/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object52", "in": "body", "schema": {"$ref": "#/definitions/Object52"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/scripts/sql/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/sql/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object53", "in": "body", "schema": {"$ref": "#/definitions/Object53"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/scripts/sql/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/sql/{id}/projects": {"get": {"summary": "List the projects a scripts belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object27"}}}}}}, "/scripts/sql/{id}/projects/{project_id}": {"put": {"summary": "Add a scripts to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a scripts from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/sql/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object299", "in": "body", "schema": {"$ref": "#/definitions/Object299"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object259"}}}}}, "/scripts/containers/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object17"}}}}}}, "/scripts/containers/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object52", "in": "body", "schema": {"$ref": "#/definitions/Object52"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/scripts/containers/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/containers/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object53", "in": "body", "schema": {"$ref": "#/definitions/Object53"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/scripts/containers/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/containers/{id}/projects": {"get": {"summary": "List the projects a container docker belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object27"}}}}}}, "/scripts/containers/{id}/projects/{project_id}": {"put": {"summary": "Add a container docker to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a container docker from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/containers/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object300", "in": "body", "schema": {"$ref": "#/definitions/Object300"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object248"}}}}}, "/scripts/python3/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object17"}}}}}}, "/scripts/python3/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object52", "in": "body", "schema": {"$ref": "#/definitions/Object52"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/scripts/python3/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/python3/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object53", "in": "body", "schema": {"$ref": "#/definitions/Object53"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/scripts/python3/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/python3/{id}/projects": {"get": {"summary": "List the projects a python docker belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object27"}}}}}}, "/scripts/python3/{id}/projects/{project_id}": {"put": {"summary": "Add a python docker to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a python docker from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/python3/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object301", "in": "body", "schema": {"$ref": "#/definitions/Object301"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object265"}}}}}, "/scripts/r/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object17"}}}}}}, "/scripts/r/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object52", "in": "body", "schema": {"$ref": "#/definitions/Object52"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/scripts/r/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/r/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object53", "in": "body", "schema": {"$ref": "#/definitions/Object53"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/scripts/r/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/r/{id}/projects": {"get": {"summary": "List the projects a r docker belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object27"}}}}}}, "/scripts/r/{id}/projects/{project_id}": {"put": {"summary": "Add a r docker to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a r docker from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/r/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object302", "in": "body", "schema": {"$ref": "#/definitions/Object302"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object271"}}}}}, "/scripts/javascript/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object17"}}}}}}, "/scripts/javascript/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object52", "in": "body", "schema": {"$ref": "#/definitions/Object52"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/scripts/javascript/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/javascript/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object53", "in": "body", "schema": {"$ref": "#/definitions/Object53"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/scripts/javascript/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/javascript/{id}/projects": {"get": {"summary": "List the projects a scripted sql belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object27"}}}}}}, "/scripts/javascript/{id}/projects/{project_id}": {"put": {"summary": "Add a scripted sql to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a scripted sql from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/javascript/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object303", "in": "body", "schema": {"$ref": "#/definitions/Object303"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object275"}}}}}, "/scripts/custom/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object17"}}}}}}, "/scripts/custom/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object52", "in": "body", "schema": {"$ref": "#/definitions/Object52"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/scripts/custom/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/custom/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object53", "in": "body", "schema": {"$ref": "#/definitions/Object53"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/scripts/custom/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/custom/{id}/projects": {"get": {"summary": "List the projects a Job belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object27"}}}}}}, "/scripts/custom/{id}/projects/{project_id}": {"put": {"summary": "Add a Job to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a Job from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/scripts/custom/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object304", "in": "body", "schema": {"$ref": "#/definitions/Object304"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object280"}}}}}, "/search/": {"get": {"summary": "Perform a search", "parameters": [{"name": "query", "in": "query", "required": false, "description": "The search query.", "type": "string"}, {"name": "type", "in": "query", "required": false, "description": "The type for the search. It accepts a comma-separated list. Valid arguments are listed on the \"GET /search/types\" endpoint.", "type": "string"}, {"name": "offset", "in": "query", "required": false, "description": "The offset for the search results.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set.", "type": "string"}, {"name": "owner", "in": "query", "required": false, "description": "The owner for the search.", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Defaults to 10. Maximum allowed is 50.", "type": "integer"}, {"name": "archived", "in": "query", "required": false, "description": "If specified, return only results with the chosen archived status; either 'true', 'false', or 'all'. Defaults to 'false'.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object305"}}}}}}, "/search/types": {"get": {"summary": "List available search types", "parameters": [], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object307"}}}}}}, "/shiny_apps/{shiny_app_id}/deployments/{deployment_id}": {"patch": {"summary": "Patch a ShinyApp deployment", "parameters": [{"name": "shiny_app_id", "in": "path", "required": true, "description": "The ID of the owning ShinyApp", "type": "integer"}, {"name": "deployment_id", "in": "path", "required": true, "description": "The ID for this deployment", "type": "integer"}, {"name": "Object315", "in": "body", "schema": {"$ref": "#/definitions/Object315"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object309"}}}}}, "/surveys/projects": {"get": {"summary": "List survey projects", "parameters": [], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object316"}}}}}}, "/surveys/projects/{id}": {"get": {"summary": "Get a summary of the metadata for a single project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for this project.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object317"}}}}}, "/surveys/samples": {"get": {"summary": "List samples", "parameters": [], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object331"}}}}}, "post": {"summary": "Create a sample", "parameters": [{"name": "Object332", "in": "body", "schema": {"$ref": "#/definitions/Object332"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object324"}}}}}, "/surveys/samples/{id}": {"get": {"summary": "Get metadata for a single Sample", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object324"}}}}, "put": {"summary": "Update a sample", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}, {"name": "Object333", "in": "body", "schema": {"$ref": "#/definitions/Object333"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object324"}}}}, "delete": {"summary": "Delete a sample", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/surveys/": {"get": {"summary": "List of surveys", "parameters": [], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object334"}}}}}}, "/surveys/{id}": {"get": {"summary": "Get a survey", "parameters": [{"name": "id", "in": "path", "required": true, "description": "Survey ID", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object335"}}}}}, "/surveys/{survey_id}/returns": {"get": {"summary": "List survey fielding returns", "parameters": [{"name": "survey_id", "in": "path", "required": true, "description": "The ID of the survey.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object336"}}}}}, "post": {"summary": "Create a survey fielding return", "parameters": [{"name": "survey_id", "in": "path", "required": true, "description": "The ID of the survey.", "type": "integer"}, {"name": "Object338", "in": "body", "schema": {"$ref": "#/definitions/Object338"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object337"}}}}}, "/surveys/{survey_id}/returns/{id}": {"get": {"summary": "Get a survey fielding return", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the return.", "type": "integer"}, {"name": "survey_id", "in": "path", "required": true, "description": "The ID of the survey.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object337"}}}}, "put": {"summary": "Update a survey fielding return", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the return.", "type": "integer"}, {"name": "survey_id", "in": "path", "required": true, "description": "The ID of the survey.", "type": "integer"}, {"name": "Object339", "in": "body", "schema": {"$ref": "#/definitions/Object339"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object337"}}}}}, "/tables/": {"post": {"summary": "Import a file into a table", "parameters": [{"name": "Object340", "in": "body", "schema": {"$ref": "#/definitions/Object340"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object341"}}}}, "get": {"summary": "List tables", "parameters": [{"name": "database_id", "in": "query", "required": false, "description": "The ID of the database.", "type": "integer"}, {"name": "schema", "in": "query", "required": false, "description": "If specified, will be used to filter the tables returned. Substring matching is supported with \"%\" and \"*\" wildcards (e.g., \"schema=%census%\" will return both \"client_census.table\" and \"census_2010.table\").", "type": "string"}, {"name": "name", "in": "query", "required": false, "description": "If specified, will be used to filter the tables returned. Substring matching is supported with \"%\" and \"*\" wildcards (e.g., \"name=%table%\" will return both \"table1\" and \"my table\").", "type": "string"}, {"name": "search", "in": "query", "required": false, "description": "If specified, will be used to filter the tables returned. Will search across schema and name (in the full form schema.name) and will return any full name containing the search string.", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 50. Maximum allowed is 1000.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to schema. Must be one of: schema, name, search.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object56"}}}}}}, "/tables/{id}/enhance": {"post": {"summary": "Run an enhancement on a table, deprecated use \"POST /tables/:source_table_id/enhancements/<enhancement-type>\" instead", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of table to enhance", "type": "integer"}, {"name": "Object342", "in": "body", "schema": {"$ref": "#/definitions/Object342"}, "required": true}], "responses": {"204": {"description": "success"}}}}, "/tables/{source_table_id}/enhancements/geocodings": {"post": {"summary": "Geocode a table", "parameters": [{"name": "source_table_id", "in": "path", "required": true, "description": "The ID of the table to be enhanced.", "type": "integer"}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object343"}}}}}, "/tables/{source_table_id}/enhancements/cass-ncoa": {"post": {"summary": "Standardize addresses in a table", "parameters": [{"name": "source_table_id", "in": "path", "required": true, "description": "The ID of the table to be enhanced.", "type": "integer"}, {"name": "Object344", "in": "body", "schema": {"$ref": "#/definitions/Object344"}, "required": false}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object345"}}}}}, "/tables/{source_table_id}/enhancements/prepared-matchings": {"post": {"summary": "Match person records against a dynamo table prepared by Civis", "parameters": [{"name": "source_table_id", "in": "path", "required": true, "description": "The ID of the table to be enhanced.", "type": "integer"}, {"name": "Object346", "in": "body", "schema": {"$ref": "#/definitions/Object346"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object347"}}}}}, "/tables/{source_table_id}/enhancements/table-matchings": {"post": {"summary": "Match person records against an arbitrary Redshift table", "parameters": [{"name": "source_table_id", "in": "path", "required": true, "description": "The ID of the table to be enhanced.", "type": "integer"}, {"name": "Object348", "in": "body", "schema": {"$ref": "#/definitions/Object348"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object349"}}}}}, "/tables/{source_table_id}/enhancements/geocodings/{id}": {"get": {"summary": "View the status of a geocoding table enhancement", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the enhancement.", "type": "integer"}, {"name": "source_table_id", "in": "path", "required": true, "description": "The ID of the table that was enhanced.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object343"}}}}}, "/tables/{source_table_id}/enhancements/cass-ncoa/{id}": {"get": {"summary": "View the status of a CASS / NCOA table enhancement", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the enhancement.", "type": "integer"}, {"name": "source_table_id", "in": "path", "required": true, "description": "The ID of the table that was enhanced.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object345"}}}}}, "/tables/{source_table_id}/enhancements/prepared-matchings/{id}": {"get": {"summary": "View a prepared matching enhancement", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the enhancement.", "type": "integer"}, {"name": "source_table_id", "in": "path", "required": true, "description": "The ID of the table that was enhanced.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object347"}}}}}, "/tables/{source_table_id}/enhancements/table-matchings/{id}": {"get": {"summary": "View a table matching enhancement", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the enhancement.", "type": "integer"}, {"name": "source_table_id", "in": "path", "required": true, "description": "The ID of the table that was enhanced.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object349"}}}}}, "/tables/{id}/refresh": {"post": {"summary": "Request a refresh for column and table statistics", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object350"}}}}}, "/tables/{id}": {"get": {"summary": "Show basic table info", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object350"}}}}, "patch": {"summary": "Update a table", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the table.", "type": "integer"}, {"name": "Object358", "in": "body", "schema": {"$ref": "#/definitions/Object358"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object359"}}}}}, "/tables/{id}/columns": {"get": {"summary": "List columns in the specified table", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}, {"name": "name", "in": "query", "required": false, "description": "Search for columns with the given name, within the specified table.", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to name. Must be one of: name, order.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object351"}}}}}}, "/templates/reports/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object17"}}}}}}, "/templates/reports/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object52", "in": "body", "schema": {"$ref": "#/definitions/Object52"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/templates/reports/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/templates/reports/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object53", "in": "body", "schema": {"$ref": "#/definitions/Object53"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/templates/reports/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/templates/reports/": {"get": {"summary": "List Report Templates", "parameters": [{"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}, {"name": "category", "in": "query", "required": false, "description": "A category to filter results by, one of: dataset-viz", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 50. Maximum allowed is 1000.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to name. Must be one of: name, updated_at, created_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object360"}}}}}, "post": {"summary": "Create a Report Template", "parameters": [{"name": "Object361", "in": "body", "schema": {"$ref": "#/definitions/Object361"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object362"}}}}}, "/templates/reports/{id}": {"get": {"summary": "Get a Report Template", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object362"}}}}, "put": {"summary": "Replace all attributes of this Report Template", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}, {"name": "Object363", "in": "body", "schema": {"$ref": "#/definitions/Object363"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object362"}}}}, "patch": {"summary": "Update some attributes of this Report Template", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}, {"name": "Object364", "in": "body", "schema": {"$ref": "#/definitions/Object364"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object362"}}}}, "delete": {"summary": "Archive a Report Template (deprecated, use archiving endpoints instead)", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/templates/reports/{id}/review": {"post": {"summary": "Review a template for security vulnerability and correctness (admin-only)", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object365", "in": "body", "schema": {"$ref": "#/definitions/Object365"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object362"}}}}}, "/templates/scripts/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object17"}}}}}}, "/templates/scripts/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object52", "in": "body", "schema": {"$ref": "#/definitions/Object52"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/templates/scripts/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/templates/scripts/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object53", "in": "body", "schema": {"$ref": "#/definitions/Object53"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/templates/scripts/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/templates/scripts/{id}/projects": {"get": {"summary": "List the projects a Template::Script belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object27"}}}}}}, "/templates/scripts/{id}/projects/{project_id}": {"put": {"summary": "Add a Template::Script to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a Template::Script from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/templates/scripts/": {"get": {"summary": "List Script Templates", "parameters": [{"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}, {"name": "category", "in": "query", "required": false, "description": "A category to filter results by, one of: import, export, enhancement, model, and script", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 50. Maximum allowed is 1000.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to name. Must be one of: name, updated_at, created_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object366"}}}}}, "post": {"summary": "Create a Script Template", "parameters": [{"name": "Object367", "in": "body", "schema": {"$ref": "#/definitions/Object367"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object368"}}}}}, "/templates/scripts/{id}": {"get": {"summary": "Get a Script Template", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object368"}}}}, "put": {"summary": "Replace all attributes of this Script Template", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}, {"name": "Object369", "in": "body", "schema": {"$ref": "#/definitions/Object369"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object368"}}}}, "patch": {"summary": "Update some attributes of this Script Template", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}, {"name": "Object370", "in": "body", "schema": {"$ref": "#/definitions/Object370"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object368"}}}}, "delete": {"summary": "Archive a Script Template (deprecated, use archiving endpoints instead)", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/templates/scripts/{id}/review": {"post": {"summary": "Review a template for security vulnerability and correctness (admin-only)", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object365", "in": "body", "schema": {"$ref": "#/definitions/Object365"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object368"}}}}}, "/users/": {"get": {"summary": "List users", "parameters": [{"name": "feature_flag", "in": "query", "required": false, "description": "Return users that have a feature flag enabled.", "type": "string"}, {"name": "account_status", "in": "query", "required": false, "description": "The account status by which to filter users. May be one of \"active\", \"inactive\", or \"all\".", "type": "string"}, {"name": "query", "in": "query", "required": false, "description": "Return users who match the given query, based on name, user, and email.", "type": "string"}, {"name": "group_id", "in": "query", "required": false, "description": "The ID of the group by which to filter users. Cannot be present if organization_id is.", "type": "integer"}, {"name": "organization_id", "in": "query", "required": false, "description": "The ID of the organization by which to filter users. Cannot be present if group_id is.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 10000.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to name. Must be one of: name, user.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to asc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object371"}}}}}, "post": {"summary": "Create a new user", "parameters": [{"name": "Object373", "in": "body", "schema": {"$ref": "#/definitions/Object373"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object374"}}}}}, "/users/me": {"get": {"summary": "Show info about the logged-in user", "parameters": [], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object375"}}}}, "patch": {"summary": "Update info about the logged-in user", "parameters": [{"name": "Object382", "in": "body", "schema": {"$ref": "#/definitions/Object382"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object375"}}}}}, "/users/{id}": {"get": {"summary": "Show info about a user", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this user.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object374"}}}}, "patch": {"summary": "Update info about a user", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of this user.", "type": "integer"}, {"name": "Object384", "in": "body", "schema": {"$ref": "#/definitions/Object384"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object374"}}}}}, "/users/{id}/api_keys": {"get": {"summary": "Show API keys belonging to the specified user", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the user or 'me'.", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to its maximum of 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object376"}}}}}, "post": {"summary": "Create a new API key belonging to the logged-in user", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the user or 'me'.", "type": "string"}, {"name": "Object377", "in": "body", "schema": {"$ref": "#/definitions/Object377"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object379"}}}}}, "/users/{id}/api_keys/{key_id}": {"get": {"summary": "Show the specified API key", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the user or 'me'.", "type": "string"}, {"name": "key_id", "in": "path", "required": true, "description": "The ID of the API key.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object381"}}}}, "delete": {"summary": "Revoke the specified API key", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the user or 'me'.", "type": "string"}, {"name": "key_id", "in": "path", "required": true, "description": "The ID of the API key.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object381"}}}}}, "/workflows/": {"get": {"summary": "List Workflows", "parameters": [{"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}, {"name": "archived", "in": "query", "required": false, "description": "The archival status of the requested object(s).", "type": "string"}, {"name": "author", "in": "query", "required": false, "description": "If specified, return workflows from this author. It accepts a comma-separated list of author ids.", "type": "string"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to updated_at. Must be one of: updated_at, name, created_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object385"}}}}}, "post": {"summary": "Create a Workflow", "parameters": [{"name": "Object386", "in": "body", "schema": {"$ref": "#/definitions/Object386"}, "required": true}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object388"}}}}}, "/workflows/{id}": {"get": {"summary": "Get a Workflow", "parameters": [{"name": "id", "in": "path", "required": true, "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object388"}}}}, "put": {"summary": "Replace all attributes of this Workflow", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for this workflow.", "type": "integer"}, {"name": "Object390", "in": "body", "schema": {"$ref": "#/definitions/Object390"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object388"}}}}, "patch": {"summary": "Update some attributes of this Workflow", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for this workflow.", "type": "integer"}, {"name": "Object391", "in": "body", "schema": {"$ref": "#/definitions/Object391"}, "required": false}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object388"}}}}}, "/workflows/{id}/shares": {"get": {"summary": "List users and groups permissioned on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object17"}}}}}}, "/workflows/{id}/shares/users": {"put": {"summary": "Set the permissions users have on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object52", "in": "body", "schema": {"$ref": "#/definitions/Object52"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/workflows/{id}/shares/users/{user_id}": {"delete": {"summary": "Revoke the permissions a user has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "user_id", "in": "path", "required": true, "description": "ID of the user", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/workflows/{id}/shares/groups": {"put": {"summary": "Set the permissions groups has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be shared", "type": "integer"}, {"name": "Object53", "in": "body", "schema": {"$ref": "#/definitions/Object53"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object17"}}}}}, "/workflows/{id}/shares/groups/{group_id}": {"delete": {"summary": "Revoke the permissions a group has on this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource to be revoked", "type": "integer"}, {"name": "group_id", "in": "path", "required": true, "description": "ID of the group", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/workflows/{id}/archive": {"put": {"summary": "Update the archive status of this object", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the object.", "type": "integer"}, {"name": "Object392", "in": "body", "schema": {"$ref": "#/definitions/Object392"}, "required": true}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object388"}}}}}, "/workflows/{id}/projects": {"get": {"summary": "List the projects a Workflow::Workflow belongs to", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID of the resource.", "type": "integer"}, {"name": "hidden", "in": "query", "required": false, "description": "If specified to be true, returns hidden objects. Defaults to false, returning non-hidden objects.", "type": "boolean"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object27"}}}}}}, "/workflows/{id}/projects/{project_id}": {"put": {"summary": "Add a Workflow::Workflow to a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}, "delete": {"summary": "Remove a Workflow::Workflow from a project", "parameters": [{"name": "id", "in": "path", "required": true, "description": "ID of the resource", "type": "integer"}, {"name": "project_id", "in": "path", "required": true, "description": "The ID of the project", "type": "integer"}], "responses": {"204": {"description": "success"}}}}, "/workflows/{id}/executions": {"get": {"summary": "List workflow executions", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for this workflow.", "type": "integer"}, {"name": "limit", "in": "query", "required": false, "description": "Number of results to return. Defaults to 20. Maximum allowed is 50.", "type": "integer"}, {"name": "page_num", "in": "query", "required": false, "description": "Page number of the results to return. Defaults to the first page, 1.", "type": "integer"}, {"name": "order", "in": "query", "required": false, "description": "The field on which to order the result set. Defaults to id. Must be one of: id, updated_at, created_at.", "type": "string"}, {"name": "order_dir", "in": "query", "required": false, "description": "Direction in which to sort, either asc (ascending) or desc (descending) defaulting to desc.", "type": "string"}], "responses": {"200": {"description": "success", "schema": {"type": "array", "items": {"$ref": "#/definitions/Object393"}}}}}, "post": {"summary": "Execute a workflow", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for this workflow.", "type": "integer"}], "responses": {"201": {"description": "success", "schema": {"$ref": "#/definitions/Object394"}}}}}, "/workflows/{id}/executions/{execution_id}": {"get": {"summary": "Get a workflow execution", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the workflow.", "type": "integer"}, {"name": "execution_id", "in": "path", "required": true, "description": "The ID for the workflow execution.", "type": "integer"}], "responses": {"200": {"description": "success", "schema": {"$ref": "#/definitions/Object394"}}}}}, "/workflows/{id}/executions/{execution_id}/cancel": {"post": {"summary": "Cancel a workflow execution", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the workflow.", "type": "integer"}, {"name": "execution_id", "in": "path", "required": true, "description": "The ID for the workflow execution.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object394"}}}}}, "/workflows/{id}/executions/{execution_id}/resume": {"post": {"summary": "Resume a paused workflow execution", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the workflow.", "type": "integer"}, {"name": "execution_id", "in": "path", "required": true, "description": "The ID for the workflow execution.", "type": "integer"}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object394"}}}}}, "/workflows/{id}/executions/{execution_id}/retry": {"post": {"summary": "Retry a failed task, or all failed tasks in an execution", "parameters": [{"name": "id", "in": "path", "required": true, "description": "The ID for the workflow.", "type": "integer"}, {"name": "execution_id", "in": "path", "required": true, "description": "The ID for the workflow execution.", "type": "integer"}, {"name": "Object397", "in": "body", "schema": {"$ref": "#/definitions/Object397"}, "required": false}], "responses": {"202": {"description": "success", "schema": {"$ref": "#/definitions/Object394"}}}}}, "/workflows/action_executions": {"post": {"summary": "Create an action execution", "parameters": [{"name": "Object398", "in": "body", "schema": {"$ref": "#/definitions/Object398"}, "required": true}], "responses": {"204": {"description": "success"}}}}}, "definitions": {"Object0": {"type": "object", "properties": {"hostName": {"description": "If set, prevents the heap dump from happening unless the request is being handled by that host.", "type": "string"}}}, "Object1": {"type": "object", "properties": {"hostName": {"description": "The host that responded to the request.", "type": "string"}, "filename": {"description": "The heap dump file.", "type": "string"}}}, "Object2": {"type": "object", "properties": {"id": {"description": "The ID of this announcement", "type": "integer"}, "subject": {"description": "The subject of this announcement.", "type": "string"}, "body": {"description": "The body of this announcement.", "type": "string"}, "releasedAt": {"description": "The date and time this announcement was released.", "type": "string", "format": "date-time"}, "createdAt": {"type": "string", "format": "date-time"}, "updatedAt": {"type": "string", "format": "date-time"}}}, "Object3": {"type": "object", "properties": {"subject": {"description": "The subject of this announcement.", "type": "string"}, "body": {"description": "The body of this announcement.", "type": "string"}, "releasedAt": {"description": "The date and time this announcement was released.", "type": "string", "format": "date-time"}}, "required": ["subject", "body"]}, "Object4": {"type": "object", "properties": {"subject": {"description": "The subject of this announcement.", "type": "string"}, "body": {"description": "The body of this announcement.", "type": "string"}, "releasedAt": {"description": "The date and time this announcement was released.", "type": "string", "format": "date-time"}}}, "Object5": {"type": "object", "properties": {"id": {"description": "The ID of this organization.", "type": "integer"}, "name": {"description": "The name of this organization.", "type": "string"}, "slug": {"description": "The slug of this organization.", "type": "string"}, "accountManagerId": {"description": "The user ID of the Account Manager.", "type": "integer"}, "csSpecialistId": {"description": "The user ID of the Client Success Specialist.", "type": "integer"}, "status": {"description": "The status of the organization (active/trial/inactive).", "type": "string"}, "orgType": {"description": "The organization type (platform/ads/survey_vendor/other).", "type": "string"}, "customBranding": {"description": "The custom branding settings.", "type": "string"}, "contractSize": {"description": "The monthly contract size.", "type": "integer"}, "maxAnalystUsers": {"description": "The max number of full platform users for the org.", "type": "integer"}, "maxReportUsers": {"description": "The max number of report-only platform users for the org.", "type": "integer"}, "vertical": {"description": "The business vertical that the organization belongs to.", "type": "string"}, "csMetadata": {"description": "Additional metadata about the organization in JSON format.", "type": "string"}, "resources": {"description": "Description of infrastructure resources generated by platform.", "type": "string"}, "removeFooterInEmails": {"description": "If true, emails sent by platform will not include Civis text.", "type": "boolean"}}}, "Object6": {"type": "object", "properties": {"slug": {"description": "The slug for the application.", "type": "string"}, "id": {"description": "The unique id of the application.", "type": "integer"}, "instanceName": {"description": "A word that describes an instance of this app.", "type": "string"}, "name": {"description": "The name of the application.", "type": "string"}}}, "Object8": {"type": "object", "properties": {"id": {"description": "The unique id of the release.", "type": "integer"}, "appId": {"description": "The id of the app the release belongs to.", "type": "integer"}, "reportTemplateId": {"description": "ID of the report template for this release.", "type": "integer"}, "resources": {"description": "A hash of resources associated with this release.", "type": "object"}}}, "Object7": {"type": "object", "properties": {"slug": {"description": "The slug for the application.", "type": "string"}, "id": {"description": "The unique id of the application.", "type": "integer"}, "instanceName": {"description": "A word that describes an instance of this app.", "type": "string"}, "name": {"description": "The name of the application.", "type": "string"}, "currentRelease": {"description": "Latest release available to the current user.", "$ref": "#/definitions/Object8"}, "features": {"description": "App features.", "type": "object", "additionalProperties": {"type": "string"}}}}, "Object9": {"type": "object", "properties": {"features": {"description": "App features.", "type": "object", "additionalProperties": {"type": "string"}}}, "required": ["features"]}, "Object11": {"type": "object", "properties": {"id": {"description": "The ID of this user.", "type": "integer"}, "name": {"description": "This user's name.", "type": "string"}, "username": {"description": "This user's username.", "type": "string"}, "initials": {"description": "This user's initials.", "type": "string"}, "online": {"description": "Whether this user is online.", "type": "boolean"}}}, "Object10": {"type": "object", "properties": {"id": {"description": "The unique id of the instance.", "type": "integer"}, "name": {"description": "The name of the instance.", "type": "string"}, "appReleaseId": {"description": "The id of the app release the instance belongs to.", "type": "integer"}, "reportId": {"description": "The id of the report the instance belongs to.", "type": "integer"}, "createdAt": {"description": "The time the instance was created at.", "type": "string", "format": "time"}, "user": {"$ref": "#/definitions/Object11"}, "projectId": {"description": "The id of the project collecting all the objects that belong to this app instance.", "type": "integer"}}}, "Object12": {"type": "object", "properties": {"reportTemplateId": {"description": "ID of the report template for this release.", "type": "integer"}, "resources": {"description": "A hash of resources associated with this release.", "type": "object"}}, "required": ["reportTemplateId", "resources"]}, "Object13": {"type": "object", "properties": {"reportTemplateId": {"description": "ID of the report template for this release.", "type": "integer"}, "resources": {"description": "A hash of resources associated with this release.", "type": "object"}}}, "Object14": {"type": "object", "properties": {"name": {"description": "The name of the instance.", "type": "string"}}}, "Object15": {"type": "object", "properties": {"id": {"description": "The unique id of the instance.", "type": "integer"}, "name": {"description": "The name of the instance.", "type": "string"}, "appReleaseId": {"description": "The id of the app release the instance belongs to.", "type": "integer"}, "reportId": {"description": "The id of the report the instance belongs to.", "type": "integer"}, "createdAt": {"description": "The time the instance was created at.", "type": "string", "format": "time"}, "user": {"$ref": "#/definitions/Object11"}, "projectId": {"description": "The id of the project collecting all the objects that belong to this app instance.", "type": "integer"}, "authCodeUrl": {"type": "string"}, "apiKey": {"description": "A Civis API key that can be used by this app instance.", "type": "string"}}}, "Object16": {"type": "object", "properties": {"name": {"description": "The name of the instance.", "type": "string"}}}, "Object19": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}}}, "Object20": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}}}, "Object18": {"type": "object", "properties": {"users": {"type": "array", "items": {"$ref": "#/definitions/Object19"}}, "groups": {"type": "array", "items": {"$ref": "#/definitions/Object20"}}}}, "Object17": {"type": "object", "properties": {"readers": {"$ref": "#/definitions/Object18"}, "writers": {"$ref": "#/definitions/Object18"}, "owners": {"$ref": "#/definitions/Object18"}, "totalUserShares": {"description": "For owners, the number of total users shared. For writers and readers, the number of visible users shared.", "type": "integer"}, "totalGroupShares": {"description": "For owners, the number of total groups shared. For writers and readers, the number of visible groups shared.", "type": "integer"}}}, "Object21": {"type": "object", "properties": {"userIds": {"description": "An array of one or more user IDs", "type": "array", "items": {"type": "integer"}}, "permissionLevel": {"description": "Options are: \"read\", \"write\", or \"manage\"", "type": "string"}, "shareEmailBody": {"description": "Custom body text for e-mail sent on a share.", "type": "string"}, "sendSharedEmail": {"description": "Send email to the recipients of a share.", "type": "boolean"}}, "required": ["userIds", "permissionLevel"]}, "Object22": {"type": "object", "properties": {"groupIds": {"description": "An array of one or more group IDs", "type": "array", "items": {"type": "integer"}}, "permissionLevel": {"description": "Options are: \"read\", \"write\", or \"manage\"", "type": "string"}, "shareEmailBody": {"description": "Custom body text for e-mail sent on a share.", "type": "string"}, "sendSharedEmail": {"description": "Send email to the recipients of a share.", "type": "boolean"}}, "required": ["groupIds", "permissionLevel"]}, "Object23": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object24": {"type": "object", "properties": {"userIds": {"description": "An array of one or more user IDs", "type": "array", "items": {"type": "integer"}}, "permissionLevel": {"description": "Options are: \"read\", \"write\", or \"manage\"", "type": "string"}, "shareEmailBody": {"description": "Custom body text for e-mail sent on a share.", "type": "string"}, "sendSharedEmail": {"description": "Send email to the recipients of a share.", "type": "boolean"}}, "required": ["userIds", "permissionLevel"]}, "Object25": {"type": "object", "properties": {"groupIds": {"description": "An array of one or more group IDs", "type": "array", "items": {"type": "integer"}}, "permissionLevel": {"description": "Options are: \"read\", \"write\", or \"manage\"", "type": "string"}, "shareEmailBody": {"description": "Custom body text for e-mail sent on a share.", "type": "string"}, "sendSharedEmail": {"description": "Send email to the recipients of a share.", "type": "boolean"}}, "required": ["groupIds", "permissionLevel"]}, "Object26": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object27": {"type": "object", "properties": {"id": {"description": "The ID for this project.", "type": "integer"}, "author": {"description": "The author of the project.", "$ref": "#/definitions/Object11"}, "name": {"description": "The name of this project.", "type": "string"}, "description": {"description": "A description of the project", "type": "string"}, "users": {"description": "Users who can see the project", "type": "array", "items": {"$ref": "#/definitions/Object11"}}, "autoShare": {"type": "boolean"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object28": {"type": "object", "properties": {"id": {"description": "The ID of this cluster.", "type": "integer"}, "instanceType": {"description": "The EC2 instance types in this cluster.", "type": "string"}, "minInstances": {"description": "The minimum number of instances in this cluster.", "type": "integer"}, "maxInstances": {"description": "The maximum number of instances in this cluster.", "type": "integer"}, "region": {"description": "The AWS region that this cluster is in.", "type": "string"}, "activeJobsCount": {"description": "The number of jobs currently being run in the cluster.", "type": "integer"}, "queuedJobsCount": {"description": "The number of jobs currently waiting to be run on the cluster.", "type": "integer"}, "organizationIds": {"description": "The ids of this cluster's organizations.", "type": "array", "items": {"type": "integer"}}, "organizationSlugs": {"description": "The slugs of this cluster's organizations.", "type": "array", "items": {"type": "string"}}, "singleOrg": {"description": "Whether this cluster is allowed to be used by multiple orgs.", "type": "boolean"}, "desiredInstances": {"description": "The number of instances this cluster should attempt to have.", "type": "integer"}, "createdAt": {"description": "The date and time of cluster creation.", "type": "string", "format": "date-time"}, "updatedAt": {"description": "The date and time of the cluster's last update.", "type": "string", "format": "date-time"}}}, "Object29": {"type": "object", "properties": {"instanceType": {"description": "The EC2 instance types in this cluster.", "type": "string"}, "minInstances": {"description": "The minimum number of instances in this cluster.", "type": "integer"}, "maxInstances": {"description": "The maximum number of instances in this cluster.", "type": "integer"}, "region": {"description": "The AWS region that this cluster is in.", "type": "string"}, "organizationIds": {"description": "The ids of this cluster's organizations.", "type": "array", "items": {"type": "integer"}}, "singleOrg": {"description": "Whether this cluster is allowed to be used by multiple orgs.", "type": "boolean"}, "desiredInstances": {"description": "The number of instances this cluster should attempt to have.", "type": "integer"}, "asgName": {"description": "The name of the AutoScaling Group for the Bocce cluster.", "type": "string"}, "queueUrl": {"description": "The SQS queue URL where jobs are posted to.", "type": "string"}}, "required": ["instanceType", "minInstances", "maxInstances", "region", "singleOrg"]}, "Object30": {"type": "object", "properties": {"id": {"description": "The ID of this cluster.", "type": "integer"}, "instanceType": {"description": "The EC2 instance types in this cluster.", "type": "string"}, "minInstances": {"description": "The minimum number of instances in this cluster.", "type": "integer"}, "maxInstances": {"description": "The maximum number of instances in this cluster.", "type": "integer"}, "instances": {"description": "The number of instances currently in this cluster.", "type": "integer"}, "instanceMaxMemory": {"description": "The amount of memory available to a single instance.", "type": "integer"}, "instanceMaxCpu": {"description": "The number of processor shares available to a single instance.", "type": "integer"}, "instanceMaxDiskSpace": {"description": "The amount of memory available to a single instance.", "type": "number", "format": "float"}, "region": {"description": "The AWS region that this cluster is in.", "type": "string"}, "activeJobsCount": {"description": "The number of jobs currently being run in the cluster.", "type": "integer"}, "queuedJobsCount": {"description": "The number of jobs currently waiting to be run on the cluster.", "type": "integer"}, "organizationIds": {"description": "The ids of this cluster's organizations.", "type": "array", "items": {"type": "integer"}}, "organizationSlugs": {"description": "The slugs of this cluster's organizations.", "type": "array", "items": {"type": "string"}}, "singleOrg": {"description": "Whether this cluster is allowed to be used by multiple orgs.", "type": "boolean"}, "desiredInstances": {"description": "The number of instances this cluster should attempt to have.", "type": "integer"}, "remoteDesiredInstances": {"description": "The number of instances this cluster should attempt to have. Returns -1 if AWS query fails", "type": "integer"}, "asgName": {"description": "The name of the AutoScaling Group for the Bocce cluster.", "type": "string"}, "queueUrl": {"description": "The SQS queue URL where jobs are posted to.", "type": "string"}, "createdAt": {"description": "The date and time of cluster creation.", "type": "string", "format": "date-time"}, "updatedAt": {"description": "The date and time of the cluster's last update.", "type": "string", "format": "date-time"}}}, "Object31": {"type": "object", "properties": {"instanceType": {"description": "The EC2 instance types in this cluster.", "type": "string"}, "minInstances": {"description": "The minimum number of instances in this cluster.", "type": "integer"}, "maxInstances": {"description": "The maximum number of instances in this cluster.", "type": "integer"}, "region": {"description": "The AWS region that this cluster is in.", "type": "string"}, "organizationIds": {"description": "The ids of this cluster's organizations.", "type": "array", "items": {"type": "integer"}}, "singleOrg": {"description": "Whether this cluster is allowed to be used by multiple orgs.", "type": "boolean"}, "desiredInstances": {"description": "The number of instances this cluster should attempt to have.", "type": "integer"}, "asgName": {"description": "The name of the AutoScaling Group for the Bocce cluster.", "type": "string"}, "queueUrl": {"description": "The SQS queue URL where jobs are posted to.", "type": "string"}}}, "Object33": {"type": "object", "properties": {"id": {"type": "integer"}, "state": {"type": "string"}, "createdAt": {"description": "The time that the run was queued.", "type": "string", "format": "time"}, "startedAt": {"description": "The time that the run started.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time that the run completed.", "type": "string", "format": "time"}, "error": {"description": "The error message for this run, if present.", "type": "string"}}}, "Object32": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}, "type": {"type": "string"}, "state": {"description": "Whether the job is idle, queued, running, cancelled, or failed.", "type": "string"}, "createdAt": {"type": "string", "format": "date-time"}, "updatedAt": {"type": "string", "format": "date-time"}, "runs": {"description": "Information about the most recent runs of the job.", "type": "array", "items": {"$ref": "#/definitions/Object33"}}, "lastRun": {"$ref": "#/definitions/Object33"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "requiredCpu": {"description": "The CPU shares required by the script.", "type": "integer"}, "requiredDiskSpace": {"description": "The disk space in GB required by the script.", "type": "integer"}, "requiredMemory": {"description": "The memory in MB required by the script.", "type": "integer"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object11"}, "runningAs": {"description": "The user executing the script.", "$ref": "#/definitions/Object11"}}}, "Object35": {"type": "object", "properties": {"name": {"description": "The identifier of the channel.", "type": "string"}}}, "Object34": {"type": "object", "properties": {"origin": {"description": "The domain for Civis's notifications.", "type": "string"}, "subscribeKey": {"description": "The identification key for Civis's notifications.", "type": "string"}, "cipherKey": {"description": "The cipher key for Civis's notifications.", "type": "string"}, "authKey": {"description": "The authorization key for accessing channels. This is specific to you and should be kept secret.", "type": "string"}, "channels": {"description": "The channels that you are authorized to access.", "type": "array", "items": {"$ref": "#/definitions/Object35"}}}}, "Object36": {"type": "object", "properties": {"id": {"description": "The ID of this cluster.", "type": "integer"}, "instanceType": {"description": "The EC2 instance types in this cluster.", "type": "string"}, "minInstances": {"description": "The minimum number of instances in this cluster.", "type": "integer"}, "maxInstances": {"description": "The maximum number of instances in this cluster.", "type": "integer"}, "region": {"description": "The AWS region that this cluster is in.", "type": "string"}, "activeJobsCount": {"description": "The number of jobs currently being run in the cluster.", "type": "integer"}, "queuedJobsCount": {"description": "The number of jobs currently waiting to be run on the cluster.", "type": "integer"}}}, "Object37": {"type": "object", "properties": {"id": {"description": "The ID of this cluster.", "type": "integer"}, "instanceType": {"description": "The EC2 instance types in this cluster.", "type": "string"}, "minInstances": {"description": "The minimum number of instances in this cluster.", "type": "integer"}, "maxInstances": {"description": "The maximum number of instances in this cluster.", "type": "integer"}, "instances": {"description": "The number of instances currently in this cluster.", "type": "integer"}, "instanceMaxMemory": {"description": "The amount of memory available to a single instance.", "type": "integer"}, "instanceMaxCpu": {"description": "The number of processor shares available to a single instance.", "type": "integer"}, "instanceMaxDiskSpace": {"description": "The amount of memory available to a single instance.", "type": "number", "format": "float"}, "region": {"description": "The AWS region that this cluster is in.", "type": "string"}, "activeJobsCount": {"description": "The number of jobs currently being run in the cluster.", "type": "integer"}, "queuedJobsCount": {"description": "The number of jobs currently waiting to be run on the cluster.", "type": "integer"}}}, "Object38": {"type": "object", "properties": {"id": {"description": "The ID of this cluster.", "type": "integer"}, "instanceType": {"description": "The EC2 instance types in this cluster.", "type": "string"}, "minInstances": {"description": "The minimum number of instances in this cluster.", "type": "integer"}, "maxInstances": {"description": "The maximum number of instances in this cluster.", "type": "integer"}, "instanceMaxMemory": {"description": "The amount of memory available to a single instance.", "type": "integer"}, "instanceMaxCpu": {"description": "The number of processor shares available to a single instance.", "type": "integer"}, "organizationId": {"description": "The id of this cluster's organization.", "type": "string"}, "organizationSlug": {"description": "The slug of this cluster's organization.", "type": "string"}}}, "Object39": {"type": "object", "properties": {"instanceType": {"description": "The EC2 instance types in this cluster.", "type": "string"}, "minInstances": {"description": "The minimum number of instances in this cluster.", "type": "integer"}, "maxInstances": {"description": "The maximum number of instances in this cluster.", "type": "integer"}, "organizationId": {"description": "The id of this cluster's organization.", "type": "string"}, "organizationSlug": {"description": "The slug of this cluster's organization.", "type": "string"}}, "required": ["instanceType", "minInstances", "maxInstances"]}, "Object40": {"type": "object", "properties": {"instanceType": {"description": "The EC2 instance types in this cluster.", "type": "string"}, "minInstances": {"description": "The minimum number of instances in this cluster.", "type": "integer"}, "maxInstances": {"description": "The maximum number of instances in this cluster.", "type": "integer"}, "organizationId": {"description": "The id of this cluster's organization.", "type": "string"}, "organizationSlug": {"description": "The slug of this cluster's organization.", "type": "string"}}}, "Object41": {"type": "object", "properties": {"id": {"description": "The ID for this code.", "type": "integer"}, "name": {"description": "Name of code.", "type": "string"}, "type": {"description": "The code's type; e.g., Code::FrontEnd.", "type": "string"}, "createdAt": {"description": "The creation time for this code.", "type": "string", "format": "time"}, "updatedAt": {"description": "The last modification time for this code.", "type": "string", "format": "time"}}}, "Object42": {"type": "object", "properties": {"id": {"description": "The ID for this code.", "type": "integer"}, "name": {"description": "Name of code.", "type": "string"}, "type": {"description": "The code's type; e.g., Code::FrontEnd.", "type": "string"}, "body": {"description": "Actual code contents; e.g., HTML, SQL, etc.", "type": "string"}, "readme": {"description": "User specified information about this code. Markdown format accepted.", "type": "string"}, "score": {"description": "Internal Civis Use Only.", "type": "integer"}, "authS3Url": {"description": "Authorized_s3_link to file.", "type": "string"}, "createdAt": {"description": "The creation time for this code.", "type": "string", "format": "time"}, "updatedAt": {"description": "The last modification time for this code.", "type": "string", "format": "time"}}}, "Object43": {"type": "object", "properties": {"name": {"description": "Name of code.", "type": "string"}, "type": {"description": "The code's type; e.g., Code::FrontEnd.", "type": "string"}, "body": {"description": "Actual code contents; e.g., HTML, SQL, etc.", "type": "string"}, "readme": {"description": "User specified information about this code. Markdown format accepted.", "type": "string"}, "score": {"description": "Internal Civis Use Only.", "type": "integer"}, "authS3Url": {"description": "Authorized_s3_link to file.", "type": "string"}}, "required": ["name", "type", "body", "readme"]}, "Object44": {"type": "object", "properties": {"name": {"description": "Name of code.", "type": "string"}, "type": {"description": "The code's type; e.g., Code::FrontEnd.", "type": "string"}, "body": {"description": "Actual code contents; e.g., HTML, SQL, etc.", "type": "string"}, "readme": {"description": "User specified information about this code. Markdown format accepted.", "type": "string"}, "score": {"description": "Internal Civis Use Only.", "type": "integer"}, "authS3Url": {"description": "Authorized_s3_link to file.", "type": "string"}}, "required": ["name", "type", "body", "readme"]}, "Object45": {"type": "object", "properties": {"name": {"description": "Name of code.", "type": "string"}, "type": {"description": "The code's type; e.g., Code::FrontEnd.", "type": "string"}, "body": {"description": "Actual code contents; e.g., HTML, SQL, etc.", "type": "string"}, "readme": {"description": "User specified information about this code. Markdown format accepted.", "type": "string"}, "score": {"description": "Internal Civis Use Only.", "type": "integer"}, "authS3Url": {"description": "Authorized_s3_link to file.", "type": "string"}}}, "Object46": {"type": "object", "properties": {"id": {"description": "The ID of the credential.", "type": "integer"}, "name": {"description": "The name identifying the credential", "type": "string"}, "type": {"description": "The credential's type.", "type": "string"}, "username": {"description": "The username for the credential.", "type": "string"}, "description": {"description": "A long description of the credential.", "type": "string"}, "owner": {"description": "The name of the user who this credential belongs to.", "type": "string"}, "remoteHostId": {"description": "The ID of the remote host associated with this credential.", "type": "integer"}, "remoteHostName": {"description": "The name of the remote host associated with this credential.", "type": "string"}, "createdAt": {"description": "The creation time for this credential.", "type": "string", "format": "time"}, "updatedAt": {"description": "The last modification time for this credential.", "type": "string", "format": "time"}}}, "Object47": {"type": "object", "properties": {"name": {"description": "The name identifying the credential.", "type": "string"}, "type": {"type": "string"}, "description": {"description": "A long description of the credential.", "type": "string"}, "username": {"description": "The username for the credential.", "type": "string"}, "password": {"description": "The password for the credential.", "type": "string"}, "remoteHostId": {"description": "The ID of the remote host associated with the credential.", "type": "integer"}, "systemCredential": {"type": "boolean"}}, "required": ["type", "username", "password"]}, "Object48": {"type": "object", "properties": {"name": {"description": "The name identifying the credential.", "type": "string"}, "type": {"type": "string"}, "description": {"description": "A long description of the credential.", "type": "string"}, "username": {"description": "The username for the credential.", "type": "string"}, "password": {"description": "The password for the credential.", "type": "string"}, "remoteHostId": {"description": "The ID of the remote host associated with the credential.", "type": "integer"}, "systemCredential": {"type": "boolean"}}, "required": ["type", "username", "password"]}, "Object49": {"type": "object", "properties": {"url": {"description": "The URL to your host.", "type": "string"}, "remoteHostType": {"description": "The type of remote host. One of: RemoteHostTypes::BSD, RemoteHostTypes::Ftp, RemoteHostTypes::Github, RemoteHostTypes::GoogleDoc, RemoteHostTypes::JDBC, RemoteHostTypes::Redshift, RemoteHostTypes::Salesforce, and RemoteHostTypes::Van", "type": "string"}, "username": {"description": "The username for the credential.", "type": "string"}, "password": {"description": "The password for the credential.", "type": "string"}}, "required": ["url", "remoteHostType", "username", "password"]}, "Object50": {"type": "object", "properties": {"duration": {"description": "The number of seconds the temporary credential should be valid. Defaults to 15 minutes. Must not be less than 15 minutes or greater than 36 hours.", "type": "integer"}}}, "Object51": {"type": "object", "properties": {"accessKey": {"description": "The identifier of the credential.", "type": "string"}, "secretAccessKey": {"description": "The secret part of the credential.", "type": "string"}, "sessionToken": {"description": "The session token identifier.", "type": "string"}}}, "Object52": {"type": "object", "properties": {"userIds": {"description": "An array of one or more user IDs", "type": "array", "items": {"type": "integer"}}, "permissionLevel": {"description": "Options are: \"read\", \"write\", or \"manage\"", "type": "string"}, "shareEmailBody": {"description": "Custom body text for e-mail sent on a share.", "type": "string"}, "sendSharedEmail": {"description": "Send email to the recipients of a share.", "type": "boolean"}}, "required": ["userIds", "permissionLevel"]}, "Object53": {"type": "object", "properties": {"groupIds": {"description": "An array of one or more group IDs", "type": "array", "items": {"type": "integer"}}, "permissionLevel": {"description": "Options are: \"read\", \"write\", or \"manage\"", "type": "string"}, "shareEmailBody": {"description": "Custom body text for e-mail sent on a share.", "type": "string"}, "sendSharedEmail": {"description": "Send email to the recipients of a share.", "type": "boolean"}}, "required": ["groupIds", "permissionLevel"]}, "Object54": {"type": "object", "properties": {"id": {"description": "The ID for the database.", "type": "integer"}, "name": {"description": "The name of the database.", "type": "string"}}}, "Object55": {"type": "object", "properties": {"schema": {"description": "The name of a schema.", "type": "string"}}}, "Object56": {"type": "object", "properties": {"id": {"description": "The ID of the table.", "type": "integer"}, "databaseId": {"description": "The ID of the database.", "type": "integer"}, "schema": {"description": "The name of the schema containing the table.", "type": "string"}, "name": {"description": "Name of the table.", "type": "string"}, "description": {"description": "The description of the table, as specified by the table owner", "type": "string"}, "isView": {"description": "True if this table represents a view. False if it represents a regular table.", "type": "boolean"}, "rowCount": {"description": "The number of rows in the table.", "type": "integer"}, "columnCount": {"description": "The number of columns in the table.", "type": "integer"}, "sizeMb": {"description": "The size of the table in megabytes.", "type": "number", "format": "float"}, "owner": {"description": "The database username of the table's owner.", "type": "string"}, "distkey": {"description": "The column used as the Amazon Redshift distkey.", "type": "string"}, "sortkeys": {"description": "The column used as the Amazon Redshift sortkey.", "type": "string"}, "refreshStatus": {"description": "How up-to-date the table's statistics on row counts, null counts, distinct counts, and values distributions are. One of: refreshing, stale, or current.", "type": "string"}, "lastRefresh": {"description": "The time of the last statistics refresh.", "type": "string", "format": "date-time"}, "refreshId": {"description": "The ID of the most recent statistics refresh.", "type": "string"}, "lastRun": {"description": "The last run of a refresh on this table.", "$ref": "#/definitions/Object33"}}}, "Object57": {"type": "object", "properties": {"id": {"description": "The ID of the table.", "type": "integer"}, "databaseId": {"description": "The ID of the database.", "type": "integer"}, "schema": {"description": "The name of the schema containing the table.", "type": "string"}, "name": {"description": "Name of the table.", "type": "string"}, "description": {"description": "The description of the table, as specified by the table owner", "type": "string"}, "isView": {"description": "True if this table represents a view. False if it represents a regular table.", "type": "boolean"}, "rowCount": {"description": "The number of rows in the table.", "type": "integer"}, "columnCount": {"description": "The number of columns in the table.", "type": "integer"}, "sizeMb": {"description": "The size of the table in megabytes.", "type": "number", "format": "float"}, "owner": {"description": "The database username of the table's owner.", "type": "string"}, "distkey": {"description": "The column used as the Amazon Redshift distkey.", "type": "string"}, "sortkeys": {"description": "The column used as the Amazon Redshift sortkey.", "type": "string"}, "refreshStatus": {"description": "How up-to-date the table's statistics on row counts, null counts, distinct counts, and values distributions are. One of: refreshing, stale, or current.", "type": "string"}, "lastRefresh": {"description": "The time of the last statistics refresh.", "type": "string", "format": "date-time"}, "refreshId": {"description": "The ID of the most recent statistics refresh.", "type": "string"}, "lastRun": {"description": "The last run of a refresh on this table.", "$ref": "#/definitions/Object33"}, "columnNames": {"description": "The names of each column in the table.", "type": "array", "items": {"type": "string"}}}}, "Object58": {"type": "object", "properties": {"id": {"description": "The ID of this whitelisted IP address.", "type": "integer"}, "remoteHostId": {"description": "The ID of the database this rule is applied to.", "type": "integer"}, "securityGroupId": {"description": "The ID of the security group this rule is applied to.", "type": "string"}, "subnetMask": {"description": "The subnet mask that is allowed by this rule.", "type": "string"}, "createdAt": {"description": "The time this rule was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time this rule was last updated.", "type": "string", "format": "time"}}}, "Object59": {"type": "object", "properties": {"id": {"description": "The ID of this whitelisted IP address.", "type": "integer"}, "remoteHostId": {"description": "The ID of the database this rule is applied to.", "type": "integer"}, "securityGroupId": {"description": "The ID of the security group this rule is applied to.", "type": "string"}, "subnetMask": {"description": "The subnet mask that is allowed by this rule.", "type": "string"}, "authorizedBy": {"description": "The user who authorized this rule.", "type": "string"}, "isActive": {"description": "True if the rule is applied, false if it has been revoked.", "type": "boolean"}, "createdAt": {"description": "The time this rule was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time this rule was last updated.", "type": "string", "format": "time"}}}, "Object60": {"type": "object", "properties": {"subnetMask": {"description": "The subnet mask that is allowed by this rule.", "type": "string"}}, "required": ["subnetMask"]}, "Object61": {"type": "object", "properties": {"name": {"description": "The name of the type.", "type": "string"}}}, "Object62": {"type": "object", "properties": {"id": {"description": "The ID for the enhancement.", "type": "integer"}, "name": {"description": "The name of the enhancement.", "type": "string"}, "type": {"description": "The type of the enhancement (e.g CASS-NCOA)", "type": "string"}, "createdAt": {"description": "The time this enhancement was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time the enhancement was last updated.", "type": "string", "format": "time"}, "author": {"description": "The author of the enhancement.", "$ref": "#/definitions/Object11"}, "state": {"description": "The status of the enhancement's last run", "type": "string"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object64": {"type": "object", "properties": {"scheduled": {"description": "If the object is scheduled", "type": "boolean"}, "scheduledDays": {"description": "Day based on numeric value starting at 0 for Sunday", "type": "array", "items": {"type": "integer"}}, "scheduledHours": {"description": "Hours of the day it is scheduled on", "type": "array", "items": {"type": "integer"}}, "scheduledMinutes": {"description": "Minutes of the day it is scheduled on", "type": "array", "items": {"type": "integer"}}, "scheduledRunsPerHour": {"description": "Alternative to scheduled minutes, number of times to run per hour", "type": "integer"}}}, "Object65": {"type": "object", "properties": {"urls": {"description": "URLs to receive a POST request at job completion", "type": "array", "items": {"type": "string"}}, "successEmailSubject": {"description": "Custom subject line for success e-mail.", "type": "string"}, "successEmailBody": {"description": "Custom body text for success e-mail, written in Markdown.", "type": "string"}, "successEmailAddresses": {"description": "Addresses to notify by e-mail when the job completes successfully.", "type": "array", "items": {"type": "string"}}, "successEmailFromName": {"description": "Name from which success emails are sent; defaults to \"Civis.\"", "type": "string"}, "successEmailReplyTo": {"description": "Address for replies to success emails; defaults to the author of the job.", "type": "string"}, "failureEmailAddresses": {"description": "Addresses to notify by e-mail when the job fails.", "type": "array", "items": {"type": "string"}}, "stallWarningMinutes": {"description": "Stall warning emails will be sent after this amount of minutes.", "type": "integer"}, "successOn": {"description": "If success email notifications are on.", "type": "boolean"}, "failureOn": {"description": "If failure email notifications are on.", "type": "boolean"}}}, "Object67": {"type": "object", "properties": {"schema": {"description": "The schema name of the source table.", "type": "string"}, "table": {"description": "The name of the source table.", "type": "string"}, "remoteHostId": {"description": "The ID of the database host for the table.", "type": "integer"}, "credentialId": {"description": "The id of the credentials to be used when performing the enhancement.", "type": "integer"}, "multipartKey": {"description": "The source table primary key.", "type": "array", "items": {"type": "string"}}}, "required": ["schema", "table", "remoteHostId", "credentialId"]}, "Object66": {"type": "object", "properties": {"databaseTable": {"description": "The information about the source database table.", "$ref": "#/definitions/Object67"}}}, "Object69": {"type": "object", "properties": {"schema": {"description": "The schema name for the output data.", "type": "string"}, "table": {"description": "The table name for the output data.", "type": "string"}}}, "Object68": {"type": "object", "properties": {"databaseTable": {"description": "The information about the output database table.", "$ref": "#/definitions/Object69"}}}, "Object70": {"type": "object", "properties": {"address1": {"description": "The first address line.", "type": "string"}, "address2": {"description": "The second address line.", "type": "string"}, "city": {"description": "The city of an address.", "type": "string"}, "state": {"description": "The state of an address.", "type": "string"}, "zip": {"description": "The zip code of an address.", "type": "string"}, "name": {"description": "The full name of the resident at this address. If needed, separate multiple columns with `+`, e.g. `first_name+last_name`", "type": "string"}, "company": {"description": "The name of the company located at this address.", "type": "string"}}}, "Object63": {"type": "object", "properties": {"name": {"description": "The name of the enhancement.", "type": "string"}, "schedule": {"description": "The schedule of when this enhancement will be run.", "$ref": "#/definitions/Object64"}, "parentId": {"description": "Parent ID that triggers this enhancement.", "type": "integer"}, "notifications": {"description": "The notifications to send after the enhancement is run.", "$ref": "#/definitions/Object65"}, "source": {"description": "The information about the source data that will be enhanced. Specify exactly one source.", "$ref": "#/definitions/Object66"}, "destination": {"description": "The information about how to output the results of this enhancement. Specify exactly one destination.", "$ref": "#/definitions/Object68"}, "columnMapping": {"description": "A mapping of what columns in the source correspond to the required columns for a CASS/NCOA enhancement.", "$ref": "#/definitions/Object70"}, "useDefaultColumnMapping": {"description": "Defaults to true, where the existing column mapping on the input table will be used. If false, a custom column mapping must be provided.", "type": "boolean"}, "performNcoa": {"description": "Whether to update addresses for records matching the National Change of Address (NCOA) database.", "type": "boolean"}, "ncoaCredentialId": {"description": "Credential to use when performing NCOA updates. Required if 'performNcoa' is true.", "type": "integer"}, "outputLevel": {"description": "The set of fields persisted by a CASS or NCOA enhancement.For CASS enhancements, one of 'cass' or 'all.'For NCOA enhancements, one of 'cass', 'ncoa' , 'coalesced' or 'all'.By default, all fields will be returned.", "type": "string"}, "limitingSQL": {"description": "The limiting sql.", "type": "string"}}, "required": ["name", "source"]}, "Object72": {"type": "object", "properties": {"scheduled": {"description": "If the object is scheduled", "type": "boolean"}, "scheduledDays": {"description": "Day based on numeric value starting at 0 for Sunday", "type": "array", "items": {"type": "integer"}}, "scheduledHours": {"description": "Hours of the day it is scheduled on", "type": "array", "items": {"type": "integer"}}, "scheduledMinutes": {"description": "Minutes of the day it is scheduled on", "type": "array", "items": {"type": "integer"}}, "scheduledRunsPerHour": {"description": "Alternative to scheduled minutes, number of times to run per hour", "type": "integer"}}}, "Object73": {"type": "object", "properties": {"urls": {"description": "URLs to receive a POST request at job completion", "type": "array", "items": {"type": "string"}}, "successEmailSubject": {"description": "Custom subject line for success e-mail.", "type": "string"}, "successEmailBody": {"description": "Custom body text for success e-mail, written in Markdown.", "type": "string"}, "successEmailAddresses": {"description": "Addresses to notify by e-mail when the job completes successfully.", "type": "array", "items": {"type": "string"}}, "successEmailFromName": {"description": "Name from which success emails are sent; defaults to \"Civis.\"", "type": "string"}, "successEmailReplyTo": {"description": "Address for replies to success emails; defaults to the author of the job.", "type": "string"}, "failureEmailAddresses": {"description": "Addresses to notify by e-mail when the job fails.", "type": "array", "items": {"type": "string"}}, "stallWarningMinutes": {"description": "Stall warning emails will be sent after this amount of minutes.", "type": "integer"}, "successOn": {"description": "If success email notifications are on.", "type": "boolean"}, "failureOn": {"description": "If failure email notifications are on.", "type": "boolean"}}}, "Object75": {"type": "object", "properties": {"schema": {"description": "The schema name of the source table.", "type": "string"}, "table": {"description": "The name of the source table.", "type": "string"}, "remoteHostId": {"description": "The ID of the database host for the table.", "type": "integer"}, "credentialId": {"description": "The id of the credentials to be used when performing the enhancement.", "type": "integer"}, "multipartKey": {"description": "The source table primary key.", "type": "array", "items": {"type": "string"}}}}, "Object74": {"type": "object", "properties": {"databaseTable": {"description": "The information about the source database table.", "$ref": "#/definitions/Object75"}}}, "Object77": {"type": "object", "properties": {"schema": {"description": "The schema name for the output data.", "type": "string"}, "table": {"description": "The table name for the output data.", "type": "string"}}}, "Object76": {"type": "object", "properties": {"databaseTable": {"description": "The information about the output database table.", "$ref": "#/definitions/Object77"}}}, "Object78": {"type": "object", "properties": {"address1": {"description": "The first address line.", "type": "string"}, "address2": {"description": "The second address line.", "type": "string"}, "city": {"description": "The city of an address.", "type": "string"}, "state": {"description": "The state of an address.", "type": "string"}, "zip": {"description": "The zip code of an address.", "type": "string"}, "name": {"description": "The full name of the resident at this address. If needed, separate multiple columns with `+`, e.g. `first_name+last_name`", "type": "string"}, "company": {"description": "The name of the company located at this address.", "type": "string"}}}, "Object71": {"type": "object", "properties": {"id": {"description": "The ID for the enhancement.", "type": "integer"}, "name": {"description": "The name of the enhancement.", "type": "string"}, "type": {"description": "The type of the enhancement (e.g CASS-NCOA)", "type": "string"}, "createdAt": {"description": "The time this enhancement was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time the enhancement was last updated.", "type": "string", "format": "time"}, "author": {"description": "The author of the enhancement.", "$ref": "#/definitions/Object11"}, "state": {"description": "The status of the enhancement's last run", "type": "string"}, "schedule": {"description": "The schedule of when this enhancement will be run.", "$ref": "#/definitions/Object72"}, "parentId": {"description": "Parent ID that triggers this enhancement.", "type": "integer"}, "notifications": {"description": "The notifications to send after the enhancement is run.", "$ref": "#/definitions/Object73"}, "runningAs": {"description": "The user this enhancement will run as, defaults to the author of the enhancement.", "$ref": "#/definitions/Object11"}, "source": {"description": "The information about the source data that will be enhanced. Specify exactly one source.", "$ref": "#/definitions/Object74"}, "destination": {"description": "The information about how to output the results of this enhancement. Specify exactly one destination.", "$ref": "#/definitions/Object76"}, "columnMapping": {"description": "A mapping of what columns in the source correspond to the required columns for a CASS/NCOA enhancement.", "$ref": "#/definitions/Object78"}, "useDefaultColumnMapping": {"description": "Defaults to true, where the existing column mapping on the input table will be used. If false, a custom column mapping must be provided.", "type": "boolean"}, "performNcoa": {"description": "Whether to update addresses for records matching the National Change of Address (NCOA) database.", "type": "boolean"}, "ncoaCredentialId": {"description": "Credential to use when performing NCOA updates. Required if 'performNcoa' is true.", "type": "integer"}, "outputLevel": {"description": "The set of fields persisted by a CASS or NCOA enhancement.For CASS enhancements, one of 'cass' or 'all.'For NCOA enhancements, one of 'cass', 'ncoa' , 'coalesced' or 'all'.By default, all fields will be returned.", "type": "string"}, "limitingSQL": {"description": "The limiting sql.", "type": "string"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object79": {"type": "object", "properties": {"name": {"description": "The name of the enhancement.", "type": "string"}, "schedule": {"description": "The schedule of when this enhancement will be run.", "$ref": "#/definitions/Object64"}, "parentId": {"description": "Parent ID that triggers this enhancement.", "type": "integer"}, "notifications": {"description": "The notifications to send after the enhancement is run.", "$ref": "#/definitions/Object65"}, "source": {"description": "The information about the source data that will be enhanced. Specify exactly one source.", "$ref": "#/definitions/Object66"}, "destination": {"description": "The information about how to output the results of this enhancement. Specify exactly one destination.", "$ref": "#/definitions/Object68"}, "columnMapping": {"description": "A mapping of what columns in the source correspond to the required columns for a CASS/NCOA enhancement.", "$ref": "#/definitions/Object70"}, "useDefaultColumnMapping": {"description": "Defaults to true, where the existing column mapping on the input table will be used. If false, a custom column mapping must be provided.", "type": "boolean"}, "performNcoa": {"description": "Whether to update addresses for records matching the National Change of Address (NCOA) database.", "type": "boolean"}, "ncoaCredentialId": {"description": "Credential to use when performing NCOA updates. Required if 'performNcoa' is true.", "type": "integer"}, "outputLevel": {"description": "The set of fields persisted by a CASS or NCOA enhancement.For CASS enhancements, one of 'cass' or 'all.'For NCOA enhancements, one of 'cass', 'ncoa' , 'coalesced' or 'all'.By default, all fields will be returned.", "type": "string"}, "limitingSQL": {"description": "The limiting sql.", "type": "string"}}, "required": ["name", "source"]}, "Object80": {"type": "object", "properties": {"name": {"description": "The name of the enhancement.", "type": "string"}, "schedule": {"description": "The schedule of when this enhancement will be run.", "$ref": "#/definitions/Object64"}, "parentId": {"description": "Parent ID that triggers this enhancement.", "type": "integer"}, "notifications": {"description": "The notifications to send after the enhancement is run.", "$ref": "#/definitions/Object65"}, "source": {"description": "The information about the source data that will be enhanced. Specify exactly one source.", "$ref": "#/definitions/Object66"}, "destination": {"description": "The information about how to output the results of this enhancement. Specify exactly one destination.", "$ref": "#/definitions/Object68"}, "columnMapping": {"description": "A mapping of what columns in the source correspond to the required columns for a CASS/NCOA enhancement.", "$ref": "#/definitions/Object70"}, "useDefaultColumnMapping": {"description": "Defaults to true, where the existing column mapping on the input table will be used. If false, a custom column mapping must be provided.", "type": "boolean"}, "performNcoa": {"description": "Whether to update addresses for records matching the National Change of Address (NCOA) database.", "type": "boolean"}, "ncoaCredentialId": {"description": "Credential to use when performing NCOA updates. Required if 'performNcoa' is true.", "type": "integer"}, "outputLevel": {"description": "The set of fields persisted by a CASS or NCOA enhancement.For CASS enhancements, one of 'cass' or 'all.'For NCOA enhancements, one of 'cass', 'ncoa' , 'coalesced' or 'all'.By default, all fields will be returned.", "type": "string"}, "limitingSQL": {"description": "The limiting sql.", "type": "string"}}}, "Object81": {"type": "object", "properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "cassNcoaId": {"description": "The ID of the cass_ncoa.", "type": "integer"}, "state": {"description": "The state of the run, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "startedAt": {"description": "The time the last run started at.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time the last run completed.", "type": "string", "format": "time"}, "error": {"description": "The error, if any, returned by the run.", "type": "string"}}}, "Object82": {"type": "object", "properties": {"id": {"description": "The ID of the log.", "type": "integer"}, "createdAt": {"description": "The time the log was created.", "type": "string", "format": "date-time"}, "message": {"description": "The log message.", "type": "string"}, "level": {"description": "The level of the log. One of unknown,fatal,error,warn,info,debug.", "type": "string"}}}, "Object83": {"type": "object", "properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "state": {"description": "The state of the run, one of 'queued', 'running' or 'cancelled'.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}}}, "Object84": {"type": "object", "properties": {"objectType": {"description": "The type of the output. Valid values are File, Table, Report, Project, or Credential", "type": "string"}, "objectId": {"description": "The ID of the output object.", "type": "integer"}, "name": {"description": "The name of the output object.", "type": "string"}, "link": {"description": "The link to retrieve the output object.", "type": "string"}}}, "Object85": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object86": {"type": "object", "properties": {"id": {"description": "The ID for this export.", "type": "integer"}, "name": {"description": "The name of this export.", "type": "string"}, "type": {"description": "The type of export.", "type": "string"}, "createdAt": {"description": "The creation time for this export.", "type": "string", "format": "time"}, "updatedAt": {"description": "The last modification time for this export.", "type": "string", "format": "time"}, "state": {"type": "string"}, "lastRun": {"description": "The last run of this export.", "$ref": "#/definitions/Object33"}, "author": {"description": "The author of the export.", "$ref": "#/definitions/Object11"}}}, "Object87": {"type": "object", "properties": {"name": {"description": "The name of the feature flag.", "type": "string"}, "userCount": {"description": "The number of users with this feature flag enabled.", "type": "integer"}, "description": {"type": "string"}, "team": {"type": "string"}, "jira": {"type": "string"}, "added": {"type": "string", "format": "date"}, "groupCount": {"type": "integer"}, "percentage": {"description": "The target percentage of users who should have this feature flag enabled.", "type": "integer"}}}, "Object90": {"type": "object", "properties": {"id": {"description": "User ID", "type": "integer"}, "username": {"description": "Username", "type": "string"}}}, "Object89": {"type": "object", "properties": {"id": {"description": "Group ID", "type": "integer"}, "name": {"description": "Group name", "type": "string"}, "slug": {"description": "Group slug", "type": "string"}, "users": {"description": "Users within the group", "type": "array", "items": {"$ref": "#/definitions/Object90"}}}}, "Object88": {"type": "object", "properties": {"name": {"description": "The name of the feature flag", "type": "string"}, "groups": {"description": "Groups that have the feature flag activated", "type": "array", "items": {"$ref": "#/definitions/Object89"}}, "users": {"description": "Users that have the feature flag activated", "type": "array", "items": {"$ref": "#/definitions/Object90"}}, "percentage": {"description": "The target percentage of users who should have this feature flag enabled.", "type": "integer"}}}, "Object91": {"type": "object", "properties": {"name": {"description": "The file name.", "type": "string"}, "expiresAt": {"description": "The date and time the file will expire. If not specified, the file will expire in 30 days. To keep a file indefinitely, specify null.", "type": "string", "format": "date-time"}}, "required": ["name"]}, "Object92": {"type": "object", "properties": {"id": {"description": "The ID of the file object.", "type": "integer"}, "name": {"description": "The file name.", "type": "string"}, "createdAt": {"description": "The date and time the file was created.", "type": "string", "format": "date-time"}, "fileSize": {"description": "The file size.", "type": "integer"}, "expiresAt": {"description": "The date and time the file will expire. If not specified, the file will expire in 30 days. To keep a file indefinitely, specify null.", "type": "string", "format": "date-time"}, "uploadUrl": {"description": "The URL that may be used to upload a file. To use the upload URL, initiate a POST request to the given URL with the file you wish to import as the \"file\" form field.", "type": "string"}, "uploadFields": {"description": "A hash containing the form fields to be included with the POST request.", "type": "object"}}}, "Object93": {"type": "object", "properties": {"id": {"description": "The ID of the file object.", "type": "integer"}, "name": {"description": "The file name.", "type": "string"}, "createdAt": {"description": "The date and time the file was created.", "type": "string", "format": "date-time"}, "fileSize": {"description": "The file size.", "type": "integer"}, "expiresAt": {"description": "The date and time the file will expire. If not specified, the file will expire in 30 days. To keep a file indefinitely, specify null.", "type": "string", "format": "date-time"}, "downloadUrl": {"description": "A JSON string containing information about the URL of the file.", "type": "string"}, "fileUrl": {"description": "The URL that may be used to download the file.", "type": "string"}}}, "Object94": {"type": "object", "properties": {"id": {"description": "The ID of this group.", "type": "integer"}, "name": {"description": "This group's name.", "type": "string"}, "createdAt": {"description": "The date and time when this group was created.", "type": "string", "format": "time"}, "slug": {"description": "The slug for this group.", "type": "string"}, "organizationId": {"description": "The organization associated with this group.", "type": "integer"}}}, "Object99": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object101": {"type": "object", "properties": {"remoteHostId": {"type": "integer"}, "credentialId": {"type": "integer"}, "additionalCredentials": {"description": "Array that holds additional credentials used for specific imports. For salesforce imports, the first and only element is the client credential id.", "type": "array", "items": {"type": "integer"}}, "name": {"type": "string"}}}, "Object104": {"type": "object", "properties": {"schema": {"description": "The database schema name.", "type": "string"}, "table": {"description": "The database table name.", "type": "string"}}}, "Object105": {"type": "object", "properties": {"id": {"description": "The file id.", "type": "integer"}}}, "Object106": {"type": "object", "properties": {"spreadsheet": {"description": "The spreadsheet document name.", "type": "string"}, "worksheet": {"description": "The worksheet tab name.", "type": "string"}}}, "Object107": {"type": "object", "properties": {"objectName": {"description": "The Salesforce object name.", "type": "string"}}}, "Object108": {"type": "object", "properties": {"listId": {"description": "The Silverpop list id.", "type": "integer"}}}, "Object103": {"type": "object", "properties": {"id": {"description": "The ID of the table or file, if available.", "type": "integer"}, "path": {"description": "The path of the dataset to sync from; for a database source, schema.tablename. If you are doing a Google Sheet export, this can be blank. This is a legacy parameter, it is recommended you use one of the following: databaseTable, file, googleWorksheet, salesforce, silverpop", "type": "string"}, "databaseTable": {"description": "The sync source is a database table.", "$ref": "#/definitions/Object104"}, "file": {"description": "The sync source is a file.", "$ref": "#/definitions/Object105"}, "googleWorksheet": {"description": "The sync source is a Google worksheet.", "$ref": "#/definitions/Object106"}, "salesforce": {"description": "The sync source is Salesforce.", "$ref": "#/definitions/Object107"}, "silverpop": {"description": "The sync source is Silverpop.", "$ref": "#/definitions/Object108"}}}, "Object109": {"type": "object", "properties": {"path": {"description": "The schema.tablename to sync to. If you are doing a Google Sheet export, this is the spreadsheet and sheet name separated by a period. i.e. if you have a spreadsheet named \"MySpreadsheet\" and a sheet called \"Sheet1\" this field would be \"MySpreadsheet.Sheet1\". This is a legacy parameter, it is recommended you use one of the following: databaseTable, googleWorksheet", "type": "string"}, "databaseTable": {"description": "The sync source is a database table.", "$ref": "#/definitions/Object104"}, "googleWorksheet": {"description": "The sync source is a Google worksheet.", "$ref": "#/definitions/Object106"}}}, "Object111": {"type": "object", "properties": {"name": {"description": "The column name that will override the auto-detected name.", "type": "string"}, "type": {"description": "Declaration of SQL type that will override the auto-detected SQL type, including necessary properties such as length, precision, etc.", "type": "string"}}}, "Object110": {"type": "object", "properties": {"maxErrors": {"type": "integer"}, "existingTableRows": {"type": "string"}, "distkey": {"type": "string"}, "sortkey1": {"type": "string"}, "sortkey2": {"type": "string"}, "columnDelimiter": {"type": "string"}, "columnOverrides": {"description": "Hash used for overriding auto-detected names and types, with keys being the current name of the column being overridden.", "type": "object", "additionalProperties": {"$ref": "#/definitions/Object111"}}, "identityColumn": {"type": "string"}, "rowChunkSize": {"type": "integer"}, "wipeDestinationTable": {"type": "boolean"}, "truncateLongLines": {"type": "boolean"}, "invalidCharReplacement": {"type": "string"}, "verifyTableRowCounts": {"type": "boolean"}, "partitionColumnName": {"type": "string"}, "partitionSchemaName": {"type": "string"}, "partitionTableName": {"type": "string"}, "partitionTablePartitionColumnMinName": {"type": "string"}, "partitionTablePartitionColumnMaxName": {"type": "string"}, "lastModifiedColumn": {"type": "string"}, "mysqlCatalogMatchesSchema": {"type": "boolean"}, "chunkingMethod": {"description": "The method used to break the data into smaller chunks for transfer.  The value can be set to sorted_by_identity_columns or if not set the chunking method will be choosen automatically.", "type": "string"}, "firstRowIsHeader": {"type": "boolean"}, "exportAction": {"description": "The kind of export action you want to have the export execute. Set to \"newsprsht\" if you want a new worksheet inside a new spreadsheet. Set to \"newwksht\" if you want a new worksheet inside an existing spreadsheet. Set to \"updatewksht\" if you want to overwrite an existing worksheet inside an existing spreadsheet. Set to \"appendwksht\" if you want to append to the end of an existing worksheet inside an existing spreadsheet. ", "type": "string"}, "sqlQuery": {"description": "If you are doing a Google Sheet export, this is your SQL query.", "type": "string"}, "contactLists": {"type": "string"}, "soqlQuery": {"type": "string"}}}, "Object102": {"type": "object", "properties": {"id": {"type": "integer"}, "source": {"$ref": "#/definitions/Object103"}, "destination": {"$ref": "#/definitions/Object109"}, "advancedOptions": {"description": "Additional sync configuration parameters. For examples of sync-specific parameters, see the Examples section of the API documentation.", "$ref": "#/definitions/Object110"}}}, "Object100": {"type": "object", "properties": {"name": {"description": "The name of the import.", "type": "string"}, "syncType": {"description": "The type of sync to perform; one of Dbsync, AutoImport, SilverpopDataImport, SilverpopContactImport, GdocImport, GdocExport, and Salesforce.", "type": "string"}, "source": {"description": "The data source from which to import.", "$ref": "#/definitions/Object101"}, "destination": {"description": "The database into which to import.", "$ref": "#/definitions/Object101"}, "schedule": {"description": "The schedule when the import will run.", "$ref": "#/definitions/Object72"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object73"}, "parentId": {"description": "Parent id to trigger this import from", "type": "integer"}, "id": {"description": "The ID for the import.", "type": "integer"}, "isOutbound": {"type": "boolean"}, "jobType": {"description": "The job type of this import.", "type": "string"}, "syncs": {"description": "List of syncs.", "type": "array", "items": {"$ref": "#/definitions/Object102"}}, "state": {"type": "string"}, "createdAt": {"type": "string", "format": "date-time"}, "updatedAt": {"type": "string", "format": "date-time"}, "lastRun": {"description": "The last run of this import.", "$ref": "#/definitions/Object33"}, "user": {"$ref": "#/definitions/Object11"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object11"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this import.", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object112": {"type": "object", "properties": {"name": {"description": "The name of the import.", "type": "string"}, "syncType": {"description": "The type of sync to perform; one of Dbsync, AutoImport, SilverpopDataImport, SilverpopContactImport, GdocImport, GdocExport, and Salesforce.", "type": "string"}, "source": {"description": "The data source from which to import.", "$ref": "#/definitions/Object101"}, "destination": {"description": "The database into which to import.", "$ref": "#/definitions/Object101"}, "schedule": {"description": "The schedule when the import will run.", "$ref": "#/definitions/Object72"}, "id": {"description": "The ID for the import.", "type": "integer"}, "isOutbound": {"type": "boolean"}, "jobType": {"description": "The job type of this import.", "type": "string"}, "state": {"type": "string"}, "createdAt": {"type": "string", "format": "date-time"}, "updatedAt": {"type": "string", "format": "date-time"}, "lastRun": {"description": "The last run of this import.", "$ref": "#/definitions/Object33"}, "user": {"$ref": "#/definitions/Object11"}, "timeZone": {"description": "The time zone of this import.", "type": "string"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object114": {"type": "object", "properties": {"remoteHostId": {"type": "integer"}, "credentialId": {"type": "integer"}, "additionalCredentials": {"description": "Array that holds additional credentials used for specific imports. For salesforce imports, the first and only element is the client credential id.", "type": "array", "items": {"type": "integer"}}}, "required": ["remoteHostId", "credentialId"]}, "Object113": {"type": "object", "properties": {"name": {"description": "The name of the import.", "type": "string"}, "syncType": {"description": "The type of sync to perform; one of Dbsync, AutoImport, SilverpopDataImport, SilverpopContactImport, GdocImport, GdocExport, and Salesforce.", "type": "string"}, "source": {"description": "The data source from which to import.", "$ref": "#/definitions/Object114"}, "destination": {"description": "The database into which to import.", "$ref": "#/definitions/Object114"}, "schedule": {"description": "The schedule when the import will run.", "$ref": "#/definitions/Object64"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object65"}, "parentId": {"description": "Parent id to trigger this import from", "type": "integer"}, "isOutbound": {"type": "boolean"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this import.", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}, "required": ["name", "syncType", "isOutbound"]}, "Object115": {"type": "object", "properties": {"schema": {"description": "The schema of the destination table.", "type": "string"}, "name": {"description": "The name of the destination table.", "type": "string"}, "remoteHostId": {"description": "The id of the destination database host.", "type": "integer"}, "credentialId": {"description": "The id of the credentials to be used when performing the database import.", "type": "integer"}, "maxErrors": {"description": "The maximum number of rows with errors to remove from the import before failing.", "type": "integer"}, "existingTableRows": {"description": "The behaviour if a table with the requested name already exists.  One of \"fail\", \"truncate\", \"append\", or \"drop\".Defaults to \"fail\".", "type": "string"}, "distkey": {"description": "The column to use as the distkey for the table.", "type": "string"}, "sortkey1": {"description": "The column to use as the sort key for the table.", "type": "string"}, "sortkey2": {"description": "The second column in a compound sortkey for the table.", "type": "string"}, "columnDelimiter": {"description": "The column delimiter of the file. If column_delimiter is null or omitted, it will be auto-detected. Valid arguments are \"comma\", \"tab\", and \"pipe\".", "type": "string"}, "firstRowIsHeader": {"description": "A boolean value indicating whether or not the first row is a header row. If first_row_is_header is null or omitted, it will be auto-detected.", "type": "boolean"}, "multipart": {"description": "If true, the upload URI will require a `multipart/form-data` POST request. Defaults to false.", "type": "boolean"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}, "required": ["schema", "name", "remoteHostId", "credentialId"]}, "Object116": {"type": "object", "properties": {"id": {"description": "The id of the import.", "type": "integer"}, "uploadUri": {"description": "The URI which may be used to upload a tabular file for import. You must use this URI to upload the file you wish imported and then inform the Civis API when your upload is complete using the URI given by the runUri field of this reponse.", "type": "string"}, "runUri": {"description": "The URI to POST to once the file upload is complete. After uploading the file using the URI given in the uploadUri attribute of the reponse, POST to this URI to initiate the import of your uploaded file into the platform.", "type": "string"}, "uploadFields": {"description": "If multipart was set to true, these fields should be included in the multipart upload.", "type": "object", "additionalProperties": {"type": "string"}}}}, "Object117": {"type": "object", "properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "importId": {"description": "The ID of the import.", "type": "integer"}, "state": {"description": "The state of the run, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "startedAt": {"description": "The time the last run started at.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time the last run completed.", "type": "string", "format": "time"}, "error": {"description": "The error, if any, returned by the run.", "type": "string"}}}, "Object118": {"type": "object", "properties": {"id": {"description": "The ID for the import.", "type": "integer"}, "schema": {"description": "The destination schema name. This schema must already exist in Redshift.", "type": "string"}, "table": {"description": "The destination table name, without the schema prefix. This table must already exist in Redshift.", "type": "string"}, "remoteHostId": {"description": "The ID of the destination database host.", "type": "integer"}, "state": {"description": "The state of the run; one of \"queued\", \"running\", \"succeeded\", \"failed\", or \"cancelled\".", "type": "string"}, "startedAt": {"description": "The time the last run started at.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time the last run completed.", "type": "string", "format": "time"}, "error": {"description": "The error returned by the run, if any.", "type": "string"}}}, "Object119": {"type": "object", "properties": {"id": {"description": "The ID for the import.", "type": "integer"}, "schema": {"description": "The destination schema name. This schema must already exist in Redshift.", "type": "string"}, "table": {"description": "The destination table name, without the schema prefix. This table must already exist in Redshift.", "type": "string"}, "remoteHostId": {"description": "The ID of the destination database host.", "type": "integer"}, "state": {"description": "The state of the run; one of \"queued\", \"running\", \"succeeded\", \"failed\", or \"cancelled\".", "type": "string"}, "startedAt": {"description": "The time the last run started at.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time the last run completed.", "type": "string", "format": "time"}, "error": {"description": "The error returned by the run, if any.", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}}, "Object120": {"type": "object", "properties": {"fileIds": {"description": "The file IDs for the import.", "type": "array", "items": {"type": "integer"}}, "schema": {"description": "The destination schema name. This schema must already exist in Redshift.", "type": "string"}, "table": {"description": "The destination table name, without the schema prefix. This table must already exist in Redshift.", "type": "string"}, "remoteHostId": {"description": "The ID of the destination database host.", "type": "integer"}, "credentialId": {"description": "The ID of the credentials to be used when performing the database import.", "type": "integer"}, "columnDelimiter": {"description": "The column delimiter for the file. Valid arguments are \"comma\", \"tab\", and \"pipe\". If unspecified, defaults to \"comma\".", "type": "string"}, "firstRowIsHeader": {"description": "A boolean value indicating whether or not the first row is a header row. If unspecified, defaults to false.", "type": "boolean"}, "compression": {"description": "The type of compression. Valid arguments are \"gzip\", \"zip\", and \"none\". If unspecified, defaults to \"gzip\".", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}, "required": ["fileIds", "schema", "table", "remoteHostId", "credentialId"]}, "Object121": {"type": "object", "properties": {"name": {"description": "The name of the import.", "type": "string"}, "syncType": {"description": "The type of sync to perform; one of Dbsync, AutoImport, SilverpopDataImport, SilverpopContactImport, GdocImport, GdocExport, and Salesforce.", "type": "string"}, "source": {"description": "The data source from which to import.", "$ref": "#/definitions/Object114"}, "destination": {"description": "The database into which to import.", "$ref": "#/definitions/Object114"}, "schedule": {"description": "The schedule when the import will run.", "$ref": "#/definitions/Object64"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object65"}, "parentId": {"description": "Parent id to trigger this import from", "type": "integer"}, "isOutbound": {"type": "boolean"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this import.", "type": "string"}}, "required": ["name", "syncType", "isOutbound"]}, "Object122": {"type": "object", "properties": {"runId": {"description": "The ID of the new run triggered.", "type": "integer"}}}, "Object123": {"type": "object", "properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "state": {"description": "The state of the run, one of 'queued', 'running' or 'cancelled'.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}}}, "Object126": {"type": "object", "properties": {"schema": {"description": "The database schema name.", "type": "string"}, "table": {"description": "The database table name.", "type": "string"}}, "required": ["schema", "table"]}, "Object127": {"type": "object", "properties": {}}, "Object128": {"type": "object", "properties": {"spreadsheet": {"description": "The spreadsheet document name.", "type": "string"}, "worksheet": {"description": "The worksheet tab name.", "type": "string"}}, "required": ["spreadsheet", "worksheet"]}, "Object129": {"type": "object", "properties": {"objectName": {"description": "The Salesforce object name.", "type": "string"}}, "required": ["objectName"]}, "Object130": {"type": "object", "properties": {"listId": {"description": "The Silverpop list id.", "type": "integer"}}, "required": ["listId"]}, "Object125": {"type": "object", "properties": {"path": {"description": "The path of the dataset to sync from; for a database source, schema.tablename. If you are doing a Google Sheet export, this can be blank. This is a legacy parameter, it is recommended you use one of the following: databaseTable, file, googleWorksheet, salesforce, silverpop", "type": "string"}, "databaseTable": {"description": "The sync source is a database table.", "$ref": "#/definitions/Object126"}, "file": {"description": "The sync source is a file.", "$ref": "#/definitions/Object127"}, "googleWorksheet": {"description": "The sync source is a Google worksheet.", "$ref": "#/definitions/Object128"}, "salesforce": {"description": "The sync source is Salesforce.", "$ref": "#/definitions/Object129"}, "silverpop": {"description": "The sync source is Silverpop.", "$ref": "#/definitions/Object130"}}}, "Object131": {"type": "object", "properties": {"path": {"description": "The schema.tablename to sync to. If you are doing a Google Sheet export, this is the spreadsheet and sheet name separated by a period. i.e. if you have a spreadsheet named \"MySpreadsheet\" and a sheet called \"Sheet1\" this field would be \"MySpreadsheet.Sheet1\". This is a legacy parameter, it is recommended you use one of the following: databaseTable, googleWorksheet", "type": "string"}, "databaseTable": {"description": "The sync source is a database table.", "$ref": "#/definitions/Object126"}, "googleWorksheet": {"description": "The sync source is a Google worksheet.", "$ref": "#/definitions/Object128"}}}, "Object133": {"type": "object", "properties": {"name": {"description": "The column name that will override the auto-detected name.", "type": "string"}, "type": {"description": "Declaration of SQL type that will override the auto-detected SQL type, including necessary properties such as length, precision, etc.", "type": "string"}}}, "Object132": {"type": "object", "properties": {"maxErrors": {"type": "integer"}, "existingTableRows": {"type": "string"}, "distkey": {"type": "string"}, "sortkey1": {"type": "string"}, "sortkey2": {"type": "string"}, "columnDelimiter": {"type": "string"}, "columnOverrides": {"description": "Hash used for overriding auto-detected names and types, with keys being the current name of the column being overridden.", "type": "object", "additionalProperties": {"$ref": "#/definitions/Object133"}}, "identityColumn": {"type": "string"}, "rowChunkSize": {"type": "integer"}, "wipeDestinationTable": {"type": "boolean"}, "truncateLongLines": {"type": "boolean"}, "invalidCharReplacement": {"type": "string"}, "verifyTableRowCounts": {"type": "boolean"}, "partitionColumnName": {"type": "string"}, "partitionSchemaName": {"type": "string"}, "partitionTableName": {"type": "string"}, "partitionTablePartitionColumnMinName": {"type": "string"}, "partitionTablePartitionColumnMaxName": {"type": "string"}, "lastModifiedColumn": {"type": "string"}, "mysqlCatalogMatchesSchema": {"type": "boolean"}, "chunkingMethod": {"description": "The method used to break the data into smaller chunks for transfer.  The value can be set to sorted_by_identity_columns or if not set the chunking method will be choosen automatically.", "type": "string"}, "firstRowIsHeader": {"type": "boolean"}, "exportAction": {"description": "The kind of export action you want to have the export execute. Set to \"newsprsht\" if you want a new worksheet inside a new spreadsheet. Set to \"newwksht\" if you want a new worksheet inside an existing spreadsheet. Set to \"updatewksht\" if you want to overwrite an existing worksheet inside an existing spreadsheet. Set to \"appendwksht\" if you want to append to the end of an existing worksheet inside an existing spreadsheet. ", "type": "string"}, "sqlQuery": {"description": "If you are doing a Google Sheet export, this is your SQL query.", "type": "string"}, "contactLists": {"type": "string"}, "soqlQuery": {"type": "string"}}}, "Object124": {"type": "object", "properties": {"source": {"$ref": "#/definitions/Object125"}, "destination": {"$ref": "#/definitions/Object131"}, "advancedOptions": {"description": "Additional sync configuration parameters. For examples of sync-specific parameters, see the Examples section of the API documentation.", "$ref": "#/definitions/Object132"}}, "required": ["source", "destination"]}, "Object134": {"type": "object", "properties": {"source": {"$ref": "#/definitions/Object125"}, "destination": {"$ref": "#/definitions/Object131"}, "advancedOptions": {"$ref": "#/definitions/Object132"}}, "required": ["source", "destination"]}, "Object135": {"type": "object", "properties": {"status": {"description": "The desired archived status of the sync.", "type": "boolean"}}}, "Object136": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}, "type": {"type": "string"}, "state": {"description": "Whether the job is idle, queued, running, cancelled, or failed.", "type": "string"}, "createdAt": {"type": "string", "format": "date-time"}, "updatedAt": {"type": "string", "format": "date-time"}, "lastRun": {"$ref": "#/definitions/Object33"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object137": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}, "type": {"type": "string"}, "state": {"description": "Whether the job is idle, queued, running, cancelled, or failed.", "type": "string"}, "createdAt": {"type": "string", "format": "date-time"}, "updatedAt": {"type": "string", "format": "date-time"}, "runs": {"description": "Information about the most recent runs of the job.", "type": "array", "items": {"$ref": "#/definitions/Object33"}}, "lastRun": {"$ref": "#/definitions/Object33"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object138": {"type": "object", "properties": {"triggerEmail": {"description": "Email address which may be used to trigger this job to run.", "type": "string"}}}, "Object139": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}, "type": {"type": "string"}, "state": {"type": "string"}, "createdAt": {"type": "string", "format": "date-time"}, "updatedAt": {"type": "string", "format": "date-time"}, "runs": {"type": "array", "items": {"$ref": "#/definitions/Object33"}}, "lastRun": {"$ref": "#/definitions/Object33"}, "children": {"type": "array", "items": {"$ref": "#/definitions/Object139"}}}}, "Object140": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}}}, "Object141": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object142": {"type": "object", "properties": {"id": {"description": "The ID for the spot order.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "csvS3Uri": {"description": "S3 URI for the spot order CSV file.", "type": "string"}, "jsonS3Uri": {"description": "S3 URI for the spot order JSON file.", "type": "string"}, "xmlArchiveS3Uri": {"description": "S3 URI for the spot order XML archive.", "type": "string"}, "lastTransformJobId": {"description": "ID of the spot order transformation job.", "type": "integer"}}}, "Object143": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object146": {"type": "object", "properties": {"targets": {"description": "The targets to constrain.", "type": "array", "items": {"type": "string"}}, "budget": {"description": "The maximum budget for these targets.", "type": "number", "format": "float"}, "frequency": {"description": "The maximum frequency for these targets.", "type": "integer"}}}, "Object145": {"type": "object", "properties": {"marketId": {"description": "The market ID.", "type": "integer"}, "startDate": {"description": "The start date for the media run.", "type": "string", "format": "date"}, "endDate": {"description": "The end date for the media run.", "type": "string", "format": "date"}, "syscodes": {"description": "The syscodes for the media run.", "type": "array", "items": {"type": "integer"}}, "rateCards": {"description": "The ratecards for the media run.", "type": "array", "items": {"type": "string"}}, "constraints": {"description": "The constraints for the media run.", "type": "array", "items": {"$ref": "#/definitions/Object146"}}}}, "Object144": {"type": "object", "properties": {"id": {"description": "The optimization ID.", "type": "integer"}, "author": {"description": "The author of the optimization.", "$ref": "#/definitions/Object11"}, "name": {"description": "The name of the optimization.", "type": "string"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "finishedAt": {"description": "The end time of the last run.", "type": "string", "format": "date-time"}, "state": {"description": "The state of the last run.", "type": "string"}, "lastRunId": {"description": "The ID of the last run.", "type": "integer"}, "spotOrderId": {"description": "The ID for the spot order produced by the optimization.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "reportLink": {"description": "A link to the visual report for the optimization.", "type": "string"}, "spotOrderLink": {"description": "A link to the json version of the spot order.", "type": "string"}, "fileLinks": {"description": "Links to the csv and xml versions of the spot order.", "type": "array", "items": {"type": "string"}}, "runs": {"description": "The runs of the optimization.", "type": "array", "items": {"$ref": "#/definitions/Object145"}}}}, "Object147": {"type": "object", "properties": {"id": {"description": "The optimization ID.", "type": "integer"}, "author": {"description": "The author of the optimization.", "$ref": "#/definitions/Object11"}, "name": {"description": "The name of the optimization.", "type": "string"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "finishedAt": {"description": "The end time of the last run.", "type": "string", "format": "date-time"}, "state": {"description": "The state of the last run.", "type": "string"}, "lastRunId": {"description": "The ID of the last run.", "type": "integer"}, "spotOrderId": {"description": "The ID for the spot order produced by the optimization.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object150": {"type": "object", "properties": {"targets": {"description": "The targets to constrain.", "type": "array", "items": {"type": "string"}}, "budget": {"description": "The maximum budget for these targets.", "type": "number", "format": "float"}, "frequency": {"description": "The maximum frequency for these targets.", "type": "integer"}}, "required": ["targets"]}, "Object149": {"type": "object", "properties": {"marketId": {"description": "The market ID.", "type": "integer"}, "startDate": {"description": "The start date for the media run.", "type": "string", "format": "date"}, "endDate": {"description": "The end date for the media run.", "type": "string", "format": "date"}, "syscodes": {"description": "The syscodes for the media run.", "type": "array", "items": {"type": "integer"}}, "rateCards": {"description": "The ratecards for the media run.", "type": "array", "items": {"type": "string"}}, "constraints": {"description": "The constraints for the media run.", "type": "array", "items": {"$ref": "#/definitions/Object150"}}}, "required": ["marketId", "startDate", "endDate", "syscodes", "rateCards", "constraints"]}, "Object148": {"type": "object", "properties": {"name": {"description": "The name of the optimization.", "type": "string"}, "runs": {"description": "The runs of the optimization.", "type": "array", "items": {"$ref": "#/definitions/Object149"}}}, "required": ["runs"]}, "Object151": {"type": "object", "properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "optimizationId": {"description": "The ID of the optimization.", "type": "integer"}, "state": {"description": "The state of the run, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "startedAt": {"description": "The time the last run started at.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time the last run completed.", "type": "string", "format": "time"}, "error": {"description": "The error, if any, returned by the run.", "type": "string"}}}, "Object154": {"type": "object", "properties": {"targets": {"description": "The targets to constrain.", "type": "array", "items": {"type": "string"}}, "budget": {"description": "The maximum budget for these targets.", "type": "number", "format": "float"}, "frequency": {"description": "The maximum frequency for these targets.", "type": "integer"}}}, "Object153": {"type": "object", "properties": {"marketId": {"description": "The market ID.", "type": "integer"}, "startDate": {"description": "The start date for the media run.", "type": "string", "format": "date"}, "endDate": {"description": "The end date for the media run.", "type": "string", "format": "date"}, "syscodes": {"description": "The syscodes for the media run.", "type": "array", "items": {"type": "integer"}}, "rateCards": {"description": "The ratecards for the media run.", "type": "array", "items": {"type": "string"}}, "constraints": {"description": "The constraints for the media run.", "type": "array", "items": {"$ref": "#/definitions/Object154"}}}}, "Object152": {"type": "object", "properties": {"name": {"description": "The name of the optimization.", "type": "string"}, "runs": {"description": "The runs of the optimization.", "type": "array", "items": {"$ref": "#/definitions/Object153"}}}}, "Object155": {"type": "object", "properties": {"id": {"description": "The ID for the spot order.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object156": {"type": "object", "properties": {"body": {"description": "CSV body of a spot order.", "type": "string"}}}, "Object157": {"type": "object", "properties": {"body": {"description": "CSV body of a spot order.", "type": "string"}}}, "Object158": {"type": "object", "properties": {"id": {"description": "The ratecard ID.", "type": "integer"}, "filename": {"description": "Name of the ratecard file.", "type": "string"}, "startOn": {"description": "First day to which the ratecard applies.", "type": "string", "format": "date"}, "endOn": {"description": "Last day to which the ratecard applies.", "type": "string", "format": "date"}, "dmaNumber": {"description": "Number of the DMA associated with the ratecard.", "type": "integer"}}}, "Object159": {"type": "object", "properties": {"name": {"description": "Name for the DMA region.", "type": "string"}, "number": {"description": "Identifier number for a DMA.", "type": "integer"}}}, "Object160": {"type": "object", "properties": {"name": {"description": "The name of the target.", "type": "string"}, "identifier": {"description": "A unique identifier for this target.", "type": "string"}, "dataSource": {"description": "The source of viewership data for this target.", "type": "string"}}}, "Object161": {"type": "object", "properties": {"id": {"description": "The ID of the model type.", "type": "integer"}, "algorithm": {"description": "The name of the algorithm used to train the model.", "type": "string"}, "dvType": {"description": "The type of dependent variable predicted by the model.", "type": "string"}, "fintAllowed": {"description": "Whether this model type supports searching for interaction terms.", "type": "boolean"}}}, "Object162": {"type": "object", "properties": {"tableName": {"description": "The qualified name of the table containing the training set from which to build the model.", "type": "string"}, "databaseId": {"description": "The ID of the database holding the training set table used to build the model.", "type": "integer"}, "credentialId": {"description": "The ID of the credential used to read the target table. Defaults to the user's default credential.", "type": "integer"}, "modelName": {"description": "The name of the model.", "type": "string"}, "description": {"description": "A description of the model.", "type": "string"}, "interactionTerms": {"description": "Whether to search for interaction terms.", "type": "boolean"}, "boxCoxTransformation": {"description": "Whether to transform data so that it assumes a normal distribution. Valid only with continuous models.", "type": "boolean"}, "modelTypeId": {"description": "The ID of the model's type.", "type": "integer"}, "primaryKey": {"description": "The unique ID (primary key) of the training dataset.", "type": "string"}, "dependentVariable": {"description": "The dependent variable of the training dataset.", "type": "string"}, "dependentVariableOrder": {"description": "The order of dependent variables, especially useful for Ordinal Modeling.", "type": "array", "items": {"type": "string"}}, "excludedColumns": {"description": "A list of columns which will be considered ineligible to be independent variables.", "type": "array", "items": {"type": "string"}}, "limitingSQL": {"description": "A custom SQL WHERE clause used to filter the rows used to build the model. (e.g., \"id > 105\").", "type": "string"}, "activeBuildId": {"description": "The ID of the current active build, the build used to score predictions.", "type": "integer"}, "crossValidationParameters": {"description": "Cross validation parameter grid for tree methods, e.g. {\"n_estimators\": [100, 200, 500], \"learning_rate\": [0.01, 0.1], \"max_depth\": [2, 3]}.", "type": "object"}, "numberOfFolds": {"description": "Number of folds for cross validation. Default value is 5.", "type": "integer"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object65"}, "schedule": {"description": "The schedule when the model will be built.", "$ref": "#/definitions/Object64"}, "parentId": {"description": "The ID of the parent job that will trigger this model.", "type": "integer"}, "timeZone": {"description": "The time zone of this model.", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}}, "Object164": {"type": "object", "properties": {"id": {"description": "The ID of the model build.", "type": "integer"}, "name": {"description": "The name of the model build.", "type": "string"}, "createdAt": {"description": "The time the model build was created.", "type": "string"}, "description": {"description": "A description of the model build.", "type": "string"}, "rootMeanSquaredError": {"description": "A key metric for continuous models. Nil for other model types.", "type": "number", "format": "float"}, "rSquaredError": {"description": "A key metric for continuous models. Nil for other model types.", "type": "number", "format": "float"}, "rocAuc": {"description": "A key metric for binary, multinomial, and ordinal models. Nil for other model types.", "type": "number", "format": "float"}}}, "Object165": {"type": "object", "properties": {"id": {"description": "The ID of the model to which to apply the prediction.", "type": "integer"}, "tableName": {"description": "The qualified name of the table on which to apply the predictive model.", "type": "string"}, "primaryKey": {"description": "The primary key or composite keys of the table being predicted.", "type": "array", "items": {"type": "string"}}, "limitingSQL": {"description": "A SQL WHERE clause used to scope the rows to be predicted.", "type": "string"}, "outputTable": {"description": "The qualified name of the table to be created which will contain the model's predictions.", "type": "string"}, "schedule": {"description": "The schedule of when the prediction will run.", "$ref": "#/definitions/Object72"}, "state": {"description": "The status of the prediction. One of: \"succeeded\", \"failed\", \"queued\", or \"running,\"or \"idle\", if no build has been attempted.", "type": "string"}}}, "Object163": {"type": "object", "properties": {"id": {"description": "The ID of the model.", "type": "integer"}, "tableName": {"description": "The qualified name of the table containing the training set from which to build the model.", "type": "string"}, "databaseId": {"description": "The ID of the database holding the training set table used to build the model.", "type": "integer"}, "credentialId": {"description": "The ID of the credential used to read the target table. Defaults to the user's default credential.", "type": "integer"}, "modelName": {"description": "The name of the model.", "type": "string"}, "description": {"description": "A description of the model.", "type": "string"}, "interactionTerms": {"description": "Whether to search for interaction terms.", "type": "boolean"}, "boxCoxTransformation": {"description": "Whether to transform data so that it assumes a normal distribution. Valid only with continuous models.", "type": "boolean"}, "modelTypeId": {"description": "The ID of the model's type.", "type": "integer"}, "primaryKey": {"description": "The unique ID (primary key) of the training dataset.", "type": "string"}, "dependentVariable": {"description": "The dependent variable of the training dataset.", "type": "string"}, "dependentVariableOrder": {"description": "The order of dependent variables, especially useful for Ordinal Modeling.", "type": "array", "items": {"type": "string"}}, "excludedColumns": {"description": "A list of columns which will be considered ineligible to be independent variables.", "type": "array", "items": {"type": "string"}}, "limitingSQL": {"description": "A custom SQL WHERE clause used to filter the rows used to build the model. (e.g., \"id > 105\").", "type": "string"}, "activeBuildId": {"description": "The ID of the current active build, the build used to score predictions.", "type": "integer"}, "crossValidationParameters": {"description": "Cross validation parameter grid for tree methods, e.g. {\"n_estimators\": [100, 200, 500], \"learning_rate\": [0.01, 0.1], \"max_depth\": [2, 3]}.", "type": "object"}, "numberOfFolds": {"description": "Number of folds for cross validation. Default value is 5.", "type": "integer"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object73"}, "schedule": {"description": "The schedule when the model will be built.", "$ref": "#/definitions/Object72"}, "parentId": {"description": "The ID of the parent job that will trigger this model.", "type": "integer"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object11"}, "timeZone": {"description": "The time zone of this model.", "type": "string"}, "lastRun": {"description": "The last run of this model build.", "$ref": "#/definitions/Object33"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "user": {"$ref": "#/definitions/Object11"}, "createdAt": {"description": "The time the model was created.", "type": "string", "format": "date-time"}, "updatedAt": {"description": "The time the model was updated.", "type": "string", "format": "date-time"}, "currentBuildState": {"description": "The status of the current model build. One of \"succeeded\", \"failed\", \"queued\", or \"running,\"or \"idle\", if no build has been attempted.", "type": "string"}, "currentBuildException": {"description": "Exception message, if applicable, of the current model build.", "type": "string"}, "builds": {"description": "A list of trained models available for making predictions.", "type": "array", "items": {"$ref": "#/definitions/Object164"}}, "predictions": {"description": "The tables upon which the model will be applied.", "type": "array", "items": {"$ref": "#/definitions/Object165"}}, "lastOutputLocation": {"description": "The output JSON for the last build.", "type": "string"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object167": {"type": "object", "properties": {"id": {"description": "The ID of the model to which to apply the prediction.", "type": "integer"}, "tableName": {"description": "The qualified name of the table on which to apply the predictive model.", "type": "string"}, "primaryKey": {"description": "The primary key or composite keys of the table being predicted.", "type": "array", "items": {"type": "string"}}, "limitingSQL": {"description": "A SQL WHERE clause used to scope the rows to be predicted.", "type": "string"}, "outputTable": {"description": "The qualified name of the table to be created which will contain the model's predictions.", "type": "string"}, "state": {"description": "The status of the prediction. One of: \"succeeded\", \"failed\", \"queued\", or \"running,\"or \"idle\", if no build has been attempted.", "type": "string"}}}, "Object166": {"type": "object", "properties": {"id": {"description": "The ID of the model.", "type": "integer"}, "tableName": {"description": "The qualified name of the table containing the training set from which to build the model.", "type": "string"}, "databaseId": {"description": "The ID of the database holding the training set table used to build the model.", "type": "integer"}, "credentialId": {"description": "The ID of the credential used to read the target table. Defaults to the user's default credential.", "type": "integer"}, "modelName": {"description": "The name of the model.", "type": "string"}, "description": {"description": "A description of the model.", "type": "string"}, "interactionTerms": {"description": "Whether to search for interaction terms.", "type": "boolean"}, "boxCoxTransformation": {"description": "Whether to transform data so that it assumes a normal distribution. Valid only with continuous models.", "type": "boolean"}, "modelTypeId": {"description": "The ID of the model's type.", "type": "integer"}, "primaryKey": {"description": "The unique ID (primary key) of the training dataset.", "type": "string"}, "dependentVariable": {"description": "The dependent variable of the training dataset.", "type": "string"}, "dependentVariableOrder": {"description": "The order of dependent variables, especially useful for Ordinal Modeling.", "type": "array", "items": {"type": "string"}}, "excludedColumns": {"description": "A list of columns which will be considered ineligible to be independent variables.", "type": "array", "items": {"type": "string"}}, "limitingSQL": {"description": "A custom SQL WHERE clause used to filter the rows used to build the model. (e.g., \"id > 105\").", "type": "string"}, "crossValidationParameters": {"description": "Cross validation parameter grid for tree methods, e.g. {\"n_estimators\": [100, 200, 500], \"learning_rate\": [0.01, 0.1], \"max_depth\": [2, 3]}.", "type": "object"}, "numberOfFolds": {"description": "Number of folds for cross validation. Default value is 5.", "type": "integer"}, "schedule": {"description": "The schedule when the model will be built.", "$ref": "#/definitions/Object72"}, "parentId": {"description": "The ID of the parent job that will trigger this model.", "type": "integer"}, "timeZone": {"description": "The time zone of this model.", "type": "string"}, "lastRun": {"description": "The last run of this model build.", "$ref": "#/definitions/Object33"}, "user": {"$ref": "#/definitions/Object11"}, "createdAt": {"description": "The time the model was created.", "type": "string", "format": "date-time"}, "updatedAt": {"description": "The time the model was updated.", "type": "string", "format": "date-time"}, "currentBuildState": {"description": "The status of the current model build. One of \"succeeded\", \"failed\", \"queued\", or \"running,\"or \"idle\", if no build has been attempted.", "type": "string"}, "currentBuildException": {"description": "Exception message, if applicable, of the current model build.", "type": "string"}, "builds": {"description": "A list of trained models available for making predictions.", "type": "array", "items": {"$ref": "#/definitions/Object164"}}, "predictions": {"description": "The tables upon which the model will be applied.", "type": "array", "items": {"$ref": "#/definitions/Object167"}}, "lastOutputLocation": {"description": "The output JSON for the last build.", "type": "string"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object168": {"type": "object", "properties": {"tableName": {"description": "The qualified name of the table containing the training set from which to build the model.", "type": "string"}, "databaseId": {"description": "The ID of the database holding the training set table used to build the model.", "type": "integer"}, "credentialId": {"description": "The ID of the credential used to read the target table. Defaults to the user's default credential.", "type": "integer"}, "modelName": {"description": "The name of the model.", "type": "string"}, "description": {"description": "A description of the model.", "type": "string"}, "interactionTerms": {"description": "Whether to search for interaction terms.", "type": "boolean"}, "boxCoxTransformation": {"description": "Whether to transform data so that it assumes a normal distribution. Valid only with continuous models.", "type": "boolean"}, "modelTypeId": {"description": "The ID of the model's type.", "type": "integer"}, "primaryKey": {"description": "The unique ID (primary key) of the training dataset.", "type": "string"}, "dependentVariable": {"description": "The dependent variable of the training dataset.", "type": "string"}, "dependentVariableOrder": {"description": "The order of dependent variables, especially useful for Ordinal Modeling.", "type": "array", "items": {"type": "string"}}, "excludedColumns": {"description": "A list of columns which will be considered ineligible to be independent variables.", "type": "array", "items": {"type": "string"}}, "limitingSQL": {"description": "A custom SQL WHERE clause used to filter the rows used to build the model. (e.g., \"id > 105\").", "type": "string"}, "activeBuildId": {"description": "The ID of the current active build, the build used to score predictions.", "type": "integer"}, "crossValidationParameters": {"description": "Cross validation parameter grid for tree methods, e.g. {\"n_estimators\": [100, 200, 500], \"learning_rate\": [0.01, 0.1], \"max_depth\": [2, 3]}.", "type": "object"}, "numberOfFolds": {"description": "Number of folds for cross validation. Default value is 5.", "type": "integer"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object65"}, "schedule": {"description": "The schedule when the model will be built.", "$ref": "#/definitions/Object64"}, "parentId": {"description": "The ID of the parent job that will trigger this model.", "type": "integer"}, "timeZone": {"description": "The time zone of this model.", "type": "string"}}}, "Object169": {"type": "object", "properties": {"id": {"description": "The ID of the model build.", "type": "integer"}, "state": {"description": "The state of the model build.one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "error": {"description": "The error, if any, returned by the build.", "type": "string"}, "name": {"description": "The name of the model build.", "type": "string"}, "createdAt": {"description": "The time the model build was created.", "type": "string"}, "description": {"description": "A description of the model build.", "type": "string"}, "rootMeanSquaredError": {"description": "A key metric for continuous models. Nil for other model types.", "type": "number", "format": "float"}, "rSquaredError": {"description": "A key metric for continuous models. Nil for other model types.", "type": "number", "format": "float"}, "rocAuc": {"description": "A key metric for binary, multinomial, and ordinal models. Nil for other model types.", "type": "number", "format": "float"}, "transformationMetadata": {"description": "A string representing the full JSON output of the metadata for transformation of column names", "type": "string"}, "output": {"description": "A string representing the JSON output for the specified build. Only present when smaller than 10KB in size.", "type": "string"}, "outputLocation": {"description": "A URL representing the location of the full JSON output for the specified build.The URL link will be valid for 5 minutes.", "type": "string"}}}, "Object170": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object171": {"type": "object", "properties": {"tableName": {"description": "The qualified name of the table on which to apply the predictive model.", "type": "string"}, "primaryKey": {"description": "The primary key or composite keys of the table being predicted.", "type": "array", "items": {"type": "string"}}, "limitingSQL": {"description": "A SQL WHERE clause used to scope the rows to be predicted.", "type": "string"}, "outputTable": {"description": "The qualified name of the table to be created which will contain the model's predictions.", "type": "string"}, "schedule": {"description": "The schedule of when the prediction will run.", "$ref": "#/definitions/Object64"}}, "required": ["tableName", "primaryKey"]}, "Object172": {"type": "object", "properties": {"id": {"description": "The ID of the model associated with this schedule.", "type": "integer"}, "schedule": {"description": "The schedule of when the model will run.", "$ref": "#/definitions/Object72"}}}, "Object173": {"type": "object", "properties": {"schedule": {"description": "The schedule of when the model will run.", "$ref": "#/definitions/Object64"}}, "required": ["schedule"]}, "Object175": {"type": "object", "properties": {"deploymentId": {"description": "The ID for this deployment.", "type": "integer"}, "userId": {"description": "The ID of the owner.", "type": "integer"}, "host": {"description": "Domain of the deployment.", "type": "string"}, "name": {"description": "Name of the deployment.", "type": "string"}, "dockerImageName": {"description": "The name of the docker image to pull from DockerHub.", "type": "string"}, "dockerImageTag": {"description": "The tag of the docker image to pull from DockerHub (default: latest).", "type": "string"}, "displayUrl": {"description": "URL that displays the deployed platform object and includes auth token.", "type": "string"}, "memory": {"description": "The memory allocated to the deployment.", "type": "integer"}, "cpu": {"description": "The cpu allocated to the deployment.", "type": "integer"}, "state": {"description": "The state of the deployment.", "type": "string"}, "stateMessage": {"description": "A detailed description of the state.", "type": "string"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "notebookId": {"description": "The ID of owning Notebook", "type": "integer"}}}, "Object174": {"type": "object", "properties": {"id": {"description": "The ID for this notebook.", "type": "integer"}, "name": {"description": "The name of this notebook.", "type": "string"}, "language": {"description": "The kernel language of this notebook.", "type": "string"}, "description": {"description": "The description of this notebook.", "type": "string"}, "user": {"description": "The author of this notebook.", "$ref": "#/definitions/Object11"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "mostRecentDeployment": {"$ref": "#/definitions/Object175"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object176": {"type": "object", "properties": {"name": {"description": "The name of this notebook.", "type": "string"}, "language": {"description": "The kernel language of this notebook.", "type": "string"}, "description": {"description": "The description of this notebook.", "type": "string"}, "fileId": {"description": "The file ID for the S3 file containing the .ipynb file.", "type": "string"}, "requirementsFileId": {"description": "The file ID for the S3 file containing the requirements.txt file.", "type": "string"}, "requirements": {"description": "The requirements txt file.", "type": "string"}, "dockerImageName": {"description": "The name of the docker image to pull from DockerHub.", "type": "string"}, "dockerImageTag": {"description": "The tag of the docker image to pull from DockerHub (default: latest).", "type": "string"}, "memory": {"description": "The amount of memory allocated to the notebook.", "type": "integer"}, "cpu": {"description": "The amount of cpu allocated to the the notebook.", "type": "integer"}, "credentials": {"description": "A list of credential IDs to pass to the notebook.", "type": "array", "items": {"type": "integer"}}, "gitUrl": {"description": "The URL of the repository that will be cloned.", "type": "string"}, "gitBranch": {"description": "The name of the branch that will be cloned.", "type": "string"}, "gitFile": {"description": "The name of the notebook file within a repository that will be included in the deployment.", "type": "string"}, "environmentVariables": {"description": "Environment variables to be passed into the Notebook.", "type": "object", "additionalProperties": {"type": "string"}}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}}, "Object177": {"type": "object", "properties": {"id": {"description": "The ID for this notebook.", "type": "integer"}, "name": {"description": "The name of this notebook.", "type": "string"}, "language": {"description": "The kernel language of this notebook.", "type": "string"}, "description": {"description": "The description of this notebook.", "type": "string"}, "notebookUrl": {"description": "Time-limited URL to get the .ipynb file for this notebook.", "type": "string"}, "notebookPreviewUrl": {"description": "Time-limited URL to get the .htm preview file for this notebook.", "type": "string"}, "requirementsUrl": {"description": "Time-limited URL to get the requirements.txt file for this notebook.", "type": "string"}, "fileId": {"description": "The file ID for the S3 file containing the .ipynb file.", "type": "string"}, "requirementsFileId": {"description": "The file ID for the S3 file containing the requirements.txt file.", "type": "string"}, "user": {"description": "The author of this notebook.", "$ref": "#/definitions/Object11"}, "dockerImageName": {"description": "The name of the docker image to pull from DockerHub.", "type": "string"}, "dockerImageTag": {"description": "The tag of the docker image to pull from DockerHub (default: latest).", "type": "string"}, "memory": {"description": "The amount of memory allocated to the notebook.", "type": "integer"}, "cpu": {"description": "The amount of cpu allocated to the the notebook.", "type": "integer"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "mostRecentDeployment": {"$ref": "#/definitions/Object175"}, "credentials": {"description": "A list of credential IDs to pass to the notebook.", "type": "array", "items": {"type": "integer"}}, "gitUrl": {"description": "The URL of the repository that will be cloned.", "type": "string"}, "gitBranch": {"description": "The name of the branch that will be cloned.", "type": "string"}, "gitFile": {"description": "The name of the notebook file within a repository that will be included in the deployment.", "type": "string"}, "environmentVariables": {"description": "Environment variables to be passed into the Notebook.", "type": "object", "additionalProperties": {"type": "string"}}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}}, "Object178": {"type": "object", "properties": {"name": {"description": "The name of this notebook.", "type": "string"}, "language": {"description": "The kernel language of this notebook.", "type": "string"}, "description": {"description": "The description of this notebook.", "type": "string"}, "fileId": {"description": "The file ID for the S3 file containing the .ipynb file.", "type": "string"}, "requirementsFileId": {"description": "The file ID for the S3 file containing the requirements.txt file.", "type": "string"}, "requirements": {"description": "The requirements txt file.", "type": "string"}, "dockerImageName": {"description": "The name of the docker image to pull from DockerHub.", "type": "string"}, "dockerImageTag": {"description": "The tag of the docker image to pull from DockerHub (default: latest).", "type": "string"}, "memory": {"description": "The amount of memory allocated to the notebook.", "type": "integer"}, "cpu": {"description": "The amount of cpu allocated to the the notebook.", "type": "integer"}, "credentials": {"description": "A list of credential IDs to pass to the notebook.", "type": "array", "items": {"type": "integer"}}, "gitUrl": {"description": "The URL of the repository that will be cloned.", "type": "string"}, "gitBranch": {"description": "The name of the branch that will be cloned.", "type": "string"}, "gitFile": {"description": "The name of the notebook file within a repository that will be included in the deployment.", "type": "string"}, "environmentVariables": {"description": "Environment variables to be passed into the Notebook.", "type": "object", "additionalProperties": {"type": "string"}}}}, "Object179": {"type": "object", "properties": {"updateUrl": {"description": "Time-limited URL to PUT new contents of the .ipynb file for this notebook.", "type": "string"}, "updatePreviewUrl": {"description": "Time-limited URL to PUT new contents of the .htm preview file for this notebook.", "type": "string"}}}, "Object180": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object181": {"type": "object", "properties": {"deploymentId": {"description": "The ID for this deployment", "type": "integer"}}}, "Object182": {"type": "object", "properties": {"state": {"description": "The state of the deployment", "type": "string"}, "stateMessage": {"description": "A detailed description of the state", "type": "string"}}}, "Object183": {"type": "object", "properties": {"key": {"type": "string"}, "title": {"type": "string"}, "desc": {"description": "A description of this field.", "type": "string"}, "aliases": {"type": "array", "items": {"type": "string"}}}}, "Object184": {"type": "object", "properties": {"id": {"description": "The ID of the prediction.", "type": "integer"}, "modelId": {"description": "The ID of the model used for this prediction.", "type": "integer"}, "scoredTableId": {"description": "The ID of the source table for this prediction.", "type": "integer"}, "scoredTableName": {"description": "The name of the source table for this prediction.", "type": "string"}, "outputTableName": {"description": "The name of the output table for this prediction.", "type": "string"}, "state": {"description": "The state of the last run of this prediction.", "type": "string"}, "error": {"description": "The error, if any, of the last run of this prediction.", "type": "string"}, "startedAt": {"description": "The start time of the last run of this prediction.", "type": "string", "format": "date-time"}, "finishedAt": {"description": "The end time of the last run of this prediction.", "type": "string", "format": "date-time"}, "lastRun": {"description": "The last run of this prediction.", "$ref": "#/definitions/Object33"}}}, "Object187": {"type": "object", "properties": {"scoreName": {"description": "The name of the score.", "type": "string"}, "histogram": {"description": "The histogram of the distribution of scores.", "type": "array", "items": {"type": "integer"}}, "avgScore": {"description": "The average score.", "type": "number", "format": "float"}, "minScore": {"description": "The minimum score.", "type": "number", "format": "float"}, "maxScore": {"description": "The maximum score.", "type": "number", "format": "float"}}}, "Object186": {"type": "object", "properties": {"id": {"description": "The ID of the table with created predictions.", "type": "integer"}, "schema": {"description": "The schema of table with created predictions.", "type": "string"}, "name": {"description": "The name of table with created predictions.", "type": "string"}, "createdAt": {"description": "The time when the table with created predictions was created.", "type": "string", "format": "date-time"}, "scoreStats": {"description": "An array of metrics on the created predictions.", "type": "array", "items": {"$ref": "#/definitions/Object187"}}}}, "Object185": {"type": "object", "properties": {"id": {"description": "The ID of the prediction.", "type": "integer"}, "modelId": {"description": "The ID of the model used for this prediction.", "type": "integer"}, "scoredTableId": {"description": "The ID of the source table for this prediction.", "type": "integer"}, "scoredTableName": {"description": "The name of the source table for this prediction.", "type": "string"}, "outputTableName": {"description": "The name of the output table for this prediction.", "type": "string"}, "state": {"description": "The state of the last run of this prediction.", "type": "string"}, "error": {"description": "The error, if any, of the last run of this prediction.", "type": "string"}, "startedAt": {"description": "The start time of the last run of this prediction.", "type": "string", "format": "date-time"}, "finishedAt": {"description": "The end time of the last run of this prediction.", "type": "string", "format": "date-time"}, "lastRun": {"description": "The last run of this prediction.", "$ref": "#/definitions/Object33"}, "scoredTables": {"description": "An array of created prediction tables.", "type": "array", "items": {"$ref": "#/definitions/Object186"}}, "schedule": {"description": "The schedule when the prediction will be built.", "$ref": "#/definitions/Object72"}, "limitingSQL": {"description": "A SQL WHERE clause used to scope the rows to be predicted.", "type": "string"}, "primaryKey": {"description": "The primary key or composite keys of the table being predicted.", "type": "array", "items": {"type": "string"}}}}, "Object188": {"type": "object", "properties": {"id": {"description": "ID of the prediction associated with this schedule.", "type": "integer"}, "schedule": {"description": "Schedule when the prediction will run.", "$ref": "#/definitions/Object72"}, "scoreOnModelBuild": {"description": "Whether the prediction will run after a rebuild of the associated model.", "type": "boolean"}}}, "Object189": {"type": "object", "properties": {"schedule": {"description": "Schedule when the prediction will run.", "$ref": "#/definitions/Object64"}, "scoreOnModelBuild": {"description": "Whether the prediction will run after a rebuild of the associated model.", "type": "boolean"}}}, "Object190": {"type": "object", "properties": {"outputTableName": {"description": "The name of the output table for this prediction.", "type": "string"}, "limitingSQL": {"description": "A SQL WHERE clause used to scope the rows to be predicted.", "type": "string"}, "primaryKey": {"description": "The primary key or composite keys of the table being predicted.", "type": "array", "items": {"type": "string"}}}}, "Object191": {"type": "object", "properties": {"id": {"description": "The ID of the prediction run.", "type": "integer"}, "predictionId": {"description": "The ID of the prediction.", "type": "integer"}, "state": {"description": "The state of the prediction run.", "type": "string"}, "exception": {"description": "The exception, if any, returned by the prediction run.", "type": "string"}, "name": {"description": "The name of table created by this predictions run.", "type": "string"}, "createdAt": {"description": "The time when the table with created predictions was created.", "type": "string", "format": "date-time"}, "scoreStats": {"description": "An array of metrics on the created predictions.", "type": "array", "items": {"$ref": "#/definitions/Object187"}}}}, "Object192": {"type": "object", "properties": {"name": {"description": "The name of this project.", "type": "string"}, "description": {"description": "A description of the project", "type": "string"}, "note": {"description": "Notes for the project", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}, "required": ["name", "description"]}, "Object194": {"type": "object", "properties": {"schema": {"type": "string"}, "name": {"type": "string"}, "rowCount": {"type": "integer"}, "columnCount": {"type": "integer"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}}}, "Object195": {"type": "object", "properties": {"id": {"description": "The object ID.", "type": "integer"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}}}, "Object196": {"type": "object", "properties": {"id": {"description": "The object ID.", "type": "integer"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "name": {"type": "string"}, "type": {"type": "string"}, "finishedAt": {"type": "string", "format": "time"}, "state": {"type": "string"}}}, "Object197": {"type": "object", "properties": {"id": {"description": "The object ID.", "type": "integer"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "name": {"type": "string"}, "type": {"type": "string"}, "finishedAt": {"type": "string", "format": "time"}, "state": {"type": "string"}}}, "Object198": {"type": "object", "properties": {"id": {"description": "The object ID.", "type": "integer"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "name": {"type": "string"}, "state": {"type": "string"}}}, "Object199": {"type": "object", "properties": {"id": {"description": "The object ID.", "type": "integer"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "name": {"type": "string"}, "currentDeploymentId": {"type": "integer"}}}, "Object200": {"type": "object", "properties": {"id": {"description": "The object ID.", "type": "integer"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "name": {"type": "string"}, "state": {"type": "string"}}}, "Object201": {"type": "object", "properties": {"id": {"description": "The object ID.", "type": "integer"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "name": {"type": "string"}, "state": {"type": "string"}}}, "Object202": {"type": "object", "properties": {"id": {"description": "The object ID.", "type": "integer"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "name": {"type": "string"}}}, "Object203": {"type": "object", "properties": {"id": {"description": "The object ID.", "type": "integer"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "fileName": {"type": "string"}, "fileSize": {"type": "integer"}, "expired": {"type": "boolean"}}}, "Object204": {"type": "object", "properties": {"id": {"description": "The object ID.", "type": "integer"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "name": {"type": "string"}, "slug": {"type": "string"}}}, "Object205": {"type": "object", "properties": {"projectId": {"type": "integer"}, "objectId": {"type": "integer"}, "objectType": {"type": "string"}, "fcoType": {"type": "string"}, "subType": {"type": "string"}, "name": {"type": "string"}, "icon": {"type": "string"}, "author": {"type": "string"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object193": {"type": "object", "properties": {"id": {"description": "The ID for this project.", "type": "integer"}, "author": {"description": "The author of the project.", "$ref": "#/definitions/Object11"}, "name": {"description": "The name of this project.", "type": "string"}, "description": {"description": "A description of the project", "type": "string"}, "users": {"description": "Users who can see the project", "type": "array", "items": {"$ref": "#/definitions/Object11"}}, "autoShare": {"type": "boolean"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "tables": {"type": "array", "items": {"$ref": "#/definitions/Object194"}}, "surveys": {"type": "array", "items": {"$ref": "#/definitions/Object195"}}, "scripts": {"type": "array", "items": {"$ref": "#/definitions/Object196"}}, "imports": {"type": "array", "items": {"$ref": "#/definitions/Object197"}}, "models": {"type": "array", "items": {"$ref": "#/definitions/Object198"}}, "notebooks": {"type": "array", "items": {"$ref": "#/definitions/Object199"}}, "workflows": {"type": "array", "items": {"$ref": "#/definitions/Object200"}}, "reports": {"type": "array", "items": {"$ref": "#/definitions/Object201"}}, "scriptTemplates": {"type": "array", "items": {"$ref": "#/definitions/Object202"}}, "files": {"type": "array", "items": {"$ref": "#/definitions/Object203"}}, "appInstances": {"type": "array", "items": {"$ref": "#/definitions/Object204"}}, "allObjects": {"type": "array", "items": {"$ref": "#/definitions/Object205"}}, "note": {"type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object206": {"type": "object", "properties": {"name": {"description": "The name of this project.", "type": "string"}, "description": {"description": "A description of the project", "type": "string"}, "note": {"description": "Notes for the project", "type": "string"}}}, "Object207": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object208": {"type": "object", "properties": {"id": {"description": "The query ID.", "type": "integer"}, "database": {"description": "The database ID.", "type": "integer"}, "sql": {"description": "The SQL to execute.", "type": "string"}, "credential": {"description": "The credential ID.", "type": "integer"}, "resultRows": {"description": "A preview of rows returned by the query.", "type": "array", "items": {"type": "array", "items": {"type": "string"}}}, "resultColumns": {"description": "A preview of columns returned by the query.", "type": "array", "items": {"type": "string"}}, "scriptId": {"description": "The ID of the script associated with this query.", "type": "integer"}, "exception": {"description": "Exception returned from the query, null if the query was a success.", "type": "string"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "finishedAt": {"description": "The end time of the last run.", "type": "string", "format": "date-time"}, "state": {"description": "The state of the last run.", "type": "string"}, "lastRunId": {"description": "The ID of the last run.", "type": "integer"}, "previewRows": {"description": "The number of rows to save from the query's result (maximum: 100).", "type": "integer"}, "startedAt": {"description": "The start time of the last run.", "type": "string", "format": "date-time"}, "reportId": {"description": "The ID of the report associated with this query.", "type": "integer"}}}, "Object209": {"type": "object", "properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "queryId": {"description": "The ID of the query.", "type": "integer"}, "state": {"description": "The state of the run, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "startedAt": {"description": "The time the last run started at.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time the last run completed.", "type": "string", "format": "time"}, "error": {"description": "The error, if any, returned by the run.", "type": "string"}}}, "Object210": {"type": "object", "properties": {"database": {"description": "The database ID.", "type": "integer"}, "sql": {"description": "The SQL to execute.", "type": "string"}, "credential": {"description": "The credential ID.", "type": "integer"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "interactive": {"description": "Deprecated and not used.", "type": "boolean"}, "previewRows": {"description": "The number of rows to save from the query's result (maximum: 100).", "type": "integer"}, "includeHeader": {"description": "Whether the CSV output should include a header row [default: true].", "type": "boolean"}, "compression": {"description": "The type of compression. One of gzip or zip, or none [default: gzip].", "type": "string"}, "columnDelimiter": {"description": "The delimiter to use. One of comma or tab, or pipe [default: comma].", "type": "string"}, "unquoted": {"description": "If true, will not quote fields.", "type": "boolean"}, "filenamePrefix": {"description": "The output filename prefix.", "type": "string"}}, "required": ["database", "sql", "previewRows"]}, "Object211": {"type": "object", "properties": {"id": {"description": "The query ID.", "type": "integer"}, "database": {"description": "The database ID.", "type": "integer"}, "sql": {"description": "The SQL to execute.", "type": "string"}, "credential": {"description": "The credential ID.", "type": "integer"}, "resultRows": {"description": "A preview of rows returned by the query.", "type": "array", "items": {"type": "array", "items": {"type": "string"}}}, "resultColumns": {"description": "A preview of columns returned by the query.", "type": "array", "items": {"type": "string"}}, "scriptId": {"description": "The ID of the script associated with this query.", "type": "integer"}, "exception": {"description": "Exception returned from the query, null if the query was a success.", "type": "string"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "finishedAt": {"description": "The end time of the last run.", "type": "string", "format": "date-time"}, "state": {"description": "The state of the last run.", "type": "string"}, "lastRunId": {"description": "The ID of the last run.", "type": "integer"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "interactive": {"description": "Deprecated and not used.", "type": "boolean"}, "previewRows": {"description": "The number of rows to save from the query's result (maximum: 100).", "type": "integer"}, "includeHeader": {"description": "Whether the CSV output should include a header row [default: true].", "type": "boolean"}, "compression": {"description": "The type of compression. One of gzip or zip, or none [default: gzip].", "type": "string"}, "columnDelimiter": {"description": "The delimiter to use. One of comma or tab, or pipe [default: comma].", "type": "string"}, "unquoted": {"description": "If true, will not quote fields.", "type": "boolean"}, "filenamePrefix": {"description": "The output filename prefix.", "type": "string"}, "startedAt": {"description": "The start time of the last run.", "type": "string", "format": "date-time"}, "reportId": {"description": "The ID of the report associated with this query.", "type": "integer"}}}, "Object212": {"type": "object", "properties": {"id": {"description": "The query ID.", "type": "integer"}, "database": {"description": "The database ID.", "type": "integer"}, "sql": {"description": "The SQL to execute.", "type": "string"}, "credential": {"description": "The credential ID.", "type": "integer"}, "resultRows": {"description": "A preview of rows returned by the query.", "type": "array", "items": {"type": "array", "items": {"type": "string"}}}, "resultColumns": {"description": "A preview of columns returned by the query.", "type": "array", "items": {"type": "string"}}, "scriptId": {"description": "The ID of the script associated with this query.", "type": "integer"}, "exception": {"description": "Exception returned from the query, null if the query was a success.", "type": "string"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "finishedAt": {"description": "The end time of the last run.", "type": "string", "format": "date-time"}, "state": {"description": "The state of the last run.", "type": "string"}, "lastRunId": {"description": "The ID of the last run.", "type": "integer"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "name": {"description": "The name of the query.", "type": "string"}, "author": {"description": "The author of the query.", "$ref": "#/definitions/Object11"}, "startedAt": {"description": "The start time of the last run.", "type": "string", "format": "date-time"}, "reportId": {"description": "The ID of the report associated with this query.", "type": "integer"}}}, "Object213": {"type": "object", "properties": {"id": {"description": "The ID of the registration.", "type": "integer"}, "firstName": {"description": "This user's first name.", "type": "string"}, "lastName": {"description": "This user's last name.", "type": "string"}, "username": {"description": "This user's username.", "type": "string"}, "email": {"description": "This user's email address.", "type": "string"}, "phone": {"description": "This user's phone.", "type": "string"}, "organizationName": {"description": "The name of this user's organization.", "type": "string"}, "status": {"description": "The status of the registration (pending/confirmed/approved/rejected/provisioning/provisioned/notified/decommissioned).", "type": "string"}, "ipAddress": {"description": "The IP address used to create the registration.", "type": "string"}, "createdAt": {"description": "The date and time when the registration was created.", "type": "string", "format": "date-time"}}}, "Object214": {"type": "object", "properties": {"firstName": {"description": "This user's first name.", "type": "string"}, "lastName": {"description": "This user's last name.", "type": "string"}, "username": {"description": "This user's username.", "type": "string"}, "email": {"description": "This user's email address.", "type": "string"}, "phone": {"description": "This user's phone.", "type": "string"}, "organizationName": {"description": "The name of this user's organization.", "type": "string"}, "comment": {"description": "Array of comments for multi-select inputs.", "type": "array", "items": {"type": "string"}}, "mkto": {"description": "The Marketo tracking cookie associated with a signup.", "type": "string"}, "utmSource": {"description": "The utm_source parameter for this visit.", "type": "string"}, "utmMedium": {"description": "The utm_medium parameter for this visit.", "type": "string"}, "utmCampaign": {"description": "The utm_campaign parameter for this visit.", "type": "string"}, "utmTerm": {"description": "The utm_term parameter for this visit.", "type": "string"}, "utmContent": {"description": "The utm_content parameter for this visit.", "type": "string"}}, "required": ["firstName", "lastName", "email", "organizationName"]}, "Object215": {"type": "object", "properties": {"firstName": {"description": "This user's first name.", "type": "string"}, "lastName": {"description": "This user's last name.", "type": "string"}, "username": {"description": "This user's username.", "type": "string"}, "email": {"description": "This user's email address.", "type": "string"}, "phone": {"description": "This user's phone.", "type": "string"}, "organizationName": {"description": "The name of this user's organization.", "type": "string"}, "status": {"description": "The status of the registration.", "type": "string"}}}, "Object216": {"type": "object", "properties": {"id": {"description": "The ID of the registration.", "type": "integer"}, "firstName": {"description": "This user's first name.", "type": "string"}, "lastName": {"description": "This user's last name.", "type": "string"}, "username": {"description": "This user's username.", "type": "string"}, "email": {"description": "This user's email address.", "type": "string"}, "phone": {"description": "This user's phone.", "type": "string"}, "organizationName": {"description": "The name of this user's organization.", "type": "string"}, "comment": {"description": "Array of comments for multi-select inputs.", "type": "array", "items": {"type": "string"}}, "status": {"description": "The status of the registration (pending/confirmed/approved/rejected/provisioning/provisioned/notified/decommissioned).", "type": "string"}, "ipAddress": {"description": "The IP address used to create the registration.", "type": "string"}, "createdAt": {"description": "The date and time when the registration was created.", "type": "string", "format": "date-time"}, "confirmedAt": {"description": "The date and time when the registration was confirmed.", "type": "string", "format": "date-time"}, "decommissionedAt": {"description": "The date and time when the registration was decommissioned.", "type": "string", "format": "date-time"}, "marketoLeadId": {"description": "The ID of the associated lead in Marketo, if it exists.", "type": "integer"}, "provisionJobId": {"description": "The ID of the provisioning job, if it has been created.", "type": "integer"}, "organizationId": {"description": "The ID of the free trial organization, if it has been created.", "type": "integer"}, "userId": {"description": "The ID of the free trial user, if it has been created.", "type": "integer"}}}, "Object217": {"type": "object", "properties": {"orgSlug": {"description": "The slug that will be used instead of platform's guess", "type": "string"}, "username": {"description": "The username that will be used instead of what is in the registration", "type": "string"}, "serverId": {"description": "The remote host id for the database that will be assigned to the organization", "type": "integer"}, "bocceClusterId": {"description": "The bocce cluster that will be assigned to the organization", "type": "integer"}}, "required": ["serverId", "bocceClusterId"]}, "Object218": {"type": "object", "properties": {"id": {"description": "The ID of the remote host.", "type": "integer"}, "name": {"description": "The name of the remote host.", "type": "string"}, "type": {"description": "The type of remote host. One of: RemoteHostTypes::BSD, RemoteHostTypes::Ftp, RemoteHostTypes::Github, RemoteHostTypes::GoogleDoc, RemoteHostTypes::JDBC, RemoteHostTypes::Redshift, RemoteHostTypes::Salesforce, and RemoteHostTypes::Van", "type": "string"}, "url": {"description": "The URL for remote host.", "type": "string"}}}, "Object219": {"type": "object", "properties": {"name": {"description": "The human readable name for the remote host.", "type": "string"}, "url": {"description": "The URL to your host.", "type": "string"}, "type": {"description": "The type of remote host. One of: RemoteHostTypes::BSD, RemoteHostTypes::Ftp, RemoteHostTypes::Github, RemoteHostTypes::GoogleDoc, RemoteHostTypes::JDBC, RemoteHostTypes::Redshift, RemoteHostTypes::Salesforce, and RemoteHostTypes::Van", "type": "string"}}, "required": ["name", "url", "type"]}, "Object220": {"type": "object", "properties": {"credentialId": {"description": "The credential ID.", "type": "integer"}, "username": {"description": "The user name for remote host.", "type": "string"}, "password": {"description": "The password for remote host.", "type": "string"}}}, "Object221": {"type": "object", "properties": {"name": {"description": "The path to a data_set.", "type": "string"}, "fullPath": {"description": "Boolean that indicates whether further querying needs to be done before the table can be selected.", "type": "boolean"}}}, "Object223": {"type": "object", "properties": {"id": {"description": "The ID for the project.", "type": "integer"}, "name": {"description": "The name of the project.", "type": "string"}}}, "Object224": {"type": "object", "properties": {"id": {"description": "The ID for the script.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}}}, "Object222": {"type": "object", "properties": {"id": {"description": "The ID of this report.", "type": "integer"}, "name": {"description": "The name of the report.", "type": "string"}, "user": {"description": "The name of the author of this report.", "$ref": "#/definitions/Object11"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "projects": {"description": "A list of projects containing the report.", "type": "array", "items": {"$ref": "#/definitions/Object223"}}, "state": {"description": "The status of the report's last run.", "type": "string"}, "finishedAt": {"description": "The time that the report's last run finished.", "type": "string", "format": "time"}, "vizUpdatedAt": {"description": "The time that the report's visualization was last updated.", "type": "string", "format": "time"}, "script": {"description": "The ID, name, and raw SQL of the job (a script or a query) that backs this report.", "$ref": "#/definitions/Object224"}, "jobPath": {"description": "The link to details of the job that backs this report.", "type": "string"}, "tableauId": {"type": "integer"}, "templateId": {"description": "The ID of the template used for this report.", "type": "integer"}, "authThumbnailUrl": {"description": "URL for a thumbnail of the report.", "type": "string"}, "lastRun": {"description": "The last run of the job backing this report.", "$ref": "#/definitions/Object33"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object225": {"type": "object", "properties": {"id": {"description": "The ID of this report.", "type": "integer"}, "name": {"description": "The name of the report.", "type": "string"}, "user": {"description": "The name of the author of this report.", "$ref": "#/definitions/Object11"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "projects": {"description": "A list of projects containing the report.", "type": "array", "items": {"$ref": "#/definitions/Object223"}}, "state": {"description": "The status of the report's last run.", "type": "string"}, "finishedAt": {"description": "The time that the report's last run finished.", "type": "string", "format": "time"}, "vizUpdatedAt": {"description": "The time that the report's visualization was last updated.", "type": "string", "format": "time"}, "script": {"description": "The ID, name, and raw SQL of the job (a script or a query) that backs this report.", "$ref": "#/definitions/Object224"}, "jobPath": {"description": "The link to details of the job that backs this report.", "type": "string"}, "tableauId": {"type": "integer"}, "templateId": {"description": "The ID of the template used for this report.", "type": "integer"}, "authThumbnailUrl": {"description": "URL for a thumbnail of the report.", "type": "string"}, "lastRun": {"description": "The last run of the job backing this report.", "$ref": "#/definitions/Object33"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "authDataUrl": {"type": "string"}, "authCodeUrl": {"type": "string"}, "config": {"description": "Any configuration metadata for this report.", "type": "string"}, "validOutputFile": {"description": "Whether the job (a script or a query) that backs the report currently has a valid output file.", "type": "boolean"}, "provideAPIKey": {"description": "Whether the report requests an API Key from the report viewer.", "type": "boolean"}, "apiKey": {"description": "A Civis API key that can be used by this report.", "type": "string"}, "apiKeyId": {"description": "The ID of the API key. Can be used for auditing API use by this report.", "type": "integer"}, "appState": {"description": "Any application state blob for this report.", "type": "object", "additionalProperties": {"type": "string"}}, "useViewersTableauUsername": {"description": "Apply user level filtering on Tableau reports.", "type": "boolean"}}}, "Object226": {"type": "object", "properties": {"scriptId": {"description": "The ID of the job (a script or a query) used to create this report.", "type": "integer"}, "name": {"description": "The name of the report.", "type": "string"}, "codeBody": {"description": "The code for the report visualization.", "type": "string"}, "appState": {"description": "Any application state blob for this report.", "type": "object", "additionalProperties": {"type": "string"}}, "provideAPIKey": {"description": "Allow the report to provide an API key to front-end code.", "type": "boolean"}, "templateId": {"description": "The ID of the template used for this report.", "type": "integer"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}}, "Object227": {"type": "object", "properties": {"name": {"description": "The name of the report.", "type": "string"}, "scriptId": {"description": "The ID of the job (a script or a query) used to create this report.", "type": "integer"}, "codeBody": {"description": "The code for the report visualization.", "type": "string"}, "config": {"type": "string"}, "appState": {"description": "The application state blob for this report.", "type": "object", "additionalProperties": {"type": "string"}}, "provideAPIKey": {"description": "Allow the report to provide an API key to front-end code.", "type": "boolean"}, "templateId": {"description": "The ID of the template used for this report. If null is passed, no template will back this report. Changes to the backing template will reset the report appState.", "type": "integer"}, "useViewersTableauUsername": {"description": "Apply user level filtering on Tableau reports.", "type": "boolean"}}}, "Object228": {"type": "object", "properties": {"id": {"description": "The ID of this report.", "type": "integer"}, "state": {"description": "The status of the job's last run.", "type": "string"}, "finishedAt": {"description": "The time that the job's last run finished.", "type": "string", "format": "time"}, "sendEmailOnCompletion": {"description": "Whether the job will send emails on completion.", "type": "boolean"}, "emailTemplate": {"description": "Custom email template.", "type": "string"}, "recipientEmailAddresses": {"description": "Email addresses to send report to, comma separated.", "type": "string"}, "emailSubject": {"description": "Subject for Email.", "type": "string"}, "height": {"description": "The height of the cropped snapshot image in screen pixels. The default value is 900 pixels. Minimum value is 600 pixels.", "type": "integer"}, "width": {"description": "The width of the cropped snapshot image in screen pixels. The default value is 1440 pixels. Minimum value is 600 pixels.", "type": "integer"}, "schedule": {"description": "The schedule of when the snapshot will run.", "$ref": "#/definitions/Object72"}, "parentId": {"description": "The ID of the parent job that will trigger this snapshot.", "type": "integer"}}}, "Object229": {"type": "object", "properties": {"state": {"description": "The status of the job's last run.", "type": "string"}, "finishedAt": {"description": "The time that the job's last run finished.", "type": "string", "format": "time"}, "sendEmailOnCompletion": {"description": "Whether the job will send emails on completion.", "type": "boolean"}, "emailTemplate": {"description": "Custom email template.", "type": "string"}, "recipientEmailAddresses": {"description": "Email addresses to send report to, comma separated.", "type": "string"}, "emailSubject": {"description": "Subject for Email.", "type": "string"}, "height": {"description": "The height of the cropped snapshot image in screen pixels. The default value is 900 pixels. Minimum value is 600 pixels.", "type": "integer"}, "width": {"description": "The width of the cropped snapshot image in screen pixels. The default value is 1440 pixels. Minimum value is 600 pixels.", "type": "integer"}, "schedule": {"description": "The schedule of when the snapshot will run.", "$ref": "#/definitions/Object64"}, "parentId": {"description": "The ID of the parent job that will trigger this snapshot.", "type": "integer"}}}, "Object230": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object233": {"type": "object", "properties": {"name": {"description": "The name of the type.", "type": "string"}}}, "Object235": {"type": "object", "properties": {"outputName": {"description": "The name of the output file.", "type": "string"}, "fileId": {"description": "The unique ID of the output file.", "type": "integer"}, "path": {"description": "The temporary link to download this output file, valid for 36 hours.", "type": "string"}}}, "Object234": {"type": "object", "properties": {"id": {"description": "The ID of this run.", "type": "integer"}, "sqlId": {"description": "The ID of this sql.", "type": "integer"}, "state": {"description": "The state of this run.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "finishedAt": {"description": "The time that this run finished.", "type": "string", "format": "time"}, "error": {"description": "The error message for this run, if present.", "type": "string"}, "output": {"description": "A list of the outputs of this script.", "type": "array", "items": {"$ref": "#/definitions/Object235"}}}}, "Object237": {"type": "object", "properties": {"name": {"description": "The variable's name as used within your code.", "type": "string"}, "label": {"description": "The label to present to users when asking them for the value.", "type": "string"}, "description": {"description": "A short sentence or fragment describing this parameter to the end user.", "type": "string"}, "type": {"description": "The type of parameter. Valid options: string, integer, float, bool, file, database, credential_aws, credential_redshift, or credential_custom", "type": "string"}, "required": {"description": "Whether this param is required.", "type": "boolean"}, "value": {"description": "The value you would like to set this param to. Setting this value makes this parameter a fixed param.", "type": "string"}, "default": {"description": "If an argument for this parameter is not defined, it will use this default value. Use true, True, t, y, yes, or 1 for true bool's or false, False, f, n, no, or 0 for false bool's. Cannot be used for parameters that are required or a credential type.", "type": "string"}}, "required": ["name", "type"]}, "Object236": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "remoteHostId": {"description": "The database ID.", "type": "integer"}, "credentialId": {"description": "The credential ID.", "type": "integer"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.  Cannot be set if this script uses a template script.", "type": "array", "items": {"$ref": "#/definitions/Object237"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "templateScriptId": {"description": "The ID of the template script, if any.  A script cannot both have a template script and be a template for other scripts.", "type": "integer"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object65"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}, "required": ["name", "remoteHostId", "credentialId", "sql"]}, "Object239": {"type": "object", "properties": {"id": {"description": "The ID for the project.", "type": "integer"}, "name": {"description": "The name of the project.", "type": "string"}}}, "Object240": {"type": "object", "properties": {"name": {"description": "The variable's name as used within your code.", "type": "string"}, "label": {"description": "The label to present to users when asking them for the value.", "type": "string"}, "description": {"description": "A short sentence or fragment describing this parameter to the end user.", "type": "string"}, "type": {"description": "The type of parameter. Valid options: string, integer, float, bool, file, database, credential_aws, credential_redshift, or credential_custom", "type": "string"}, "required": {"description": "Whether this param is required.", "type": "boolean"}, "value": {"description": "The value you would like to set this param to. Setting this value makes this parameter a fixed param.", "type": "string"}, "default": {"description": "If an argument for this parameter is not defined, it will use this default value. Use true, True, t, y, yes, or 1 for true bool's or false, False, f, n, no, or 0 for false bool's. Cannot be used for parameters that are required or a credential type.", "type": "string"}}}, "Object241": {"type": "object", "properties": {"details": {"description": "The details link to get more information about the script.", "type": "string"}, "runs": {"description": "The runs link to get the run information list for this script.", "type": "string"}}}, "Object238": {"type": "object", "properties": {"id": {"description": "The ID for the script.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "type": {"description": "The type of the script (e.g SQL, Container, Python, R, JavaScript)", "type": "string"}, "createdAt": {"description": "The time this script was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time the script was last updated.", "type": "string", "format": "time"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object11"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "finishedAt": {"description": "The time that the script's last run finished.", "type": "string", "format": "time"}, "category": {"description": "The category of the script.", "type": "string"}, "projects": {"description": "A list of projects containing the script.", "type": "array", "items": {"$ref": "#/definitions/Object239"}}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object240"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "publishedAsTemplateId": {"description": "The ID of the template that this script is backing.", "type": "integer"}, "fromTemplateId": {"description": "The ID of the template this script uses, if any.", "type": "integer"}, "templateDependentsCount": {"description": "How many other scripts use this one as a template.", "type": "integer"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object241"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object72"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object73"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object11"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object33"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "templateScriptId": {"description": "The ID of the template script, if any.", "type": "integer"}}}, "Object243": {"type": "object", "properties": {"name": {"description": "The variable's name as used within your code.", "type": "string"}, "label": {"description": "The label to present to users when asking them for the value.", "type": "string"}, "description": {"description": "A short sentence or fragment describing this parameter to the end user.", "type": "string"}, "type": {"description": "The type of parameter. Valid options: string, integer, float, bool, file, database, credential_aws, credential_redshift, or credential_custom", "type": "string"}, "required": {"description": "Whether this param is required.", "type": "boolean"}, "value": {"description": "The value you would like to set this param to. Setting this value makes this parameter a fixed param.", "type": "string"}, "default": {"description": "If an argument for this parameter is not defined, it will use this default value. Use true, True, t, y, yes, or 1 for true bool's or false, False, f, n, no, or 0 for false bool's. Cannot be used for parameters that are required or a credential type.", "type": "string"}}}, "Object242": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.  Cannot be set if this script uses a template script.", "type": "array", "items": {"$ref": "#/definitions/Object243"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "templateScriptId": {"description": "The ID of the template script, if any.  A script cannot both have a template script and be a template for other scripts.", "type": "integer"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object64"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object65"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}}}, "Object244": {"type": "object", "properties": {"id": {"description": "The ID for the script.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "type": {"description": "The type of script.", "type": "string"}, "createdAt": {"description": "The time this script was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time this script was last updated.", "type": "string", "format": "time"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object11"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "finishedAt": {"description": "The time that the script's last run finished.", "type": "string", "format": "time"}, "category": {"description": "The category of the script.", "type": "string"}, "projects": {"description": "A list of projects containing the script.", "type": "array", "items": {"$ref": "#/definitions/Object239"}}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object240"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "publishedAsTemplateId": {"description": "The ID of the template that this script is backing.", "type": "integer"}, "fromTemplateId": {"description": "The ID of the template this script uses, if any.", "type": "integer"}, "templateDependentsCount": {"description": "How many other scripts use this one as a template.", "type": "integer"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object241"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object72"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object73"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object11"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object33"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}, "expandedArguments": {"description": "Expanded arguments for use in injecting into different environments.", "type": "object"}, "templateScriptId": {"description": "The ID of the template script, if any.", "type": "integer"}}}, "Object245": {"type": "object", "properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "state": {"description": "The state of the run, one of 'queued', 'running' or 'cancelled'.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}}}, "Object247": {"type": "object", "properties": {"cpu": {"description": "The number of CPU shares to allocate for the container. Each core has 1024 shares.", "type": "integer"}, "memory": {"description": "The amount of RAM to allocate for the container (in MiB).", "type": "integer"}, "diskSpace": {"description": "The amount of disk space, in GB, to allocate for the container. This space will be used to hold the git repo configured for the container and anything your container writes to /tmp or /data. Fractional values (e.g. 0.25) are supported.", "type": "number", "format": "float"}}, "required": ["cpu", "memory"]}, "Object246": {"type": "object", "properties": {"name": {"description": "The name of the container.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object237"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object64"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object65"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object247"}, "repoHttpUri": {"description": "The location of a github repo to clone into the container, e.g. github.com/my-user/my-repo.git.", "type": "string"}, "repoRef": {"description": "The tag or branch of the github repo to clone into the container.", "type": "string"}, "remoteHostCredentialId": {"description": "The id of the database credentials to pass into the environment of the container.", "type": "integer"}, "gitCredentialId": {"description": "The id of the git credential to be used when checking out the specified git repo. If not supplied, the first git credential you've submitted will be used. Unnecessary if no git repo is specified or the git repo is public.", "type": "integer"}, "dockerCommand": {"description": "The command to run on the container. Will be run via sh as: [\"sh\", \"-c\", dockerCommand]", "type": "string"}, "dockerImageName": {"description": "The name of the docker image to pull from DockerHub.", "type": "string"}, "dockerImageTag": {"description": "The tag of the docker image to pull from DockerHub (default: latest).", "type": "string"}, "cancelTimeout": {"description": "The amount of time (in seconds) to wait before forcibly terminating the script. When the script is cancelled, it is first sent a TERM signal. If the script is still running after the timeout, it is sent a KILL signal. Defaults to 0.", "type": "integer"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}}, "required": ["requiredResources", "dockerCommand", "dockerImageName"]}, "Object249": {"type": "object", "properties": {"cpu": {"description": "The number of CPU shares to allocate for the container. Each core has 1024 shares.", "type": "integer"}, "memory": {"description": "The amount of RAM to allocate for the container (in MiB).", "type": "integer"}, "diskSpace": {"description": "The amount of disk space, in GB, to allocate for the container. This space will be used to hold the git repo configured for the container and anything your container writes to /tmp or /data. Fractional values (e.g. 0.25) are supported.", "type": "number", "format": "float"}}}, "Object248": {"type": "object", "properties": {"id": {"description": "The ID for the script.", "type": "integer"}, "name": {"description": "The name of the container.", "type": "string"}, "type": {"description": "The type of the script (e.g Container)", "type": "string"}, "createdAt": {"description": "The time this script was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time the script was last updated.", "type": "string", "format": "time"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object11"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "finishedAt": {"description": "The time that the script's last run finished.", "type": "string", "format": "time"}, "category": {"description": "The category of the script.", "type": "string"}, "projects": {"description": "A list of projects containing the script.", "type": "array", "items": {"$ref": "#/definitions/Object239"}}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object240"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "templateDependentsCount": {"description": "How many other scripts use this one as a template.", "type": "integer"}, "publishedAsTemplateId": {"description": "The ID of the template that this script is backing.", "type": "integer"}, "fromTemplateId": {"description": "The ID of the template script.", "type": "integer"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object241"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object72"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object73"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object11"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object249"}, "repoHttpUri": {"description": "The location of a github repo to clone into the container, e.g. github.com/my-user/my-repo.git.", "type": "string"}, "repoRef": {"description": "The tag or branch of the github repo to clone into the container.", "type": "string"}, "remoteHostCredentialId": {"description": "The id of the database credentials to pass into the environment of the container.", "type": "integer"}, "gitCredentialId": {"description": "The id of the git credential to be used when checking out the specified git repo. If not supplied, the first git credential you've submitted will be used. Unnecessary if no git repo is specified or the git repo is public.", "type": "integer"}, "dockerCommand": {"description": "The command to run on the container. Will be run via sh as: [\"sh\", \"-c\", dockerCommand]", "type": "string"}, "dockerImageName": {"description": "The name of the docker image to pull from DockerHub.", "type": "string"}, "dockerImageTag": {"description": "The tag of the docker image to pull from DockerHub (default: latest).", "type": "string"}, "cancelTimeout": {"description": "The amount of time (in seconds) to wait before forcibly terminating the script. When the script is cancelled, it is first sent a TERM signal. If the script is still running after the timeout, it is sent a KILL signal. Defaults to 0.", "type": "integer"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object33"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}}}, "Object250": {"type": "object", "properties": {"name": {"description": "The name of the container.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object237"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object64"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object65"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object247"}, "repoHttpUri": {"description": "The location of a github repo to clone into the container, e.g. github.com/my-user/my-repo.git.", "type": "string"}, "repoRef": {"description": "The tag or branch of the github repo to clone into the container.", "type": "string"}, "remoteHostCredentialId": {"description": "The id of the database credentials to pass into the environment of the container.", "type": "integer"}, "gitCredentialId": {"description": "The id of the git credential to be used when checking out the specified git repo. If not supplied, the first git credential you've submitted will be used. Unnecessary if no git repo is specified or the git repo is public.", "type": "integer"}, "dockerCommand": {"description": "The command to run on the container. Will be run via sh as: [\"sh\", \"-c\", dockerCommand]", "type": "string"}, "dockerImageName": {"description": "The name of the docker image to pull from DockerHub.", "type": "string"}, "dockerImageTag": {"description": "The tag of the docker image to pull from DockerHub (default: latest).", "type": "string"}, "cancelTimeout": {"description": "The amount of time (in seconds) to wait before forcibly terminating the script. When the script is cancelled, it is first sent a TERM signal. If the script is still running after the timeout, it is sent a KILL signal. Defaults to 0.", "type": "integer"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}}, "required": ["requiredResources", "dockerCommand", "dockerImageName"]}, "Object252": {"type": "object", "properties": {"cpu": {"description": "The number of CPU shares to allocate for the container. Each core has 1024 shares.", "type": "integer"}, "memory": {"description": "The amount of RAM to allocate for the container (in MiB).", "type": "integer"}, "diskSpace": {"description": "The amount of disk space, in GB, to allocate for the container. This space will be used to hold the git repo configured for the container and anything your container writes to /tmp or /data. Fractional values (e.g. 0.25) are supported.", "type": "number", "format": "float"}}}, "Object251": {"type": "object", "properties": {"name": {"description": "The name of the container.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object243"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object64"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object65"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object252"}, "repoHttpUri": {"description": "The location of a github repo to clone into the container, e.g. github.com/my-user/my-repo.git.", "type": "string"}, "repoRef": {"description": "The tag or branch of the github repo to clone into the container.", "type": "string"}, "remoteHostCredentialId": {"description": "The id of the database credentials to pass into the environment of the container.", "type": "integer"}, "gitCredentialId": {"description": "The id of the git credential to be used when checking out the specified git repo. If not supplied, the first git credential you've submitted will be used. Unnecessary if no git repo is specified or the git repo is public.", "type": "integer"}, "dockerCommand": {"description": "The command to run on the container. Will be run via sh as: [\"sh\", \"-c\", dockerCommand]", "type": "string"}, "dockerImageName": {"description": "The name of the docker image to pull from DockerHub.", "type": "string"}, "dockerImageTag": {"description": "The tag of the docker image to pull from DockerHub (default: latest).", "type": "string"}, "cancelTimeout": {"description": "The amount of time (in seconds) to wait before forcibly terminating the script. When the script is cancelled, it is first sent a TERM signal. If the script is still running after the timeout, it is sent a KILL signal. Defaults to 0.", "type": "integer"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}}}, "Object253": {"type": "object", "properties": {"state": {"description": "The state of the script.", "type": "string"}, "bocceAcceptedAt": {"description": "The time when a bocce worker began processing the script.", "type": "string", "format": "date-time"}, "bocceStartedAt": {"description": "The time when a bocce worker began executing the script.", "type": "string", "format": "date-time"}}}, "Object255": {"type": "object", "properties": {"message": {"description": "The log message to store.", "type": "string"}, "level": {"description": "The log level of this message [default: info]", "type": "string"}, "createdAt": {"type": "string", "format": "date-time"}}, "required": ["message"]}, "Object254": {"type": "object", "properties": {"message": {"description": "The log message to store.", "type": "string"}, "level": {"description": "The log level of this message [default: info]", "type": "string"}, "messages": {"type": "array", "items": {"$ref": "#/definitions/Object255"}}}}, "Object256": {"type": "object", "properties": {"id": {"description": "The ID for the script.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "type": {"description": "The type of the script (e.g SQL, Container, Python, R, JavaScript)", "type": "string"}, "createdAt": {"description": "The time this script was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time the script was last updated.", "type": "string", "format": "time"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object11"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "finishedAt": {"description": "The time that the script's last run finished.", "type": "string", "format": "time"}, "projects": {"description": "A list of projects containing the script.", "type": "array", "items": {"$ref": "#/definitions/Object239"}}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "fromTemplateId": {"description": "The ID of the template this script uses, if any.", "type": "integer"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object241"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object33"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "templateScriptId": {"description": "The ID of the template script, if any.", "type": "integer"}}}, "Object258": {"type": "object", "properties": {"includeHeader": {"description": "Whether or not to include headers in the output data. Default: true", "type": "boolean"}, "compression": {"description": "The type of compression to use, if any, one of \"none\", \"zip\", or \"gzip\". Default: gzip", "type": "string"}, "columnDelimiter": {"description": "Which delimiter to use, one of \"comma\", \"tab\", or \"pipe\". Default: comma", "type": "string"}, "unquoted": {"description": "Whether or not to quote fields. Default: false", "type": "boolean"}, "forceMultifile": {"description": "Whether or not the csv should be split into multiple files. Default: false", "type": "boolean"}, "filenamePrefix": {"description": "A user specified filename prefix for the output file to have. Default: null", "type": "string"}}}, "Object257": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object237"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object64"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object65"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "csvSettings": {"description": "Parameters that determine the format of the generated file.", "$ref": "#/definitions/Object258"}}, "required": ["name", "sql", "remoteHostId", "credentialId"]}, "Object260": {"type": "object", "properties": {"includeHeader": {"description": "Whether or not to include headers in the output data. Default: true", "type": "boolean"}, "compression": {"description": "The type of compression to use, if any, one of \"none\", \"zip\", or \"gzip\". Default: gzip", "type": "string"}, "columnDelimiter": {"description": "Which delimiter to use, one of \"comma\", \"tab\", or \"pipe\". Default: comma", "type": "string"}, "unquoted": {"description": "Whether or not to quote fields. Default: false", "type": "boolean"}, "forceMultifile": {"description": "Whether or not the csv should be split into multiple files. Default: false", "type": "boolean"}, "filenamePrefix": {"description": "A user specified filename prefix for the output file to have. Default: null", "type": "string"}}}, "Object259": {"type": "object", "properties": {"id": {"description": "The ID for the script.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "type": {"description": "The type of the script (e.g SQL, Container, Python, R, JavaScript)", "type": "string"}, "createdAt": {"description": "The time this script was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time the script was last updated.", "type": "string", "format": "time"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object11"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "finishedAt": {"description": "The time that the script's last run finished.", "type": "string", "format": "time"}, "category": {"description": "The category of the script.", "type": "string"}, "projects": {"description": "A list of projects containing the script.", "type": "array", "items": {"$ref": "#/definitions/Object239"}}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object240"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "publishedAsTemplateId": {"description": "The ID of the template that this script is backing.", "type": "integer"}, "fromTemplateId": {"description": "The ID of the template this script uses, if any.", "type": "integer"}, "templateDependentsCount": {"description": "How many other scripts use this one as a template.", "type": "integer"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object241"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object72"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object73"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object11"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object33"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}, "expandedArguments": {"description": "Expanded arguments for use in injecting into different environments.", "type": "object"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "codePreview": {"description": "The code that this script will run with arguments inserted.", "type": "string"}, "csvSettings": {"description": "Parameters that determine the format of the generated file.", "$ref": "#/definitions/Object260"}}}, "Object261": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object237"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object64"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object65"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "csvSettings": {"description": "Parameters that determine the format of the generated file.", "$ref": "#/definitions/Object258"}}, "required": ["name", "sql", "remoteHostId", "credentialId"]}, "Object262": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object243"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object64"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object65"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "sql": {"description": "The raw SQL query for the script.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "csvSettings": {"description": "Parameters that determine the format of the generated file.", "$ref": "#/definitions/Object258"}}}, "Object264": {"type": "object", "properties": {"cpu": {"description": "The number of CPU shares to allocate for the container. Each core has 1024 shares. Must be at least 2 shares.", "type": "integer"}, "memory": {"description": "The amount of RAM to allocate for the container (in MiB). Must be at least 4 MiB.", "type": "integer"}, "diskSpace": {"description": "The amount of disk space, in GB, to allocate for the container. This space will be used to hold the git repo configured for the container and anything your container writes to /tmp or /data. Fractional values (e.g. 0.25) are supported.", "type": "number", "format": "float"}}, "required": ["cpu", "memory"]}, "Object263": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object237"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object64"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object65"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object264"}, "source": {"description": "The body/text of the script.", "type": "string"}, "cancelTimeout": {"description": "The amount of time (in seconds) to wait before forcibly terminating the script. When the script is cancelled, it is first sent a TERM signal. If the script is still running after the timeout, it is sent a KILL signal. Defaults to 0.", "type": "integer"}}, "required": ["name", "source"]}, "Object266": {"type": "object", "properties": {"cpu": {"description": "The number of CPU shares to allocate for the container. Each core has 1024 shares. Must be at least 2 shares.", "type": "integer"}, "memory": {"description": "The amount of RAM to allocate for the container (in MiB). Must be at least 4 MiB.", "type": "integer"}, "diskSpace": {"description": "The amount of disk space, in GB, to allocate for the container. This space will be used to hold the git repo configured for the container and anything your container writes to /tmp or /data. Fractional values (e.g. 0.25) are supported.", "type": "number", "format": "float"}}}, "Object265": {"type": "object", "properties": {"id": {"description": "The ID for the script.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "type": {"description": "The type of the script (e.g SQL, Container, Python, R, JavaScript)", "type": "string"}, "createdAt": {"description": "The time this script was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time the script was last updated.", "type": "string", "format": "time"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object11"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "finishedAt": {"description": "The time that the script's last run finished.", "type": "string", "format": "time"}, "category": {"description": "The category of the script.", "type": "string"}, "projects": {"description": "A list of projects containing the script.", "type": "array", "items": {"$ref": "#/definitions/Object239"}}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object240"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "publishedAsTemplateId": {"description": "The ID of the template that this script is backing.", "type": "integer"}, "fromTemplateId": {"description": "The ID of the template this script uses, if any.", "type": "integer"}, "templateDependentsCount": {"description": "How many other scripts use this one as a template.", "type": "integer"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object241"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object72"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object73"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object11"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object33"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object266"}, "source": {"description": "The body/text of the script.", "type": "string"}, "cancelTimeout": {"description": "The amount of time (in seconds) to wait before forcibly terminating the script. When the script is cancelled, it is first sent a TERM signal. If the script is still running after the timeout, it is sent a KILL signal. Defaults to 0.", "type": "integer"}}}, "Object267": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object237"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object64"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object65"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object264"}, "source": {"description": "The body/text of the script.", "type": "string"}, "cancelTimeout": {"description": "The amount of time (in seconds) to wait before forcibly terminating the script. When the script is cancelled, it is first sent a TERM signal. If the script is still running after the timeout, it is sent a KILL signal. Defaults to 0.", "type": "integer"}}, "required": ["name", "source"]}, "Object269": {"type": "object", "properties": {"cpu": {"description": "The number of CPU shares to allocate for the container. Each core has 1024 shares. Must be at least 2 shares.", "type": "integer"}, "memory": {"description": "The amount of RAM to allocate for the container (in MiB). Must be at least 4 MiB.", "type": "integer"}, "diskSpace": {"description": "The amount of disk space, in GB, to allocate for the container. This space will be used to hold the git repo configured for the container and anything your container writes to /tmp or /data. Fractional values (e.g. 0.25) are supported.", "type": "number", "format": "float"}}}, "Object268": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object243"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object64"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object65"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object269"}, "source": {"description": "The body/text of the script.", "type": "string"}, "cancelTimeout": {"description": "The amount of time (in seconds) to wait before forcibly terminating the script. When the script is cancelled, it is first sent a TERM signal. If the script is still running after the timeout, it is sent a KILL signal. Defaults to 0.", "type": "integer"}}}, "Object270": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object237"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object64"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object65"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object264"}, "source": {"description": "The body/text of the script.", "type": "string"}, "cancelTimeout": {"description": "The amount of time (in seconds) to wait before forcibly terminating the script. When the script is cancelled, it is first sent a TERM signal. If the script is still running after the timeout, it is sent a KILL signal. Defaults to 0.", "type": "integer"}}, "required": ["name", "source"]}, "Object271": {"type": "object", "properties": {"id": {"description": "The ID for the script.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "type": {"description": "The type of the script (e.g SQL, Container, Python, R, JavaScript)", "type": "string"}, "createdAt": {"description": "The time this script was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time the script was last updated.", "type": "string", "format": "time"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object11"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "finishedAt": {"description": "The time that the script's last run finished.", "type": "string", "format": "time"}, "category": {"description": "The category of the script.", "type": "string"}, "projects": {"description": "A list of projects containing the script.", "type": "array", "items": {"$ref": "#/definitions/Object239"}}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object240"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "publishedAsTemplateId": {"description": "The ID of the template that this script is backing.", "type": "integer"}, "fromTemplateId": {"description": "The ID of the template this script uses, if any.", "type": "integer"}, "templateDependentsCount": {"description": "How many other scripts use this one as a template.", "type": "integer"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object241"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object72"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object73"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object11"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object33"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object266"}, "source": {"description": "The body/text of the script.", "type": "string"}, "cancelTimeout": {"description": "The amount of time (in seconds) to wait before forcibly terminating the script. When the script is cancelled, it is first sent a TERM signal. If the script is still running after the timeout, it is sent a KILL signal. Defaults to 0.", "type": "integer"}}}, "Object272": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object237"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object64"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object65"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object264"}, "source": {"description": "The body/text of the script.", "type": "string"}, "cancelTimeout": {"description": "The amount of time (in seconds) to wait before forcibly terminating the script. When the script is cancelled, it is first sent a TERM signal. If the script is still running after the timeout, it is sent a KILL signal. Defaults to 0.", "type": "integer"}}, "required": ["name", "source"]}, "Object273": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object243"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object64"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object65"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "requiredResources": {"description": "Resources to allocate for the container.", "$ref": "#/definitions/Object269"}, "source": {"description": "The body/text of the script.", "type": "string"}, "cancelTimeout": {"description": "The amount of time (in seconds) to wait before forcibly terminating the script. When the script is cancelled, it is first sent a TERM signal. If the script is still running after the timeout, it is sent a KILL signal. Defaults to 0.", "type": "integer"}}}, "Object274": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object237"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object64"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object65"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "source": {"description": "The body/text of the script.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}}, "required": ["name", "source", "remoteHostId", "credentialId"]}, "Object275": {"type": "object", "properties": {"id": {"description": "The ID for the script.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "type": {"description": "The type of the script (e.g SQL, Container, Python, R, JavaScript)", "type": "string"}, "createdAt": {"description": "The time this script was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time the script was last updated.", "type": "string", "format": "time"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object11"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "finishedAt": {"description": "The time that the script's last run finished.", "type": "string", "format": "time"}, "category": {"description": "The category of the script.", "type": "string"}, "projects": {"description": "A list of projects containing the script.", "type": "array", "items": {"$ref": "#/definitions/Object239"}}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object240"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "isTemplate": {"description": "Whether others scripts use this one as a template.", "type": "boolean"}, "publishedAsTemplateId": {"description": "The ID of the template that this script is backing.", "type": "integer"}, "fromTemplateId": {"description": "The ID of the template this script uses, if any.", "type": "integer"}, "templateDependentsCount": {"description": "How many other scripts use this one as a template.", "type": "integer"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "links": {"description": "Useful links for this script.", "$ref": "#/definitions/Object241"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object72"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object73"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object11"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object33"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "source": {"description": "The body/text of the script.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}}}, "Object276": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object237"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object64"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object65"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "source": {"description": "The body/text of the script.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}}, "required": ["name", "source", "remoteHostId", "credentialId"]}, "Object277": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "userContext": {"description": "\"runner\" or \"author\", who to execute the script as when run as a template.", "type": "string"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object243"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object64"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object65"}, "nextRunAt": {"description": "The time of the next scheduled run.", "type": "string", "format": "time"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}, "source": {"description": "The body/text of the script.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}}}, "Object278": {"type": "object", "properties": {"id": {"description": "The ID for the script.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "type": {"description": "The type of the script (e.g Custom)", "type": "string"}, "createdAt": {"description": "The time this script was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time the script was last updated.", "type": "string", "format": "time"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object11"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "finishedAt": {"description": "The time that the script's last run finished.", "type": "string", "format": "time"}, "projects": {"description": "A list of projects containing the script.", "type": "array", "items": {"$ref": "#/definitions/Object239"}}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "fromTemplateId": {"description": "The ID of the template script.", "type": "integer"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object33"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}}}, "Object279": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "fromTemplateId": {"description": "The ID of the template script.", "type": "integer"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object64"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object65"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}}, "required": ["fromTemplateId"]}, "Object280": {"type": "object", "properties": {"id": {"description": "The ID for the script.", "type": "integer"}, "name": {"description": "The name of the script.", "type": "string"}, "type": {"description": "The type of the script (e.g Custom)", "type": "string"}, "createdAt": {"description": "The time this script was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time the script was last updated.", "type": "string", "format": "time"}, "author": {"description": "The author of the script.", "$ref": "#/definitions/Object11"}, "state": {"description": "The status of the script's last run.", "type": "string"}, "finishedAt": {"description": "The time that the script's last run finished.", "type": "string", "format": "time"}, "category": {"type": "string"}, "projects": {"description": "A list of projects containing the script.", "type": "array", "items": {"$ref": "#/definitions/Object239"}}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "params": {"description": "A definition of the parameters this script accepts in the arguments field.", "type": "array", "items": {"$ref": "#/definitions/Object240"}}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "fromTemplateId": {"description": "The ID of the template script.", "type": "integer"}, "templateScriptName": {"description": "The name of the template script.", "type": "string"}, "templateNote": {"description": "The template's note.", "type": "string"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "codePreview": {"description": "The code that this script will run with arguments inserted.", "type": "string"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object72"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object73"}, "runningAs": {"description": "The user this job will run as, defaults to the author of the job.", "$ref": "#/definitions/Object11"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "lastRun": {"description": "The last run of this script.", "$ref": "#/definitions/Object33"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}}}, "Object281": {"type": "object", "properties": {"name": {"description": "The name of the script.", "type": "string"}, "parentId": {"description": "The ID of the parent job that will trigger this script", "type": "integer"}, "arguments": {"description": "Dictionary of name/value pairs to use to run this script. Only settable if this script has defined params.", "type": "object"}, "remoteHostId": {"description": "The remote host ID that this script will connect to.", "type": "integer"}, "credentialId": {"description": "The credential that this script will use.", "type": "integer"}, "schedule": {"description": "The schedule of when this script will be run.", "$ref": "#/definitions/Object64"}, "notifications": {"description": "The notifications to send after the script is run.", "$ref": "#/definitions/Object65"}, "timeZone": {"description": "The time zone of this script.", "type": "string"}, "targetProjectId": {"description": "Target project to which script outputs will be added.", "type": "integer"}}}, "Object282": {"type": "object", "properties": {"id": {"description": "The ID of this run.", "type": "integer"}, "sqlId": {"description": "The ID of this sql.", "type": "integer"}, "state": {"description": "The state of this run.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "startedAt": {"description": "The time the last run started.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time that this run finished.", "type": "string", "format": "time"}, "error": {"description": "The error message for this run, if present.", "type": "string"}, "output": {"description": "A list of the outputs of this script.", "type": "array", "items": {"$ref": "#/definitions/Object235"}}}}, "Object283": {"type": "object", "properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "containerId": {"description": "The ID of the container.", "type": "integer"}, "state": {"description": "The state of the run, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "startedAt": {"description": "The time the last run started at.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time the last run completed.", "type": "string", "format": "time"}, "error": {"description": "The error, if any, returned by the run.", "type": "string"}}}, "Object284": {"type": "object", "properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "pythonId": {"description": "The ID of the python.", "type": "integer"}, "state": {"description": "The state of the run, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "startedAt": {"description": "The time the last run started at.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time the last run completed.", "type": "string", "format": "time"}, "error": {"description": "The error, if any, returned by the run.", "type": "string"}}}, "Object285": {"type": "object", "properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "rId": {"description": "The ID of the r.", "type": "integer"}, "state": {"description": "The state of the run, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "startedAt": {"description": "The time the last run started at.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time the last run completed.", "type": "string", "format": "time"}, "error": {"description": "The error, if any, returned by the run.", "type": "string"}}}, "Object286": {"type": "object", "properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "javascriptId": {"description": "The ID of the javascript.", "type": "integer"}, "state": {"description": "The state of the run, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "startedAt": {"description": "The time the last run started at.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time the last run completed.", "type": "string", "format": "time"}, "error": {"description": "The error, if any, returned by the run.", "type": "string"}}}, "Object287": {"type": "object", "properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "customId": {"description": "The ID of the custom.", "type": "integer"}, "state": {"description": "The state of the run, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "isCancelRequested": {"description": "True if run cancel requested, else false.", "type": "boolean"}, "startedAt": {"description": "The time the last run started at.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time the last run completed.", "type": "string", "format": "time"}, "error": {"description": "The error, if any, returned by the run.", "type": "string"}}}, "Object288": {"type": "object", "properties": {"objectType": {"description": "The type of the output. Valid values are File, Table, Report, Project, or Credential", "type": "string"}, "objectId": {"description": "The ID of the output object.", "type": "integer"}, "name": {"description": "The name of the output object.", "type": "string"}, "link": {"description": "The link to retrieve the output object.", "type": "string"}}}, "Object289": {"type": "object", "properties": {"objectType": {"description": "The type of the output. Valid values are File, Table, Report, Project, or Credential", "type": "string"}, "objectId": {"description": "The ID of the output object.", "type": "integer"}, "name": {"description": "The name of the output object.", "type": "string"}, "link": {"description": "The link to retrieve the output object.", "type": "string"}}}, "Object290": {"type": "object", "properties": {"objectType": {"description": "The type of the output. Valid values are File, Table, Report, Project, or Credential", "type": "string"}, "objectId": {"description": "The ID of the output object.", "type": "integer"}}, "required": ["objectType", "objectId"]}, "Object291": {"type": "object", "properties": {"objectType": {"description": "The type of the output. Valid values are File, Table, Report, Project, or Credential", "type": "string"}, "objectId": {"description": "The ID of the output object.", "type": "integer"}, "name": {"description": "The name of the output object.", "type": "string"}, "link": {"description": "The link to retrieve the output object.", "type": "string"}}}, "Object292": {"type": "object", "properties": {"objectType": {"description": "The type of the output. Valid values are File, Table, Report, Project, or Credential", "type": "string"}, "objectId": {"description": "The ID of the output object.", "type": "integer"}}, "required": ["objectType", "objectId"]}, "Object293": {"type": "object", "properties": {"objectType": {"description": "The type of the output. Valid values are File, Table, Report, Project, or Credential", "type": "string"}, "objectId": {"description": "The ID of the output object.", "type": "integer"}, "name": {"description": "The name of the output object.", "type": "string"}, "link": {"description": "The link to retrieve the output object.", "type": "string"}}}, "Object294": {"type": "object", "properties": {"objectType": {"description": "The type of the output. Valid values are File, Table, Report, Project, or Credential", "type": "string"}, "objectId": {"description": "The ID of the output object.", "type": "integer"}}, "required": ["objectType", "objectId"]}, "Object295": {"type": "object", "properties": {"objectType": {"description": "The type of the output. Valid values are File, Table, Report, Project, or Credential", "type": "string"}, "objectId": {"description": "The ID of the output object.", "type": "integer"}, "name": {"description": "The name of the output object.", "type": "string"}, "link": {"description": "The link to retrieve the output object.", "type": "string"}}}, "Object296": {"type": "object", "properties": {"objectType": {"description": "The type of the output. Valid values are File, Table, Report, Project, or Credential", "type": "string"}, "objectId": {"description": "The ID of the output object.", "type": "integer"}}, "required": ["objectType", "objectId"]}, "Object297": {"type": "object", "properties": {"objectType": {"description": "The type of the output. Valid values are File, Table, Report, Project, or Credential", "type": "string"}, "objectId": {"description": "The ID of the output object.", "type": "integer"}, "name": {"description": "The name of the output object.", "type": "string"}, "link": {"description": "The link to retrieve the output object.", "type": "string"}}}, "Object298": {"type": "object", "properties": {"objectType": {"description": "The type of the output. Valid values are File, Table, Report, Project, or Credential", "type": "string"}, "objectId": {"description": "The ID of the output object.", "type": "integer"}}, "required": ["objectType", "objectId"]}, "Object299": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object300": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object301": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object302": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object303": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object304": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object306": {"type": "object", "properties": {"score": {"description": "The relevance score from the search request.", "type": "number", "format": "float"}, "type": {"description": "The type of the item.", "type": "string"}, "id": {"description": "The ID of the item.", "type": "integer"}, "name": {"description": "The name of the item.", "type": "string"}, "typeName": {"description": "The verbose name of the type.", "type": "string"}, "updatedAt": {"description": "The time the item was last updated.", "type": "string", "format": "time"}, "owner": {"description": "The owner of the item.", "type": "string"}}}, "Object305": {"type": "object", "properties": {"totalResults": {"description": "The number of items matching the search query.", "type": "integer"}, "aggregations": {"description": "Aggregations by owner and type for the search results.", "type": "object"}, "results": {"description": "The items returned by the search.", "type": "array", "items": {"$ref": "#/definitions/Object306"}}}}, "Object307": {"type": "object", "properties": {"type": {"description": "The name of the item type.", "type": "string"}}}, "Object309": {"type": "object", "properties": {"deploymentId": {"description": "The ID for this deployment.", "type": "integer"}, "userId": {"description": "The ID of the owner.", "type": "integer"}, "host": {"description": "Domain of the deployment.", "type": "string"}, "name": {"description": "Name of the deployment.", "type": "string"}, "dockerImageName": {"description": "The name of the docker image to pull from DockerHub.", "type": "string"}, "dockerImageTag": {"description": "The tag of the docker image to pull from DockerHub (default: latest).", "type": "string"}, "displayUrl": {"description": "URL that displays the deployed platform object and includes auth token.", "type": "string"}, "memory": {"description": "The memory allocated to the deployment.", "type": "integer"}, "cpu": {"description": "The cpu allocated to the deployment.", "type": "integer"}, "state": {"description": "The state of the deployment.", "type": "string"}, "stateMessage": {"description": "A detailed description of the state.", "type": "string"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "shinyAppId": {"description": "The ID of owning Shiny App", "type": "integer"}}}, "Object315": {"type": "object", "properties": {"state": {"description": "The state of the deployment", "type": "string"}, "stateMessage": {"description": "A detailed description of the state", "type": "string"}}}, "Object316": {"type": "object", "properties": {"id": {"description": "The ID for this project.", "type": "integer"}}}, "Object320": {"type": "object", "properties": {"id": {"type": "integer"}, "shortName": {"type": "string"}, "title": {"type": "string"}}}, "Object322": {"type": "object", "properties": {"id": {"type": "integer"}, "code": {"type": "integer"}, "text": {"type": "string"}, "doNotRead": {"type": "boolean"}, "rotate": {"type": "boolean"}, "position": {"type": "integer"}, "binaryMapping": {"type": "boolean"}, "terminate": {"type": "boolean"}}}, "Object321": {"type": "object", "properties": {"id": {"type": "integer"}, "code": {"type": "string"}, "text": {"type": "string"}, "responseType": {"type": "string"}, "questionOptions": {"type": "array", "items": {"$ref": "#/definitions/Object322"}}}}, "Object319": {"type": "object", "properties": {"id": {"type": "integer"}, "script": {"$ref": "#/definitions/Object320"}, "questions": {"type": "array", "items": {"$ref": "#/definitions/Object321"}}}}, "Object323": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}}}, "Object325": {"type": "object", "properties": {"schema": {"type": "string"}, "name": {"type": "string"}}}, "Object327": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}}}, "Object328": {"type": "object", "properties": {"name": {"type": "string"}, "column": {"type": "string"}}}, "Object329": {"type": "object", "properties": {"name": {"type": "string"}, "methodColumn": {"type": "string"}, "contactabilityColumn": {"type": "string"}}}, "Object326": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}, "sourceTable": {"$ref": "#/definitions/Object325"}, "remoteHost": {"$ref": "#/definitions/Object327"}, "uniqueId": {"type": "string"}, "bucketColumns": {"type": "array", "items": {"$ref": "#/definitions/Object328"}}, "contactabilityColumns": {"type": "array", "items": {"$ref": "#/definitions/Object329"}}, "audienceColumns": {"type": "array", "items": {"$ref": "#/definitions/Object328"}}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}}}, "Object324": {"type": "object", "properties": {"id": {"type": "integer"}, "sampleTable": {"$ref": "#/definitions/Object325"}, "vendorSampleTable": {"$ref": "#/definitions/Object325"}, "strataTabsTable": {"$ref": "#/definitions/Object325"}, "uniqueId": {"type": "string"}, "householdColumn": {"type": "integer"}, "basefile": {"$ref": "#/definitions/Object326"}, "desiredCompletes": {"type": "integer"}, "oversamplePercent": {"type": "integer"}, "buckets": {"type": "array", "items": {"$ref": "#/definitions/Object328"}}, "contactMethods": {"type": "array", "items": {"type": "string"}}, "targetAudience": {"type": "string"}, "populationLimitingSQL": {"type": "string"}, "frameLimitingSQL": {"type": "string"}, "parentId": {"type": "integer"}, "metadata": {"type": "object"}}}, "Object330": {"type": "object", "properties": {"id": {"type": "integer"}, "dials": {"type": "integer"}, "completes": {"type": "integer"}, "matches": {"type": "integer"}, "refusals": {"type": "integer"}, "matchedCompletes": {"type": "integer"}, "earlyTermination": {"type": "integer"}, "other": {"type": "integer"}, "status": {"type": "string"}}}, "Object318": {"type": "object", "properties": {"id": {"type": "integer"}, "scriptVersion": {"$ref": "#/definitions/Object319"}, "vendor": {"$ref": "#/definitions/Object323"}, "sample": {"$ref": "#/definitions/Object324"}, "sampleStatus": {"type": "string"}, "scriptStatus": {"type": "string"}, "scheduledStartDate": {"type": "string", "format": "date"}, "scheduledEndDate": {"type": "string", "format": "date"}, "completesNeeded": {"type": "integer"}, "completes": {"type": "integer"}, "mode": {"type": "string"}, "costPerComplete": {"type": "number", "format": "float"}, "callCenterLeadId": {"type": "integer"}, "callIngestionLeadId": {"type": "integer"}, "voterFileSource": {"type": "string"}, "notes": {"type": "string"}, "sampleSchema": {"type": "string"}, "sampleTable": {"type": "string"}, "matchedCompletes": {"type": "integer"}, "returnDataId": {"type": "integer"}, "returns": {"type": "array", "items": {"$ref": "#/definitions/Object330"}}, "rollupJobId": {"type": "integer"}}}, "Object317": {"type": "object", "properties": {"id": {"description": "The ID for this project.", "type": "integer"}, "name": {"description": "The name of this project.", "type": "string"}, "projectType": {"type": "string"}, "status": {"type": "string"}, "client": {"type": "string"}, "notes": {"type": "string"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "fieldings": {"type": "array", "items": {"$ref": "#/definitions/Object318"}}, "rollupJobId": {"type": "integer"}, "customImportTemplateId": {"type": "integer"}}}, "Object331": {"type": "object", "properties": {"id": {"type": "integer"}, "sampleTable": {"$ref": "#/definitions/Object325"}}}, "Object332": {"type": "object", "properties": {"sampleTableId": {"type": "integer"}, "serverName": {"type": "string"}, "schema": {"type": "string"}, "tableName": {"type": "string"}, "uniqueId": {"type": "string"}, "metadata": {"type": "object"}}}, "Object333": {"type": "object", "properties": {"sampleTableId": {"type": "integer"}, "serverName": {"type": "string"}, "schema": {"type": "string"}, "tableName": {"type": "string"}, "uniqueId": {"type": "string"}, "metadata": {"type": "object"}}}, "Object334": {"type": "object", "properties": {"id": {"description": "Survey ID", "type": "integer"}, "vendor": {"$ref": "#/definitions/Object323"}, "sampleSchemaTable": {"type": "string"}}}, "Object335": {"type": "object", "properties": {"id": {"description": "Survey ID", "type": "integer"}, "scriptVersion": {"$ref": "#/definitions/Object319"}, "vendor": {"$ref": "#/definitions/Object323"}, "sample": {"description": "Table containing survey sample and metadata", "$ref": "#/definitions/Object324"}, "sampleSchemaTable": {"type": "string"}, "returns": {"description": "List of survey returns", "type": "array", "items": {"$ref": "#/definitions/Object330"}}, "rollupJobId": {"type": "integer"}, "metadata": {"description": "Metadata", "type": "object"}}}, "Object336": {"type": "object", "properties": {"id": {"description": "The ID of the return.", "type": "integer"}, "status": {"type": "string"}}}, "Object337": {"type": "object", "properties": {"id": {"description": "The ID of the return.", "type": "integer"}, "surveyId": {"description": "The ID of the survey.", "type": "integer"}, "fileId": {"description": "The ID of the file object.", "type": "integer"}, "s3Uri": {"description": "URI of the S3 file", "type": "string"}, "customImportJobId": {"type": "integer"}, "databaseTableId": {"description": "Table containing imported survey return", "type": "integer"}, "metadata": {"type": "object"}, "status": {"type": "string"}}}, "Object338": {"type": "object", "properties": {"databaseTableId": {"description": "Table containing imported survey return", "type": "integer"}, "serverName": {"type": "string"}, "schema": {"type": "string"}, "tableName": {"type": "string"}, "metadata": {"type": "object"}, "status": {"type": "string"}}}, "Object339": {"type": "object", "properties": {"databaseTableId": {"description": "Table containing imported survey return", "type": "integer"}, "serverName": {"type": "string"}, "schema": {"type": "string"}, "tableName": {"type": "string"}, "metadata": {"type": "object"}, "status": {"type": "string"}}}, "Object340": {"type": "object", "properties": {"databaseId": {"description": "The ID of the destination database.", "type": "integer"}, "schema": {"description": "The destination schema name.", "type": "string"}, "name": {"description": "The destination table name, without the schema prefix.", "type": "string"}, "data": {"description": "The file to import, uploaded using HTTP multipart.", "type": "string"}}, "required": ["databaseId", "schema", "name", "data"]}, "Object341": {"type": "object", "properties": {"databaseId": {"description": "The ID of the destination database.", "type": "integer"}, "schema": {"description": "The destination schema name.", "type": "string"}, "name": {"description": "The destination table name, without the schema prefix.", "type": "string"}, "state": {"description": "The state of the last run.", "type": "string"}, "startedAt": {"description": "The start time of the last run.", "type": "string", "format": "date-time"}, "finishedAt": {"description": "The end time of the last run.", "type": "string", "format": "date-time"}}}, "Object342": {"type": "object", "properties": {"jobType": {"description": "Job type", "type": "string"}, "metadata": {"type": "string"}}, "required": ["jobType"]}, "Object343": {"type": "object", "properties": {"id": {"description": "The ID of the enhancement.", "type": "integer"}, "sourceTableId": {"description": "The ID of the table that was enhanced.", "type": "integer"}, "state": {"description": "The state of the enhancement, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "enhancedTableSchema": {"description": "The schema name of the table created by the enhancement.", "type": "string"}, "enhancedTableName": {"description": "The name of the table created by the enhancement.", "type": "string"}}}, "Object344": {"type": "object", "properties": {"performNcoa": {"description": "Whether to update addresses for records matching the National Change of Address (NCOA) database.", "type": "boolean"}, "ncoaCredentialId": {"description": "Credential to use when performing NCOA updates. Required if 'performNcoa' is true.", "type": "integer"}, "outputLevel": {"description": "The set of fields persisted by a CASS or NCOA enhancement.For CASS enhancements, one of 'cass' or 'all.'For NCOA enhancements, one of 'cass', 'ncoa' , 'coalesced' or 'all'.By default, all fields will be returned.", "type": "string"}}}, "Object345": {"type": "object", "properties": {"id": {"description": "The ID of the enhancement.", "type": "integer"}, "sourceTableId": {"description": "The ID of the table that was enhanced.", "type": "integer"}, "state": {"description": "The state of the enhancement, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "enhancedTableSchema": {"description": "The schema name of the table created by the enhancement.", "type": "string"}, "enhancedTableName": {"description": "The name of the table created by the enhancement.", "type": "string"}, "performNcoa": {"description": "Whether to update addresses for records matching the National Change of Address (NCOA) database.", "type": "boolean"}, "ncoaCredentialId": {"description": "Credential to use when performing NCOA updates. Required if 'performNcoa' is true.", "type": "integer"}, "outputLevel": {"description": "The set of fields persisted by a CASS or NCOA enhancement.For CASS enhancements, one of 'cass' or 'all.'For NCOA enhancements, one of 'cass', 'ncoa' , 'coalesced' or 'all'.By default, all fields will be returned.", "type": "string"}}}, "Object346": {"type": "object", "properties": {"threshold": {"description": "The confidence threshold which must be met for two individuals to be declared a match. Must be less than or equal to 1 and greater than or equal to 0.", "type": "number", "format": "float"}, "maxMatches": {"description": "The maximum number of individuals a person may be matched with.A value of 0 indicates that all matches should be returned.", "type": "integer"}, "matchTableId": {"description": "The ID of the Dynamo table to match against.", "type": "integer"}}, "required": ["threshold", "matchTableId"]}, "Object347": {"type": "object", "properties": {"id": {"description": "The ID of the enhancement.", "type": "integer"}, "sourceTableId": {"description": "The ID of the table that was enhanced.", "type": "integer"}, "state": {"description": "The state of the enhancement, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "enhancedTableSchema": {"description": "The schema name of the table created by the enhancement.", "type": "string"}, "enhancedTableName": {"description": "The name of the table created by the enhancement.", "type": "string"}, "threshold": {"description": "The confidence threshold which must be met for two individuals to be declared a match. Must be less than or equal to 1 and greater than or equal to 0.", "type": "number", "format": "float"}, "maxMatches": {"description": "The maximum number of individuals a person may be matched with.A value of 0 indicates that all matches should be returned.", "type": "integer"}, "matchTableId": {"description": "The ID of the Dynamo table to match against.", "type": "integer"}}}, "Object348": {"type": "object", "properties": {"threshold": {"description": "The confidence threshold which must be met for two individuals to be declared a match. Must be less than or equal to 1 and greater than or equal to 0.", "type": "number", "format": "float"}, "maxMatches": {"description": "The maximum number of individuals a person may be matched with.A value of 0 indicates that all matches should be returned.", "type": "integer"}, "matchTableId": {"description": "The ID of the Redshift table to match against.", "type": "integer"}}, "required": ["threshold", "matchTableId"]}, "Object349": {"type": "object", "properties": {"id": {"description": "The ID of the enhancement.", "type": "integer"}, "sourceTableId": {"description": "The ID of the table that was enhanced.", "type": "integer"}, "state": {"description": "The state of the enhancement, one of 'queued' 'running' 'succeeded' 'failed' or 'cancelled'.", "type": "string"}, "enhancedTableSchema": {"description": "The schema name of the table created by the enhancement.", "type": "string"}, "enhancedTableName": {"description": "The name of the table created by the enhancement.", "type": "string"}, "threshold": {"description": "The confidence threshold which must be met for two individuals to be declared a match. Must be less than or equal to 1 and greater than or equal to 0.", "type": "number", "format": "float"}, "maxMatches": {"description": "The maximum number of individuals a person may be matched with.A value of 0 indicates that all matches should be returned.", "type": "integer"}, "matchTableId": {"description": "The ID of the Redshift table to match against.", "type": "integer"}}}, "Object351": {"type": "object", "properties": {"name": {"description": "Name of the column.", "type": "string"}, "sqlType": {"description": "SQL type of the column.", "type": "string"}, "sampleValues": {"description": "A sample of values from the column.", "type": "array", "items": {"type": "string"}}, "encoding": {"description": "The compression encoding for this columnSee: http://docs.aws.amazon.com/redshift/latest/dg/c_Compression_encodings.html", "type": "string"}, "description": {"description": "The description of the column, as specified by the table owner", "type": "string"}, "order": {"description": "Relative position of the column in the table.", "type": "integer"}, "minValue": {"description": "Smallest value in the column.", "type": "string"}, "maxValue": {"description": "Largest value in the column.", "type": "string"}, "avgValue": {"description": "Average value of the column, where applicable.", "type": "number", "format": "float"}, "stddev": {"description": "Stddev of the column, where applicable.", "type": "number", "format": "float"}, "valueDistributionPercent": {"description": "A mapping between each value in the column and the percentage of rows with that value.Only present for tables with fewer than approximately 25,000,000 rows and for columns with fewer than twenty distinct values.", "type": "object", "additionalProperties": {"type": "number", "format": "float"}}, "coverageCount": {"description": "Number of non-null values in the column.", "type": "integer"}, "nullCount": {"description": "Number of null values in the column.", "type": "integer"}, "possibleDependentVariableTypes": {"description": "Possible dependent variable types the column may be used to model.  Null if it may not be used as a dependent variable.", "type": "array", "items": {"type": "string"}}, "useableAsIndependentVariable": {"description": "Whether the column may be used as an independent variable to train a model.", "type": "boolean"}, "useableAsPrimaryKey": {"description": "Whether the column may be used as an primary key to identify table rows.", "type": "boolean"}, "valueDistribution": {"description": "An object mapping distinct values in the column to the number of times they appear in the column", "type": "object", "additionalProperties": {"type": "integer"}}, "distinctCount": {"description": "Number of distinct values in the column.", "type": "integer"}}}, "Object352": {"type": "object", "properties": {"id": {"type": "integer"}, "leftTableId": {"type": "integer"}, "leftIdentifier": {"type": "string"}, "rightTableId": {"type": "integer"}, "rightIdentifier": {"type": "string"}, "on": {"type": "string"}, "leftJoin": {"type": "boolean"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}}}, "Object353": {"type": "object", "properties": {"type": {"type": "string"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "joinId": {"type": "integer"}}}, "Object355": {"type": "object", "properties": {"name": {"type": "string"}}}, "Object357": {"type": "object", "properties": {"maxMatches": {"type": "integer"}, "threshold": {"type": "string"}}}, "Object356": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"type": "string"}, "type": {"type": "string"}, "state": {"description": "Whether the job is idle, queued, running, cancelled, or failed.", "type": "string"}, "createdAt": {"type": "string", "format": "date-time"}, "updatedAt": {"type": "string", "format": "date-time"}, "runs": {"description": "Information about the most recent runs of the job.", "type": "array", "items": {"$ref": "#/definitions/Object33"}}, "lastRun": {"$ref": "#/definitions/Object33"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "matchOptions": {"$ref": "#/definitions/Object357"}}}, "Object354": {"type": "object", "properties": {"sourceTableId": {"description": "Source table", "type": "integer"}, "targetType": {"description": "Target type", "type": "string"}, "targetId": {"description": "Target ID", "type": "integer"}, "target": {"$ref": "#/definitions/Object355"}, "job": {"description": "Matching job", "$ref": "#/definitions/Object356"}}}, "Object350": {"type": "object", "properties": {"id": {"description": "The ID of the table.", "type": "integer"}, "databaseId": {"description": "The ID of the database.", "type": "integer"}, "schema": {"description": "The name of the schema containing the table.", "type": "string"}, "name": {"description": "Name of the table.", "type": "string"}, "description": {"description": "The description of the table, as specified by the table owner", "type": "string"}, "isView": {"description": "True if this table represents a view. False if it represents a regular table.", "type": "boolean"}, "rowCount": {"description": "The number of rows in the table.", "type": "integer"}, "columnCount": {"description": "The number of columns in the table.", "type": "integer"}, "sizeMb": {"description": "The size of the table in megabytes.", "type": "number", "format": "float"}, "owner": {"description": "The database username of the table's owner.", "type": "string"}, "distkey": {"description": "The column used as the Amazon Redshift distkey.", "type": "string"}, "sortkeys": {"description": "The column used as the Amazon Redshift sortkey.", "type": "string"}, "refreshStatus": {"description": "How up-to-date the table's statistics on row counts, null counts, distinct counts, and values distributions are. One of: refreshing, stale, or current.", "type": "string"}, "lastRefresh": {"description": "The time of the last statistics refresh.", "type": "string", "format": "date-time"}, "refreshId": {"description": "The ID of the most recent statistics refresh.", "type": "string"}, "lastRun": {"description": "The last run of a refresh on this table.", "$ref": "#/definitions/Object33"}, "ontologyMapping": {"description": "The ontology-key to column-name mapping.  See /ontology for the list of valid ontology keys.", "type": "object", "additionalProperties": {"type": "string"}}, "columns": {"type": "array", "items": {"$ref": "#/definitions/Object351"}}, "joins": {"type": "array", "items": {"$ref": "#/definitions/Object352"}}, "multipartKey": {"type": "array", "items": {"type": "string"}}, "enhancements": {"type": "array", "items": {"$ref": "#/definitions/Object353"}}, "viewDef": {"type": "string"}, "tableDef": {"type": "string"}, "outgoingTableMatches": {"type": "array", "items": {"$ref": "#/definitions/Object354"}}}}, "Object358": {"type": "object", "properties": {"ontologyMapping": {"description": "The ontology-key to column-name mapping.  See /ontology for the list of valid ontology keys.", "type": "object", "additionalProperties": {"type": "string"}}, "description": {"description": "The user-defined description of the table.", "type": "string"}}}, "Object359": {"type": "object", "properties": {"id": {"description": "The ID of the table.", "type": "integer"}, "databaseId": {"description": "The ID of the database.", "type": "integer"}, "schema": {"description": "The name of the schema containing the table.", "type": "string"}, "name": {"description": "Name of the table.", "type": "string"}, "description": {"description": "The description of the table, as specified by the table owner", "type": "string"}, "isView": {"description": "True if this table represents a view. False if it represents a regular table.", "type": "boolean"}, "rowCount": {"description": "The number of rows in the table.", "type": "integer"}, "columnCount": {"description": "The number of columns in the table.", "type": "integer"}, "sizeMb": {"description": "The size of the table in megabytes.", "type": "number", "format": "float"}, "owner": {"description": "The database username of the table's owner.", "type": "string"}, "distkey": {"description": "The column used as the Amazon Redshift distkey.", "type": "string"}, "sortkeys": {"description": "The column used as the Amazon Redshift sortkey.", "type": "string"}, "refreshStatus": {"description": "How up-to-date the table's statistics on row counts, null counts, distinct counts, and values distributions are. One of: refreshing, stale, or current.", "type": "string"}, "lastRefresh": {"description": "The time of the last statistics refresh.", "type": "string", "format": "date-time"}, "refreshId": {"description": "The ID of the most recent statistics refresh.", "type": "string"}, "lastRun": {"description": "The last run of a refresh on this table.", "$ref": "#/definitions/Object33"}, "ontologyMapping": {"description": "The ontology-key to column-name mapping.  See /ontology for the list of valid ontology keys.", "type": "object", "additionalProperties": {"type": "string"}}}}, "Object360": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"description": "The name of the template.", "type": "string"}, "category": {"description": "The category of this report template.  Can be left blank.  Acceptable values are: dataset-viz", "type": "string"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "useCount": {"description": "The number of uses of this template.", "type": "integer"}, "archived": {"description": "Whether the template has been archived.", "type": "boolean"}, "author": {"description": "The author of the template.", "$ref": "#/definitions/Object11"}, "techReviewed": {"description": "Whether this template has been audited by Civis for security vulnerability and correctness.", "type": "boolean"}}}, "Object361": {"type": "object", "properties": {"name": {"description": "The name of the template.", "type": "string"}, "category": {"description": "The category of this report template.  Can be left blank.  Acceptable values are: dataset-viz", "type": "string"}, "archived": {"description": "Whether the template has been archived.", "type": "boolean"}, "codeBody": {"description": "The code for the Template body.", "type": "string"}, "provideAPIKey": {"description": "Whether reports based on this template request an API Key from the report viewer.", "type": "boolean"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}, "required": ["name", "codeBody"]}, "Object362": {"type": "object", "properties": {"id": {"type": "integer"}, "name": {"description": "The name of the template.", "type": "string"}, "category": {"description": "The category of this report template.  Can be left blank.  Acceptable values are: dataset-viz", "type": "string"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "useCount": {"description": "The number of uses of this template.", "type": "integer"}, "archived": {"description": "Whether the template has been archived.", "type": "boolean"}, "author": {"description": "The author of the template.", "$ref": "#/definitions/Object11"}, "techReviewed": {"description": "Whether this template has been audited by Civis for security vulnerability and correctness.", "type": "boolean"}, "authCodeUrl": {"description": "A URL to the template's stored code body.", "type": "string"}, "provideAPIKey": {"description": "Whether reports based on this template request an API Key from the report viewer.", "type": "boolean"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}}, "Object363": {"type": "object", "properties": {"name": {"description": "The name of the template.", "type": "string"}, "category": {"description": "The category of this report template.  Can be left blank.  Acceptable values are: dataset-viz", "type": "string"}, "archived": {"description": "Whether the template has been archived.", "type": "boolean"}, "codeBody": {"description": "The code for the Template body.", "type": "string"}, "provideAPIKey": {"description": "Whether reports based on this template request an API Key from the report viewer.", "type": "boolean"}}, "required": ["name", "codeBody"]}, "Object364": {"type": "object", "properties": {"name": {"description": "The name of the template.", "type": "string"}, "category": {"description": "The category of this report template.  Can be left blank.  Acceptable values are: dataset-viz", "type": "string"}, "archived": {"description": "Whether the template has been archived.", "type": "boolean"}, "codeBody": {"description": "The code for the Template body.", "type": "string"}, "provideAPIKey": {"description": "Whether reports based on this template request an API Key from the report viewer.", "type": "boolean"}}}, "Object365": {"type": "object", "properties": {"status": {"description": "The desired reviewed status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object366": {"type": "object", "properties": {"id": {"type": "integer"}, "scriptId": {"description": "The id of the script that this template uses.", "type": "integer"}, "userContext": {"description": "The user context of the script that this template uses.", "type": "string"}, "name": {"description": "The name of the template.", "type": "string"}, "category": {"description": "The category of this template.", "type": "string"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "useCount": {"description": "The number of uses of this template.", "type": "integer"}, "techReviewed": {"description": "Whether this template has been audited by Civis for security vulnerability and correctness.", "type": "boolean"}, "archived": {"description": "Whether the template has been archived.", "type": "boolean"}}}, "Object367": {"type": "object", "properties": {"scriptId": {"description": "The id of the script that this template uses.", "type": "integer"}, "name": {"description": "The name of the template.", "type": "string"}, "note": {"description": "A note describing what this template is used for; custom scripts created off this template will display this description.", "type": "string"}, "archived": {"description": "Whether the template has been archived.", "type": "boolean"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}, "required": ["scriptId", "name"]}, "Object368": {"type": "object", "properties": {"id": {"type": "integer"}, "scriptId": {"description": "The id of the script that this template uses.", "type": "integer"}, "userContext": {"description": "The user context of the script that this template uses.", "type": "string"}, "name": {"description": "The name of the template.", "type": "string"}, "category": {"description": "The category of this template.", "type": "string"}, "note": {"description": "A note describing what this template is used for; custom scripts created off this template will display this description.", "type": "string"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}, "useCount": {"description": "The number of uses of this template.", "type": "integer"}, "techReviewed": {"description": "Whether this template has been audited by Civis for security vulnerability and correctness.", "type": "boolean"}, "archived": {"description": "Whether the template has been archived.", "type": "boolean"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}}, "Object369": {"type": "object", "properties": {"name": {"description": "The name of the template.", "type": "string"}, "note": {"description": "A note describing what this template is used for; custom scripts created off this template will display this description.", "type": "string"}, "archived": {"description": "Whether the template has been archived.", "type": "boolean"}}, "required": ["name"]}, "Object370": {"type": "object", "properties": {"name": {"description": "The name of the template.", "type": "string"}, "note": {"description": "A note describing what this template is used for; custom scripts created off this template will display this description.", "type": "string"}, "archived": {"description": "Whether the template has been archived.", "type": "boolean"}}}, "Object372": {"type": "object", "properties": {"id": {"description": "The ID of this group.", "type": "integer"}, "name": {"description": "The name of this group.", "type": "string"}, "organizationId": {"description": "The organization associated with this group.", "type": "integer"}}}, "Object371": {"type": "object", "properties": {"id": {"description": "The ID of this user.", "type": "integer"}, "user": {"description": "The username of this user.", "type": "string"}, "name": {"description": "The name of this user.", "type": "string"}, "email": {"description": "The email of this user.", "type": "string"}, "active": {"description": "The account status of this user.", "type": "string"}, "primaryGroupId": {"description": "The ID of the primary group of this user.", "type": "integer"}, "groups": {"description": "An array of all the groups this user is in.", "type": "array", "items": {"$ref": "#/definitions/Object372"}}, "createdAt": {"description": "The date and time when the user was created.", "type": "string", "format": "date-time"}, "currentSignInAt": {"description": "The date and time when the user's current session began.", "type": "string", "format": "date-time"}}}, "Object373": {"type": "object", "properties": {"name": {"description": "The name of this user.", "type": "string"}, "email": {"description": "The email of this user.", "type": "string"}, "active": {"description": "The account status of this user.", "type": "string"}, "primaryGroupId": {"description": "The ID of the primary group of this user.", "type": "integer"}, "city": {"description": "The city of this user.", "type": "string"}, "state": {"description": "The state of this user.", "type": "string"}, "timeZone": {"description": "The time zone of this user.", "type": "string"}, "initials": {"description": "The initials of this user.", "type": "string"}, "department": {"description": "The deartment of this user.", "type": "string"}, "title": {"description": "The title of this user.", "type": "string"}, "prefersSmsOtp": {"description": "The preference for phone authorization of this user", "type": "string"}, "groupIds": {"description": "An array of ids of all the groups this user is in.", "type": "array", "items": {"type": "integer"}}, "vpnEnabled": {"description": "The availability of vpn for this user.", "type": "string"}, "otpRequiredForLogin": {"description": "The two factor authorization requirement for this user.", "type": "string"}, "user": {"description": "The username of this user.", "type": "string"}, "sendEmail": {"description": "The welcome email to this user.", "type": "boolean"}}, "required": ["name", "email", "primaryGroupId", "user"]}, "Object374": {"type": "object", "properties": {"id": {"description": "The ID of this user.", "type": "integer"}, "user": {"description": "The username of this user.", "type": "string"}, "name": {"description": "The name of this user.", "type": "string"}, "email": {"description": "The email of this user.", "type": "string"}, "active": {"description": "The account status of this user.", "type": "string"}, "primaryGroupId": {"description": "The ID of the primary group of this user.", "type": "integer"}, "groups": {"description": "An array of all the groups this user is in.", "type": "array", "items": {"$ref": "#/definitions/Object372"}}, "city": {"description": "The city of this user.", "type": "string"}, "state": {"description": "The state of this user.", "type": "string"}, "timeZone": {"description": "The time zone of this user.", "type": "string"}, "initials": {"description": "The initials of this user.", "type": "string"}, "department": {"description": "The deartment of this user.", "type": "string"}, "title": {"description": "The title of this user.", "type": "string"}, "githubUsername": {"description": "The GitHub username of this user.", "type": "string"}, "prefersSmsOtp": {"description": "The preference for phone authorization of this user", "type": "string"}, "vpnEnabled": {"description": "The availability of vpn for this user.", "type": "string"}, "otpRequiredForLogin": {"description": "The two factor authorization requirement for this user.", "type": "string"}, "phone": {"description": "The phone number of this user.", "type": "string"}}}, "Object375": {"type": "object", "properties": {"id": {"description": "The ID of this user.", "type": "integer"}, "name": {"description": "This user's name.", "type": "string"}, "email": {"description": "This user's email address.", "type": "string"}, "username": {"description": "This user's username.", "type": "string"}, "initials": {"description": "This user's initials.", "type": "string"}, "lastCheckedAnnouncements": {"description": "The date and time at which the user last checked their announcements.", "type": "string", "format": "date-time"}, "featureFlags": {"description": "The feature flag settings for this user.", "type": "object", "additionalProperties": {"type": "boolean"}}, "roles": {"description": "The roles this user has, listed by slug.", "type": "array", "items": {"type": "string"}}, "preferences": {"description": "This user's preferences.", "type": "object", "additionalProperties": {"type": "string"}}, "customBranding": {"description": "The branding of Platform for this user.", "type": "string"}, "groups": {"description": "An array of all the groups this user is in.", "type": "array", "items": {"$ref": "#/definitions/Object372"}}, "organizationName": {"description": "The name of the organization the user belongs to.", "type": "string"}, "createdAt": {"description": "The date and time when the user was created.", "type": "string", "format": "date-time"}, "signInCount": {"description": "The number of times the user has signed in.", "type": "integer"}}}, "Object376": {"type": "object", "properties": {"id": {"description": "The ID of the API key.", "type": "integer"}, "name": {"description": "The name of the API key.", "type": "string"}, "expiresAt": {"description": "The date and time when the key expired.", "type": "string", "format": "date-time"}, "createdAt": {"description": "The date and time when the key was created.", "type": "string", "format": "date-time"}, "revokedAt": {"description": "The date and time when the key was revoked.", "type": "string", "format": "date-time"}, "lastUsedAt": {"description": "The date and time when the key was last used.", "type": "string", "format": "date-time"}, "scopes": {"description": "The scopes which the key is permissioned on.", "type": "array", "items": {"type": "string"}}, "useCount": {"description": "The number of times the key has been used.", "type": "integer"}, "expired": {"description": "True if the key has expired.", "type": "boolean"}, "active": {"description": "True if the key has neither expired nor been revoked.", "type": "boolean"}, "constraintCount": {"description": "The number of constraints on the created key", "type": "integer"}}}, "Object378": {"type": "object", "properties": {"constraint": {"description": "The path matcher of the constraint.", "type": "string"}, "constraintType": {"description": "The type of constraint (exact/prefix/regex/verb).", "type": "string"}, "getAllowed": {"description": "Whether the constraint allows GET requests.", "type": "boolean"}, "headAllowed": {"description": "Whether the constraint allows HEAD requests.", "type": "boolean"}, "postAllowed": {"description": "Whether the constraint allows POST requests.", "type": "boolean"}, "putAllowed": {"description": "Whether the constraint allows PUT requests.", "type": "boolean"}, "patchAllowed": {"description": "Whether the constraint allows PATCH requests.", "type": "boolean"}, "deleteAllowed": {"description": "Whether the constraint allows DELETE requests.", "type": "boolean"}}, "required": ["constraintType"]}, "Object377": {"type": "object", "properties": {"name": {"description": "The name of the API key.", "type": "string"}, "expiresIn": {"description": "The number of seconds the key should last for.", "type": "integer"}, "constraints": {"description": "Constraints on the abilities of the created key.", "type": "array", "items": {"$ref": "#/definitions/Object378"}}}, "required": ["name", "expiresIn"]}, "Object380": {"type": "object", "properties": {"constraint": {"description": "The path matcher of the constraint.", "type": "string"}, "constraintType": {"description": "The type of constraint (exact/prefix/regex/verb).", "type": "string"}, "getAllowed": {"description": "Whether the constraint allows GET requests.", "type": "boolean"}, "headAllowed": {"description": "Whether the constraint allows HEAD requests.", "type": "boolean"}, "postAllowed": {"description": "Whether the constraint allows POST requests.", "type": "boolean"}, "putAllowed": {"description": "Whether the constraint allows PUT requests.", "type": "boolean"}, "patchAllowed": {"description": "Whether the constraint allows PATCH requests.", "type": "boolean"}, "deleteAllowed": {"description": "Whether the constraint allows DELETE requests.", "type": "boolean"}}}, "Object379": {"type": "object", "properties": {"id": {"description": "The ID of the API key.", "type": "integer"}, "name": {"description": "The name of the API key.", "type": "string"}, "expiresAt": {"description": "The date and time when the key expired.", "type": "string", "format": "date-time"}, "createdAt": {"description": "The date and time when the key was created.", "type": "string", "format": "date-time"}, "revokedAt": {"description": "The date and time when the key was revoked.", "type": "string", "format": "date-time"}, "lastUsedAt": {"description": "The date and time when the key was last used.", "type": "string", "format": "date-time"}, "scopes": {"description": "The scopes which the key is permissioned on.", "type": "array", "items": {"type": "string"}}, "useCount": {"description": "The number of times the key has been used.", "type": "integer"}, "expired": {"description": "True if the key has expired.", "type": "boolean"}, "active": {"description": "True if the key has neither expired nor been revoked.", "type": "boolean"}, "constraints": {"description": "Constraints on the abilities of the created key", "type": "array", "items": {"$ref": "#/definitions/Object380"}}, "token": {"description": "The API key.", "type": "string"}}}, "Object381": {"type": "object", "properties": {"id": {"description": "The ID of the API key.", "type": "integer"}, "name": {"description": "The name of the API key.", "type": "string"}, "expiresAt": {"description": "The date and time when the key expired.", "type": "string", "format": "date-time"}, "createdAt": {"description": "The date and time when the key was created.", "type": "string", "format": "date-time"}, "revokedAt": {"description": "The date and time when the key was revoked.", "type": "string", "format": "date-time"}, "lastUsedAt": {"description": "The date and time when the key was last used.", "type": "string", "format": "date-time"}, "scopes": {"description": "The scopes which the key is permissioned on.", "type": "array", "items": {"type": "string"}}, "useCount": {"description": "The number of times the key has been used.", "type": "integer"}, "expired": {"description": "True if the key has expired.", "type": "boolean"}, "active": {"description": "True if the key has neither expired nor been revoked.", "type": "boolean"}, "constraints": {"description": "Constraints on the abilities of the created key", "type": "array", "items": {"$ref": "#/definitions/Object380"}}}}, "Object383": {"type": "object", "properties": {"appIndexOrderField": {"description": "Order field for the apps index pages.", "type": "string"}, "appIndexOrderDir": {"description": "Oder direction for the apps index pages.", "type": "string"}, "resultIndexOrderField": {"description": "Order field for the results index page.", "type": "string"}, "resultIndexOrderDir": {"description": "Order direction for the results index page.", "type": "string"}, "resultIndexTypeFilter": {"description": "Type filter for the results index page.", "type": "string"}, "resultIndexAuthorFilter": {"description": "Author filter for the results index page.", "type": "string"}, "resultIndexArchivedFilter": {"description": "Archived filter for the results index page.", "type": "string"}, "importIndexOrderField": {"description": "Order field for the imports index page.", "type": "string"}, "importIndexOrderDir": {"description": "Order direction for the imports index page.", "type": "string"}, "importIndexTypeFilter": {"description": "Type filter for the imports index page.", "type": "string"}, "importIndexAuthorFilter": {"description": "Author filter for the imports index page.", "type": "string"}, "importIndexDestFilter": {"description": "Destination filter for the imports index page.", "type": "string"}, "importIndexStatusFilter": {"description": "Status filter for the imports index page.", "type": "string"}, "importIndexArchivedFilter": {"description": "Archived filter for the imports index page.", "type": "string"}, "exportIndexOrderField": {"description": "Order field for the exports index page.", "type": "string"}, "exportIndexOrderDir": {"description": "Order direction for the exports index page.", "type": "string"}, "exportIndexTypeFilter": {"description": "Type filter for the exports index page.", "type": "string"}, "exportIndexAuthorFilter": {"description": "Author filter for the exports index page.", "type": "string"}, "exportIndexStatusFilter": {"description": "Status filter for the exports index page.", "type": "string"}, "modelIndexOrderField": {"description": "Order field for the models index page.", "type": "string"}, "modelIndexOrderDir": {"description": "Order direction for the models index page.", "type": "string"}, "modelIndexAuthorFilter": {"description": "Author filter for the models index page.", "type": "string"}, "modelIndexStatusFilter": {"description": "Status filter for the models index page.", "type": "string"}, "modelIndexArchivedFilter": {"description": "Archived filter for the models index page.", "type": "string"}, "modelIndexThumbnailView": {"description": "Thumbnail view for the models index page.", "type": "string"}, "scriptIndexOrderField": {"description": "Order field for the scripts index page.", "type": "string"}, "scriptIndexOrderDir": {"description": "Order direction for the scripts index page.", "type": "string"}, "scriptIndexTypeFilter": {"description": "Type filter for the scripts index page.", "type": "string"}, "scriptIndexAuthorFilter": {"description": "Author filter for the scripts index page.", "type": "string"}, "scriptIndexStatusFilter": {"description": "Status filter for the scripts index page.", "type": "string"}, "scriptIndexArchivedFilter": {"description": "Archived filter for the scripts index page.", "type": "string"}, "projectIndexOrderField": {"description": "Order field for the projects index page.", "type": "string"}, "projectIndexOrderDir": {"description": "Order direction for the projects index page.", "type": "string"}, "projectIndexAuthorFilter": {"description": "Author filter for the projects index page.", "type": "string"}, "projectIndexArchivedFilter": {"description": "Archived filter for the projects index page.", "type": "string"}, "reportIndexThumbnailView": {"description": "Thumbnail view for the reports index page.", "type": "string"}, "projectDetailOrderField": {"description": "Order field for projects detail pages.", "type": "string"}, "projectDetailOrderDir": {"description": "Order direction for projects detail pages.", "type": "string"}, "projectDetailAuthorFilter": {"description": "Author filter for projects detail pages.", "type": "string"}, "projectDetailTypeFilter": {"description": "Type filter for projects detail pages.", "type": "string"}, "projectDetailArchivedFilter": {"description": "Archived filter for the projects detail pages.", "type": "string"}, "enhancementIndexOrderField": {"description": "Order field for the enhancements index page.", "type": "string"}, "enhancementIndexOrderDir": {"description": "Order direction for the enhancements index page.", "type": "string"}, "enhancementIndexAuthorFilter": {"description": "Author filter for the enhancements index page.", "type": "string"}, "enhancementIndexArchivedFilter": {"description": "Archived filter for the enhancements index page.", "type": "string"}, "preferredServerId": {"description": "ID of preferred server.", "type": "integer"}, "civisExploreSkipIntro": {"description": "Whether the user is shown steps for each exploration.", "type": "boolean"}, "registrationIndexOrderField": {"description": "Order field for the registrations index page.", "type": "string"}, "registrationIndexOrderDir": {"description": "Order direction for the registrations index page.", "type": "string"}, "registrationIndexStatusFilter": {"description": "Status filter for the registrations index page.", "type": "string"}, "upgradeRequested": {"description": "Whether a free trial upgrade has been requested.", "type": "string"}, "welcomeOrderField": {"description": "Order direction for the welcome page.", "type": "string"}, "welcomeOrderDir": {"description": "Order direction for the welcome page.", "type": "string"}, "welcomeAuthorFilter": {"description": "Status filter for the welcome page.", "type": "string"}, "welcomeStatusFilter": {"description": "Status filter for the welcome page.", "type": "string"}, "welcomeArchivedFilter": {"description": "Status filter for the welcome page.", "type": "string"}, "dataPaneWidth": {"description": "Width of the data pane when expanded.", "type": "string"}, "dataPaneCollapsed": {"description": "Whether the data pane is collapsed.", "type": "string"}, "notebookOrderField": {"description": "Order field for the notebooks page.", "type": "string"}, "notebookOrderDir": {"description": "Order direction for the notebooks page.", "type": "string"}, "notebookAuthorFilter": {"description": "Author filter for the notebooks page.", "type": "string"}, "notebookArchivedFilter": {"description": "Archived filter for the notebooks page.", "type": "string"}, "notebookStatusFilter": {"description": "Status filter for the notebooks page.", "type": "string"}, "workflowIndexOrderField": {"description": "Order field for the workflows page.", "type": "string"}, "workflowIndexOrderDir": {"description": "Order direction for the workflows page.", "type": "string"}, "workflowIndexAuthorFilter": {"description": "Author filter for the workflows page.", "type": "string"}}}, "Object382": {"type": "object", "properties": {"preferences": {"description": "A hash of user selected preferences. Values should be strings or null to indicate a key deletion.", "$ref": "#/definitions/Object383"}, "lastCheckedAnnouncements": {"description": "The date and time at which the user last checked their announcements.", "type": "string", "format": "date-time"}}}, "Object384": {"type": "object", "properties": {"name": {"description": "The name of this user.", "type": "string"}, "email": {"description": "The email of this user.", "type": "string"}, "active": {"description": "The account status of this user.", "type": "string"}, "primaryGroupId": {"description": "The ID of the primary group of this user.", "type": "integer"}, "city": {"description": "The city of this user.", "type": "string"}, "state": {"description": "The state of this user.", "type": "string"}, "timeZone": {"description": "The time zone of this user.", "type": "string"}, "initials": {"description": "The initials of this user.", "type": "string"}, "department": {"description": "The deartment of this user.", "type": "string"}, "title": {"description": "The title of this user.", "type": "string"}, "prefersSmsOtp": {"description": "The preference for phone authorization of this user", "type": "string"}, "groupIds": {"description": "An array of ids of all the groups this user is in.", "type": "array", "items": {"type": "integer"}}, "vpnEnabled": {"description": "The availability of vpn for this user.", "type": "string"}, "otpRequiredForLogin": {"description": "The two factor authorization requirement for this user.", "type": "string"}, "phone": {"description": "The phone number of this user.", "type": "string"}, "password": {"description": "The password of this user.", "type": "string"}}}, "Object385": {"type": "object", "properties": {"id": {"description": "The ID for this workflow.", "type": "integer"}, "name": {"description": "The name of this workflow.", "type": "string"}, "valid": {"description": "The validity of the workflow definition.", "type": "boolean"}, "fileId": {"description": "The file id for the s3 file containing the workflow configuration.", "type": "string"}, "user": {"description": "The author of this workflow.", "$ref": "#/definitions/Object11"}, "state": {"description": "The state of the workflow. State is \"running\" if any execution is running, otherwise reflects most recent execution state.", "type": "string"}, "nextExecutionAt": {"description": "The time of the next scheduled execution.", "type": "string", "format": "time"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}}}, "Object387": {"type": "object", "properties": {"urls": {"description": "URLs to receive a POST request at job completion", "type": "array", "items": {"type": "string"}}, "successEmailSubject": {"description": "Custom subject line for success e-mail.", "type": "string"}, "successEmailBody": {"description": "Custom body text for success e-mail, written in Markdown.", "type": "string"}, "successEmailAddresses": {"description": "Addresses to notify by e-mail when the job completes successfully.", "type": "array", "items": {"type": "string"}}, "failureEmailAddresses": {"description": "Addresses to notify by e-mail when the job fails.", "type": "array", "items": {"type": "string"}}, "successOn": {"description": "If success email notifications are on", "type": "boolean"}, "failureOn": {"description": "If failure email notifications are on", "type": "boolean"}}}, "Object386": {"type": "object", "properties": {"name": {"description": "The name of this workflow.", "type": "string"}, "fromJobChain": {"description": "If specified, create a workflow from the job chain this job is in, and inherit the schedule from the root of the chain.", "type": "integer"}, "definition": {"description": "The definition of the workflow in YAML format. Must not be specified if `fromJobChain` is specified.", "type": "string"}, "schedule": {"description": "The schedule of when this workflow will be run. Must not be specified if `fromJobChain` is specified.", "$ref": "#/definitions/Object64"}, "notifications": {"description": "The notifications to send after the workflow is executed.", "$ref": "#/definitions/Object387"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}}, "required": ["name"]}, "Object389": {"type": "object", "properties": {"urls": {"description": "URLs to receive a POST request at job completion", "type": "array", "items": {"type": "string"}}, "successEmailSubject": {"description": "Custom subject line for success e-mail.", "type": "string"}, "successEmailBody": {"description": "Custom body text for success e-mail, written in Markdown.", "type": "string"}, "successEmailAddresses": {"description": "Addresses to notify by e-mail when the job completes successfully.", "type": "array", "items": {"type": "string"}}, "failureEmailAddresses": {"description": "Addresses to notify by e-mail when the job fails.", "type": "array", "items": {"type": "string"}}, "successOn": {"description": "If success email notifications are on", "type": "boolean"}, "failureOn": {"description": "If failure email notifications are on", "type": "boolean"}}}, "Object388": {"type": "object", "properties": {"id": {"description": "The ID for this workflow.", "type": "integer"}, "name": {"description": "The name of this workflow.", "type": "string"}, "definition": {"description": "The definition of the workflow in YAML format. Must not be specified if `fromJobChain` is specified.", "type": "string"}, "valid": {"description": "The validity of the workflow definition.", "type": "boolean"}, "validationErrors": {"description": "The errors encountered when validating the workflow definition.", "type": "string"}, "fileId": {"description": "The file id for the s3 file containing the workflow configuration.", "type": "string"}, "user": {"description": "The author of this workflow.", "$ref": "#/definitions/Object11"}, "state": {"description": "The state of the workflow. State is \"running\" if any execution is running, otherwise reflects most recent execution state.", "type": "string"}, "schedule": {"description": "The schedule of when this workflow will be run. Must not be specified if `fromJobChain` is specified.", "$ref": "#/definitions/Object72"}, "nextExecutionAt": {"description": "The time of the next scheduled execution.", "type": "string", "format": "time"}, "notifications": {"description": "The notifications to send after the workflow is executed.", "$ref": "#/definitions/Object389"}, "archived": {"description": "The archival status of the requested object(s).", "type": "string"}, "hidden": {"description": "The hidden status of the object.", "type": "boolean"}, "createdAt": {"type": "string", "format": "time"}, "updatedAt": {"type": "string", "format": "time"}}}, "Object390": {"type": "object", "properties": {"name": {"description": "The name of this workflow.", "type": "string"}, "definition": {"description": "The definition of the workflow in YAML format. Must not be specified if `fromJobChain` is specified.", "type": "string"}, "schedule": {"description": "The schedule of when this workflow will be run. Must not be specified if `fromJobChain` is specified.", "$ref": "#/definitions/Object64"}, "notifications": {"description": "The notifications to send after the workflow is executed.", "$ref": "#/definitions/Object387"}}, "required": ["name"]}, "Object391": {"type": "object", "properties": {"name": {"description": "The name of this workflow.", "type": "string"}, "definition": {"description": "The definition of the workflow in YAML format. Must not be specified if `fromJobChain` is specified.", "type": "string"}, "schedule": {"description": "The schedule of when this workflow will be run. Must not be specified if `fromJobChain` is specified.", "$ref": "#/definitions/Object64"}, "notifications": {"description": "The notifications to send after the workflow is executed.", "$ref": "#/definitions/Object387"}}}, "Object392": {"type": "object", "properties": {"status": {"description": "The desired archived status of the object.", "type": "boolean"}}, "required": ["status"]}, "Object393": {"type": "object", "properties": {"id": {"description": "The ID for this workflow execution.", "type": "integer"}, "state": {"description": "The state of this workflow execution.", "type": "string"}, "mistralState": {"description": "The state of this workflow as reported by mistral. One of [\"running\", \"paused\", \"success\", \"error\", \"cancelled\"].to_sentence(last_word_connector: ', or')}", "type": "string"}, "mistralStateInfo": {"description": "The state info of this workflow as reported by mistral.", "type": "string"}, "user": {"description": "The user who created this execution.", "$ref": "#/definitions/Object11"}, "startedAt": {"description": "The time this execution started.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time this execution finished.", "type": "string", "format": "time"}, "createdAt": {"description": "The time this execution was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time this execution was last updated.", "type": "string", "format": "time"}}}, "Object396": {"type": "object", "properties": {"id": {"description": "The ID of the run.", "type": "integer"}, "jobId": {"description": "The ID of the job associated with the run.", "type": "integer"}}}, "Object395": {"type": "object", "properties": {"name": {"description": "The name of the task.", "type": "string"}, "mistralState": {"description": "The state of this task. One of idle, waiting, running, running_delayed, success, orerror", "type": "string"}, "mistralStateInfo": {"description": "Extra info associated with the state of the task.", "type": "string"}, "runs": {"description": "The runs associated with this task, in descending order by id.", "type": "array", "items": {"$ref": "#/definitions/Object396"}}}}, "Object394": {"type": "object", "properties": {"id": {"description": "The ID for this workflow execution.", "type": "integer"}, "state": {"description": "The state of this workflow execution.", "type": "string"}, "mistralState": {"description": "The state of this workflow as reported by mistral. One of [\"running\", \"paused\", \"success\", \"error\", \"cancelled\"].to_sentence(last_word_connector: ', or')}", "type": "string"}, "mistralStateInfo": {"description": "The state info of this workflow as reported by mistral.", "type": "string"}, "user": {"description": "The user who created this execution.", "$ref": "#/definitions/Object11"}, "definition": {"description": "The definition of the workflow for this execution.", "type": "string"}, "tasks": {"description": "The tasks associated with this execution.", "type": "array", "items": {"$ref": "#/definitions/Object395"}}, "startedAt": {"description": "The time this execution started.", "type": "string", "format": "time"}, "finishedAt": {"description": "The time this execution finished.", "type": "string", "format": "time"}, "createdAt": {"description": "The time this execution was created.", "type": "string", "format": "time"}, "updatedAt": {"description": "The time this execution was last updated.", "type": "string", "format": "time"}}}, "Object397": {"type": "object", "properties": {"taskName": {"description": "If specified, the name of the task to be retried. If not specified, all failed tasks in the execution will be retried.", "type": "string"}}}, "Object398": {"type": "object", "properties": {"workflowExecutionId": {"description": "The mistral id of the workflow execution.", "type": "string"}, "actionExecutionId": {"description": "The mistral id of the action execution.", "type": "string"}, "taskId": {"description": "The mistral id of the task.", "type": "string"}, "taskName": {"description": "The name of the task.", "type": "string"}, "civisRunId": {"description": "The run id associated with the action execution.", "type": "string"}}, "required": ["workflowExecutionId", "actionExecutionId", "taskId", "taskName", "civisRunId"]}}, "securityDefinitions": {"api_key": {"type": "apiKey", "name": "Authorization", "in": "header"}}, "security": [{"api_key": []}]}